<?xml version="1.0" encoding="windows-1252"?>
<node id="8215" title="Perl Object Oriented Meta-Tutorial" created="2000-04-20 17:40:26" updated="2005-08-15 11:48:01">
<type id="956">
perltutorial</type>
<author id="2675">
btrott</author>
<data>
<field name="doctext">
&lt;h1&gt;Perl Object Oriented Meta-Tutorial&lt;/h1&gt;

This is a meta-tutorial, in that it's meant not to teach the
reader how to use objects in Perl, but where to find
information about using objects in Perl. This may sound
irrelevant or useless, but with the amount of documentation
that ships with the standard Perl, a meta-tutorial might
be useful--or even necessary.&lt;p&gt;

Think of this as an extended index to various sources of
documentation on OO Perl.

&lt;h2&gt;Sideways&lt;/h2&gt;

Before you learn about objects in Perl, you need to be familiar
with certain concepts: references, as discussed in [doc://perlref]
and perlreftut (unfortunately, I can't find a working URL for
the latter),
and modules and packages, as discussed in [doc://perlmod].
This isn't, of course,
necessary if you're just trying to *use* objects
(as opposed to writing them, that is).&lt;p&gt;

But it may be helpful all the same.

&lt;h2&gt;Introductions&lt;/h2&gt;

If you're just beginning your OO education by learning OO
Perl, you need documentation that presumes no prior
knowledge of object-oriented principles. As such, these
sources are a good start for any OO beginner:&lt;p&gt;

&lt;ul&gt;
&lt;li&gt; [http://www.perl.com/doc/FMTEYEWTK/easy_objects.html|Easy Perl5 Object Intro]&lt;p&gt;

This is short, quick, and to-the-point. The assumption is
that you're not necessarily trying to learn how to write OO
Perl, just to use it; as the Intro says, the two are very
different, and if you're new to OO Perl and just want to
use OO modules on CPAN or elsewhere, you shouldn't assume
that you need to know anything about how to write OO code--
and this document will tell you everything you need to use it.&lt;p&gt;

&lt;li&gt; [doc://perlboot|Beginner's Object-Oriented Tutorial]&lt;p&gt;

This is Randal Schwartz's beginner's tutorial to OO Perl.
Its goal is to assume no prior OO knowledge and to give you
a good, clear start in using OO in general, and OO Perl
specifically. Randal's "animal" example works well for
teaching basic the basic principles.&lt;p&gt;
&lt;/ul&gt;

&lt;h2&gt;A Modicum of Experience&lt;/h2&gt;

So you're no longer (or never were?) a beginner to object-
oriented programming. Now you need to learn how to do it
in Perl. These are a good start.&lt;p&gt;

&lt;ul&gt;
&lt;li&gt; [doc://perltoot|Tom's Object-Oriented Tutorial for Perl]&lt;p&gt;

Tom Christiansen's perltoot is a very solid introduction to
using objects in Perl. It assumes familiarity with OO
principles (particularly in the sense that it uses OO
terms quite liberally), but doesn't assume that you know how
to use them in Perl. This, then, is more an introduction to
writing OO code in Perl than to writing OO code, in general.&lt;p&gt;

&lt;li&gt; [doc://perlobj|Perl Objects]&lt;p&gt;

The basic Perl Objects manpage. Again, this assumes that
you know OO concepts, and that you know how Perl
references work; but if you know both of those, this is
a good place to start.&lt;p&gt;
&lt;/ul&gt;

&lt;h2&gt;Advanced&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt; [doc://perlbot|Bag'o Object Tricks]&lt;p&gt;

This is an interesting document. I'm placing it in advanced
simply because it assumes that you've read the above
documents before reading this one. As it says quite clearly,
it is not a tutorial--it's meant to give you some ideas
and some tricks for object-oriented programming in Perl. Think
of this as a big picture, concept-oriented discussion of
OO Perl.&lt;p&gt;
&lt;/ul&gt;

&lt;h2&gt;All of the Above&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href=http://www.manning.com/Conway/&gt;Object Oriented Perl&lt;/a&gt;&lt;p&gt;

Damian Conway's OO Perl book doesn't fit into any of the
above categories, because it works for anyone from a novice
to an expert. This is an excellent book.&lt;p&gt;
&lt;/ul&gt;

&lt;h2&gt;The Others&lt;/h2&gt;

There are a good number of other resources on OO programming
in Perl; they're not listed above because they're not
solely focused on OO.

&lt;ul&gt;
&lt;li&gt; What list could be complete without mentioning
&lt;a href=http://www.oreilly.com/catalog/cookbook/&gt;The Perl Cookbook&lt;/a&gt;?
Well... not this one.&lt;p&gt;

&lt;li&gt; &lt;a href=http://www.oreilly.com/catalog/advperl/&gt;Advanced
Perl Programming&lt;/a&gt; has a good discussion of OO Perl,
particularly its sections on object persistence.&lt;p&gt;
&lt;/ul&gt;

&lt;hr/&gt;
&lt;small&gt;&lt;i&gt;2005-09-22 [jdporter] fixed some broken links to old documentation.&lt;/i&gt;&lt;/small&gt;
</field>
</data>
</node>
