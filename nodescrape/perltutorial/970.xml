<?xml version="1.0" encoding="windows-1252"?>
<node id="970" title="split and join" created="1999-11-11 21:46:09" updated="2006-12-27 07:48:31">
<type id="956">
perltutorial</type>
<author id="113">
root</author>
<data>
<field name="doctext">
Regular expressions can be used to break up strings.  This is what [perlfunc:split|split] does.  The [perlfunc:join|join] function on the other hand 
takes a list of strings and combines them together again.
&lt;BR&gt;&lt;BR&gt;
&lt;PRE&gt;&lt;CODE&gt;
$line="Bart  Lisa Maggie Marge Homer";
@simpsons=split(/\s/, $line); #splits $line and uses a piece of whitespace as a delimiter.

#@simpsons now contains ("Bart","","Lisa","Maggie","Marge","Homer");
#notice there is an extra space between Bart and Lisa so we get an empty element in the array there.
#lets try a better delimiter that will eliminate that from happening

@simpsons=split(/\s+/ $line); #now splits $line on 1 or more whitespace characters
#@simpsons now containts ("Bart","Lisa","Maggie","Marge","Homer");
&lt;/CODE&gt;&lt;/PRE&gt;
&lt;BR&gt;
Suppose we had a list of records of the form&lt;BR&gt;
Name|Phone Number|Address&lt;BR&gt;
We could open a file while which contained those records and do something like this:&lt;BR&gt;
&lt;PRE&gt;&lt;CODE&gt;
open FILE, "data.txt";
while(&lt;FILE&gt;)
   chomp;
   ($name,$phone,$address)=split(/\|/); #splits the default variable $_ on |
                                        #notice we have to put \| since | is a metacharacter
                                        #that represents or. Otherwise we'd be matching
                                        #empty string or empty string
                                        #then we place the results in variables instead of a list
                                        #the parentheses around the variable names need
                                        #to be there for this to work properly
   print "Name: $name\n";               #Now we print out the information in a more readable form
   print "Phone Number: $phone\n";
   print "Address: $address\n\n";
}
close FILE;
&lt;/CODE&gt;&lt;/PRE&gt;
&lt;BR&gt;
The function [perlfunc:join|join] can be used to reconstruct split up values into one string again. 
The syntax for calling this function is &lt;I&gt;join($glue, @array)&lt;/I&gt; or &lt;I&gt;join($glue,$var1,$var2....)&lt;/I&gt; The glue is simply
the string that goes between two strings to hold them together. 
Here are a few examples:&lt;BR&gt;
&lt;PRE&gt;&lt;CODE&gt;
$string=join(" ",@simpsons);
  #string now equals "Bart Lisa Maggie Marge Homer";
$name="Bob";
$phone="555-5555";
$address="42 Tulip Lane, Holland MI, 49423";
$string=join("|",$name,$phone,$address);
#$string is now equal to "Bob|555-5555|42 Tulip Lane, Holland MI, 49423"
&lt;/CODE&gt;&lt;/PRE&gt;

</field>
</data>
</node>
