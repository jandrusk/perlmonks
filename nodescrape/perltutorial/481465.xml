<?xml version="1.0" encoding="windows-1252"?>
<node id="481465" title="How to Ask a Question (With Test::More)" created="2005-08-06 06:25:43" updated="2005-08-12 11:01:01">
<type id="956">
perltutorial</type>
<author id="396583">
tphyahoo</author>
<data>
<field name="doctext">
The newbie has questions... the wise old monks have answers... but all too often newbie can't communicate the question, and the wise old monks fall over each other trying to guess what the newbie might have meant -- perhaps what [merlyn] meant when he wrote "the only personality trait Perl programmers have in common is that they're all pathologically helpful" (Programming Perl, "Perl Culture"). Examples of this happen all the time -- see for instance the recent post at [id://479266].
&lt;p&gt;
Well, pathological helpfulness (or xp greed :) ) has its bright side as a cultural feature, but enough is enough. 
&lt;p&gt;
With this series of posts I want to help everyone save time, newbies and wise old owls alike, by providing templates for how to ask certain common types of questions.  This is intended to be an alternative place to point newbies to, rather than the (also very helpful, but in a more general way) [id://172086].
&lt;p&gt;
As a bonus feature, newbies learning this will also learn Test::More, a powerful tool every monk should incorporate into their life.
&lt;p&gt;
The first example will be short. My comments are in ~ . Here goes.
&lt;p&gt;
******************BEGIN QUESTION TEMPLATE************************
&lt;p&gt;
O Wise Monks, I am having a problem I hope you can help me with. 
&lt;p&gt;
As you can see, in the following code, my zero test for the "multiplies_by_seven" function fails. ~the problem is isolated~
&lt;p&gt;
I tried googling on "perldoc shift" but no dice. Am I searching with the wrong search terms? ~the newbie tried to help himself first before going to the perlmonks~
&lt;p&gt;
What the heck am I doing wrong?
&lt;p&gt;
~The novice now posts his code using code tags: see [Writeup Formatting Tips]~
&lt;code&gt;
# 
use strict; #~the newbie has used the strictures~
use warnings; 
use Test::More qw(no_plan);

my ($result, $expected);

# ~convenient way to structure your input and expected output is to ~
# ~suck in the test data, which is everything after the __DATA_ line.~
while (&lt;DATA&gt;) {
	#~splits a string on spaces by default; see perldoc -f split~
	my ($input, $expected) = split; 
	my $output = multiply_by_seven($input);
	is($output, $expected, "testing $input");
}

sub multiply_by_seven {
	my $number = shift or die "no number";
	return $number*7;
} 

#~convenient way to structure your input and expected output, 
#assuming that you can use whitespace as the delimiter.
__DATA__
1 7
2 14
3 21
0 0
&lt;/code&gt;
I'm on Windows XP system using the standard ActiveState perl distribution. ~The novice mentions what system he is on.~
&lt;p&gt;
I got both standard and error output out of my test, into one output file, by running this with 
&lt;code&gt;perl multiplyBySeven.pl &gt; output.txt 2&gt;&amp;1 output.txt&lt;/code&gt;. ~Enables newbie to communicate his test result with a minimum of putzing around~
&lt;p&gt;
The output is:
&lt;code&gt;
ok 1 - testing 1
ok 2 - testing 2
ok 3 - testing 3
no number at multiplyBySeven.pl line 18, &lt;DATA&gt; line 4.
1..3
# Looks like your test died just after 3.
&lt;/code&gt;
&lt;p&gt;
Any ideas? Thanks very much in advance, o wise monks :)
&lt;p&gt;
******************END QUESTION TEMPLATE************************
&lt;p&gt;
That's basically it. Why the 0 test fails is left as an exercise for the reader :)
&lt;hr&gt;
Update: More tutorials in this series to come. See [tphyahoo]'s homenode for tutorials under construction :)</field>
</data>
</node>
