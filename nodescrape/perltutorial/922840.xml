<?xml version="1.0" encoding="windows-1252"?>
<node id="922840" title="Beginning Perl/Tk" created="2011-08-27 17:35:06" updated="2011-08-27 17:35:06">
<type id="956">
perltutorial</type>
<author id="912359">
perl.j</author>
<data>
<field name="doctext">
&lt;b&gt;&lt;h1&gt;Learning Perl/Tk&lt;/h1&gt;&lt;/b&gt;

&lt;h2&gt;Intro&lt;/h2&gt;

&lt;p&gt;Perl/Tk is probably the most widely known GUI for Perl. It is a great interface used by thousands of people. I am writing this to teach those with no previous knowledge of any programming language or GUI interface. You should know some Perl (you don't need to be an expert, but you need to know some basic/intermediate Perl) before you read this also. Perl/Tk is a module, so it should be fairly easy to get. If you don't know how to install modules, see [id://128077].&lt;/p&gt;

&lt;readmore&gt;&lt;h2&gt;Beginning Perl/Tk&lt;/h2&gt;

&lt;p&gt;Ok. Let's run a simple Perl/Tk program.&lt;/p&gt;
&lt;c&gt;
##Run this program and see what happens
use Tk;
my $mw = new MainWindow; 
my $label = $mw -&gt; Label(-text=&gt;"Hello World") -&gt; pack();
my $button = $mw -&gt; Button(-text =&gt; "Quit", 
		-command =&gt; sub { exit })
	-&gt; pack();
MainLoop;&lt;/c&gt;

&lt;p&gt;Let's take this line by line:&lt;/p&gt; 
&lt;ol&gt;
&lt;li&gt;The first line, &lt;c&gt;use Tk&lt;/c&gt;, tells your interpreter to use Tk. Without this line, the whole script would fail.&lt;/li&gt;
&lt;p&gt;&lt;/p&gt;
&lt;li&gt;The second line, &lt;c&gt;my $mw = new MainWindow&lt;/c&gt;, is creating the window you are going to put your widget(s). This is also mandatory. Without this, you would have no where to put your widget(s)!&lt;/li&gt;
&lt;p&gt;&lt;/p&gt;
&lt;li&gt;The third line, &lt;c&gt;my $label = $mw -&gt; Label(-text=&gt;"Hello World") -&gt; pack()&lt;/c&gt;, creates the text on your window. If this line were &lt;c&gt;my $ent = $mw -&gt; Entry() -&gt; pack()&lt;/c&gt;, it would have created an entry widget (you'll see an entry widget later in the tutorial). Here is a [http://search.cpan.org/~srezic/Tk-804.029/pod/UserGuide.pod#Standard_Tk_widgets|complete list of widgets].&lt;/li&gt;
&lt;p&gt;&lt;/p&gt;
&lt;li&gt;Lines 4-6 create a "quit" button that closes the window. There will be more in detail explanation of this later in the tutorial.&lt;/li&gt;
&lt;p&gt;&lt;/p&gt;
&lt;li&gt;The last line is mandatory in Tk programs. It loops through the code and invokes callback responses.&lt;/li&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/ol&gt;

&lt;h2&gt;Widgets&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
&lt;i&gt;&lt;h3&gt;Button&lt;/h3&gt;&lt;/i&gt;

&lt;p&gt;The button widget creates, you guessed it, a button! Some people learn by example. So if you need one, look at my first example. Lines 4-6 create a button that says "Quit". If you press the button, it ends the program. Of course, you could always change the subroutine in the code to make the button do whatever you want (you can also change the text on the button, but you knew knew that :).&lt;/p&gt;

&lt;i&gt;&lt;h3&gt;Entry&lt;/h3&gt;&lt;/i&gt;

&lt;p&gt;The entry widget makes a one-line text box the user can type into. Here's an example:&lt;/p&gt;
&lt;p&gt;&lt;c&gt;
use Tk;
my $mw = new MainWindow;
my $ent = $mw -&gt; Entry() -&gt; pack();
MainLoop;
&lt;/c&gt;&lt;/p&gt;

&lt;i&gt;&lt;h3&gt;Frame&lt;/h3&gt;&lt;/i&gt;

&lt;p&gt;Frames are very simple container widgets;they act as a container for widgets. Here is a great example of using frames that I found on [http://www.bin-co.com/perl/perl_tk_tutorial/widgets3.php|Bin-Co]:&lt;/p&gt;
&lt;p&gt;&lt;c&gt;use Tk;

#Global Variables
my $age = 10;
my $gender = "Male";

# Main Window
my $mw = new MainWindow;

#GUI Building Area
my $frm_name = $mw -&gt; Frame();
my $lab = $frm_name -&gt; Label(-text=&gt;"Name:");
my $ent = $frm_name -&gt; Entry();
#Age
my $scl = $mw -&gt; Scale(-label=&gt;"Age :",
	 -orient=&gt;'v',	 	-digit=&gt;1,
	 -from=&gt;10,		-to=&gt;50,
	 -variable=&gt;\$age,	-tickinterval=&gt;10);

#Gender
my $frm_gender = $mw -&gt; Frame();
my $lbl_gender = $frm_gender -&gt; Label(-text=&gt;"Sex ");
my $rdb_m = $frm_gender -&gt; Radiobutton(-text=&gt;"Male",  
		-value=&gt;"Male",  -variable=&gt;\$gender);
my $rdb_f = $frm_gender -&gt; Radiobutton(-text=&gt;"Female",
		-value=&gt;"Female",-variable=&gt;\$gender);


my $but = $mw -&gt; Button(-text=&gt;"Push Me", -command =&gt;\&amp;push_button);

#Text Area
my $textarea = $mw -&gt; Frame();
my $txt = $textarea -&gt; Text(-width=&gt;40, -height=&gt;10);
my $srl_y = $textarea -&gt; Scrollbar(-orient=&gt;'v',-command=&gt;[yview =&gt; $txt]);
my $srl_x = $textarea -&gt; Scrollbar(-orient=&gt;'h',-command=&gt;[xview =&gt; $txt]);
$txt -&gt; configure(-yscrollcommand=&gt;['set', $srl_y],
		-xscrollcommand=&gt;['set',$srl_x]);

#Geometry Management
$lab -&gt; grid(-row=&gt;1,-column=&gt;1);
$ent -&gt; grid(-row=&gt;1,-column=&gt;2);
$scl -&gt; grid(-row=&gt;2,-column=&gt;1);
$frm_name -&gt; grid(-row=&gt;1,-column=&gt;1,-columnspan=&gt;2);

$lbl_gender -&gt; grid(-row=&gt;1,-column=&gt;1);
$rdb_m -&gt; grid(-row=&gt;1,-column=&gt;2);
$rdb_f -&gt; grid(-row=&gt;1,-column=&gt;3);
$frm_gender -&gt; grid(-row=&gt;3,-column=&gt;1,-columnspan=&gt;2);

$but -&gt; grid(-row=&gt;4,-column=&gt;1,-columnspan=&gt;2);

$txt -&gt; grid(-row=&gt;1,-column=&gt;1);
$srl_y -&gt; grid(-row=&gt;1,-column=&gt;2,-sticky=&gt;"ns");
$srl_x -&gt; grid(-row=&gt;2,-column=&gt;1,-sticky=&gt;"ew");
$textarea -&gt; grid(-row=&gt;5,-column=&gt;1,-columnspan=&gt;2);

MainLoop;

## Functions
#This function will be executed when the button is pushed
sub push_button {
	my $name = $ent -&gt; get();
	$txt -&gt; insert('end',"$name\($gender\) is $age years old.");
}
&lt;/c&gt;&lt;/p&gt;
&lt;p&gt;I haven't got to all of the widgets and features in this program yet but we'll get there : ).&lt;/p&gt;

&lt;i&gt;&lt;h3&gt;Scales&lt;/h3&gt;&lt;/i&gt;

&lt;p&gt;Scales are, well, scales. There is not an easy way to explain them so I'll let you see one. Look at the frame on the left in the example for frames. That is a scale where you could pick your age.&lt;/p&gt;

&lt;i&gt;&lt;h3&gt;Radiobutton &amp; Checkbutton&lt;/h3&gt;&lt;/i&gt;

&lt;p&gt;A radiobutton is used to pick certain choice (usually). Once again I am going to refer you to the example for the frames widget. Do you see where you are supposed to pick a gender. That is a radiobutton.&lt;/p&gt;
&lt;p&gt;A checkbutton is just like a radiobutton, it just looks different. If you look at the example for frames, you'll see both. The area where you pick your occupation is the Checkbox.&lt;/p&gt;

&lt;i&gt;&lt;h3&gt;Listbox&lt;/h3&gt;&lt;/i&gt;

&lt;p&gt;A listbox displays a list of strings, one per string. To see an example of a listbox, see the frames example. The adding jobs section is a listbox.&lt;/p&gt;

&lt;p&gt;There are more widgets (even some that were in the example that I didn't show you) but this should give you a big kick start.&lt;/p&gt;

&lt;h2&gt;Things You May Not Have Understood&lt;/h2&gt;
&lt;p&gt;Let's go over some things you may not have understood. First off, &lt;c&gt;pack()&lt;/c&gt;. The basic idea of &lt;c&gt;pack()&lt;/c&gt;is  that any window or widget should be subject to a Tk geometry manager; the packer is one of the placement managers. For more on Geometry Managers,[http://www.bin-co.com/perl/perl_tk_tutorial/geometry_managers.php|see this webpage].&lt;/p&gt;

&lt;p&gt;&lt;c&gt;MainLoop&lt;/c&gt;. It is not an easy thing to explain in a small area so [http://oreilly.com/catalog/mastperltk/chapter/ch15.html|I wil refer you to this webpage].&lt;/p&gt;

&lt;p&gt;What is a GUI? GUI stands for Graphical User Interface. That is, a user interface based on graphics (icons and pictures and menus) instead of text.&lt;/p&gt;

&lt;h2&gt;Other Things You Should (and Should Not) Do&lt;/h2&gt;
&lt;p&gt;1) Never kill the MainLoop! Kill the loop, kill the window.&lt;/p&gt;
&lt;p&gt;2) Never use sleep in a GUI program because it will put the loop to sleep and become unresponsive.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Perl/Tk is a powerful, useful, easy-to-use tool. I hope this gave you a good start on how it is used. &lt;/p&gt;

&lt;h2&gt;See Also...&lt;/h2&gt;
&lt;p&gt;[http://search.cpan.org/~srezic/Tk-804.029/|Tk on CPAN], &lt;a href="?node_id=181977"&gt;Tk Tutorial, Featuring Your Very Own "Perl Sig/OBFU Decoder Ring"&lt;/a&gt;&lt;/p&gt;

&lt;/readmore&gt;</field>
</data>
</node>
