<?xml version="1.0" encoding="windows-1252"?>
<node id="135462" title="chop() and chomp()" created="2001-12-31 23:23:00" updated="2005-08-15 13:01:23">
<type id="956">
perltutorial</type>
<author id="103712">
Parham</author>
<data>
<field name="doctext">
documentation provided for the functions:&lt;BR&gt;&lt;BR&gt;

------------------------&lt;BR&gt;
&lt;B&gt;chomp&lt;/B&gt;&lt;BR&gt;
This is an alternative to the chop() function. It removes characters at the end of strings corresponding to the $INPUT_LINE_SEPARATOR ($/). It returns the number of characters removed. It can be given a list of strings upon which to perform this operation. When given no arguments, the operation is performed on $_.&lt;BR&gt;&lt;BR&gt;

&lt;B&gt;chop&lt;/B&gt;&lt;BR&gt;
This function removes the last character of a string and returns that character. If given a list of arguments, the operation is performed on each one and the last character chopped is returned.&lt;BR&gt;
------------------------&lt;BR&gt;&lt;BR&gt;

these two functions are very much alike... they both remove one (or more) characters from the end of a string... So how are they different you ask?  Chomp() ONLY removes new line characters (these are specified in $/), whereas Chop() removes anything that is at the end of the string (it really doesn't care what it is)...&lt;BR&gt;&lt;BR&gt;

let's demonstrate these two functions:&lt;BR&gt;&lt;BR&gt;

&lt;CODE&gt;
#chomp() EXAMPLES
$a = "abcdefghij";
chomp($a);
print $a;  #would return exact string... nothing to remove

$a = "abcdefghij\n";
chomp($a);
print $a;  #would return 'abcdefghij', removed newline

$a = "abcdefghij\n";
$b = chomp($a);
print $b;  #would return 1, it did remove something for sure

#chop() EXAMPLES
$a = "abcdefghij";
chop($a);
print $a;  #this would return 'abcdefghi'

$a = "abcdefghij";
$b = chop($a);
print $b;  #this would return 'j'
&lt;/CODE&gt;

remember.. this with a little bit of usefulness chop() can be the same as chomp()

&lt;CODE&gt;
$a = "abcdefghij\n";
if ($a =~ /\n$/) { chop $a; } #this could also be \r\n if on windows platform
&lt;/CODE&gt;

most of the time, you'll want to chomp(), but you might want to use chop() with regexes for the same output</field>
</data>
</node>
