<?xml version="1.0" encoding="windows-1252"?>
<node id="31109" title="XML::DOM" created="2000-09-05 12:10:34" updated="2005-08-15 01:19:11">
<type id="31663">
modulereview</type>
<author id="9346">
mirod</author>
<data>
<field name="doctext">
&lt;h3&gt;Description&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://theoryx5.uwinnipeg.ca/CPAN/data/libxml-enno/XML/DOM.html"&gt;
XML::DOM&lt;/a&gt; is a Perl implementation of W3C's DOM Level 1.&lt;/p&gt; It is one of the most widely used Perl XML modules. It is included in libxml-enno

&lt;p&gt;XML::DOM adds some Perl specific features to the W3C recommendation.&lt;/p&gt;

&lt;h3&gt;Why use XML::DOM?&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;you want to follow the W3C recommendation&lt;/li&gt;
    &lt;li&gt;you want to use one of the most stable XML modules in Perl&lt;/li&gt;
    &lt;li&gt;you already know the DOM, or you want to be able to use the same API in Java and in Perl
      in the future you want to interface easily with XML data bases&lt;/li&gt;
    &lt;li&gt;you are seriously masochistic!&lt;/li&gt;
  &lt;/ul&gt;
&lt;h3&gt;Why NOT use XML::DOM&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;you have to process huge documents&lt;/li&gt;
    &lt;li&gt;you need speed&lt;/li&gt;
    &lt;li&gt;the DOM API is ugly!&lt;/li&gt;
  &lt;/ul&gt;
&lt;h3&gt;Related Modules&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href="http://theoryx5.uwinnipeg.ca/CPAN/data/libxml-enno/XML/XQL/DOM.html"&gt;
        XML::XQL::DOM&lt;/a&gt; adds XQL support to XML::DOM.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://theoryx5.uwinnipeg.ca/CPAN/data/libxml-enno/XML/DOM/ValParser.html"&gt;
        XML::DOM::ValParser&lt;/a&gt; uses XML::Checker to validate doccuments at parse time.&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://theoryx5.uwinnipeg.ca/CPAN/data/XML-EasyOBJ/EasyOBJ/EasyOBJ.html"&gt;
        XML::EasyOBJ&lt;/a&gt; is a module built on top of XML::DOM with a simpler and more perlish interface. This kind of module is an excellent idea: it gives you the ease of programming of the
        Perl way while preserving DOM compatibility,&lt;/li&gt;
   &lt;a href="http://www.xmltwig.com/domtwig/"&gt;XML::DOM::Twig&lt;/a&gt;: a little module I wrote (it's not yet on CPAN) to emulate some of [XML::Twig] functions with XML::DOM, making it easier (and safer) to use.
  &lt;/ul&gt;

&lt;h3&gt;Personal notes&lt;/h3&gt;
&lt;p&gt;I don't like the DOM API at all! I think the model is clean
   but for some reason the interface is clunky and too verbose.
   It is extremely Java oriented, from the names of methods to
   the type of object they return.&lt;/p&gt;
&lt;p&gt;That said XML::DOM is a robust module, widely used and well
   designed. Plus the DOM is generally well documented and 
   some nice tutorials are available.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Warning&lt;/b&gt;: there are compatibility problems between various versions of XML::DOM and [XML::Parser]. The valid combinations are XML::Parser 2.30 + XML::DOM 1.33 and above or XML::Parser 2.30 + XML::DOM 1.29 (included in libxml-enno) or XML-Parser 2.27 (included in Activestate Perl on Windows) + XML::DOM 1.25 (the stand-alone version &lt;b&gt;not&lt;/b&gt; included in libxml-enno).&lt;/p&gt; 
</field>
<field name="itemdescription">
Implements W3C's Document Object Model</field>
<field name="usercomment">
Good module but the standard interface is really ugly</field>
<field name="identifier">
</field>
</data>
</node>
