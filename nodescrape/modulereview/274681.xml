<?xml version="1.0" encoding="windows-1252"?>
<node id="274681" title="Win32::Lanman" created="2003-07-16 00:20:26" updated="2005-08-15 13:09:23">
<type id="31663">
modulereview</type>
<author id="273734">
SyN/AcK</author>
<data>
<field name="doctext">
I've been very impressed with this module!  It provides all types of functionallity for working with the Windows NetBIOS shares.  Its amazing what information you can get with a simple connection to the IPC$ share.  I've used this module to create a script that will test the password strength of networks I administer with a brute-force attack method.  If a pass can be cracked in under 15 minutes, its changed.  It has great functionallity allowing you to pull back user information, share information, password policies, Transport information, etc. etc.  Deffinitely recommend taking a look at this!
&lt;p&gt;
I would, however, like to see a module that is able to connect to the windows SMB shares and send and receive packets with out using the standard Windows API to do so.  The reason being is that there is a hefty timeout delay for an incorrect password.
&lt;p&gt;
Per request, here are some source examples of how this can be useful: &lt;br&gt;&lt;br&gt;

1.) Make a connection to the IPC$ share.&lt;br&gt;&lt;br&gt;
&lt;code&gt;if (ConnectIPC($server, "", "", "")) {
	$this-&gt;{f_resultsTB}-&gt;AppendText("Null Session to $server successful.  \n");
	# Now try getting some information
	$this-&gt;{f_resultsTB}-&gt;AppendText("Connecting to Registry...\n");
	$this-&gt;{f_resultsTB}-&gt;AppendText("Succesful!\n");
	\&amp;RegConnect($server);
&lt;/code&gt;

&lt;p&gt;What have we done here?  We've established a connection to the server's ($server) IPC$ share with null credentials, i.e., ConnectIPC(server, user, pass, domain), with null for user, pass, and domain.&lt;/p&gt;
2.) Enumerate users
&lt;code&gt;$this-&gt;{f_resultsTB}-&gt;AppendText("[Local Users]  \n");
	@users = GetLocalUsers($server);
	if (@users) {
		foreach (@users) {
			$this-&gt;{f_resultsTB}-&gt;AppendText("$_  \n");
			$user = (split(/:/,$_))[1];
			$l_user = (split(/\\/,$user))[1];
			\&amp;GetUserInfo($server,$l_user);
		} 
	}
	else {
		$this-&gt;{f_resultsTB}-&gt;AppendText("Did not retrieve local users.  \n");
	}
	
&lt;/code&gt;
		
&lt;p&gt; Its important to recoginize that this should be within the if(ConnectIPC(...)) block.  I will post the whole code bellow. &lt;/p&gt;

&lt;code&gt;if (ConnectIPC($server, "", "", "")) {
	$this-&gt;{f_resultsTB}-&gt;AppendText("Null Session to $server successful.  \n");
	# Now try getting some information
	$this-&gt;{f_resultsTB}-&gt;AppendText("Connecting to Registry...\n");
	$this-&gt;{f_resultsTB}-&gt;AppendText("Succesful!\n");
	\&amp;RegConnect($server);

        $this-&gt;{f_resultsTB}-&gt;AppendText("[Local Users]  \n");
	@users = GetLocalUsers($server);
	if (@users) {
		foreach (@users) {
			$this-&gt;{f_resultsTB}-&gt;AppendText("$_  \n");
			$user = (split(/:/,$_))[1];
			$l_user = (split(/\\/,$user))[1];
			\&amp;GetUserInfo($server,$l_user);
		} 
	}
	else {
		$this-&gt;{f_resultsTB}-&gt;AppendText("Did not retrieve local users.  \n");
	}
}
else {
        $this-&gt;{f_resultsTB}-&gt;AppendText("Could not establish null session with $server.  \n");
}	
&lt;/code&gt;

&lt;p&gt; I apologize, this code has been made for Visual Perl.NET, hopefully some of you will find that helpful.  Here is a link to the actual Perl script I used to help me figure out the module: &lt;a href="http://www.roth.net/perl/scripts/scripts.asp?Null.pl"&gt;Null.pl&lt;/a&gt;</field>
<field name="itemdescription">
A module that handles all of the Lanman functionallity for Win32</field>
<field name="usercomment">
</field>
<field name="identifier">
</field>
</data>
</node>
