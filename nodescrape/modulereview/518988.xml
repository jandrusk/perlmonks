<?xml version="1.0" encoding="windows-1252"?>
<node id="518988" title="Text::MicroMason" created="2005-12-25 04:55:19" updated="2005-12-24 23:55:19">
<type id="31663">
modulereview</type>
<author id="114691">
Aristotle</author>
<data>
<field name="doctext">
&lt;p&gt;I really, really wanted to like this module. The documentation is great, the interface is bliss, the Mason syntax is cool, and having multiple syntaxes is excellent.&lt;/p&gt;

&lt;p&gt;Unfortunately, my experience was so painful that I gave up after a day of using it. Maybe it would have been different if I had come to it with a blank slate, but that is not my situation: I am currently getting increasingly fed up with Template Toolkit’s crippled mini language (a rant for another day), so I was looking for a different system that would let me use Perl in my templates.&lt;/p&gt;

&lt;p&gt;I have a batch of templates that need to be ported – but that has proven absolutely impossible. The error reporting is so indescribably abysmal that the excercise turned out worse than pulling teeth. Some errors segfaulted perl! I have no idea what the precise problem was, I gave up much before I could triangulate its exact location in the template. And triangulate I had to: simple template syntax errors result in nothing but an error on the line in your own code which invokes the compiled template; grave errors produce an enigmatic error from deep in the bowels of the module. If you’re lucky, there’s a dump of generated, hard to read Perl code from which you can try to decipher the problem. If you’re particularly unlucky, you get a segfault.&lt;/p&gt;

&lt;p&gt;Now, I’m possibly an outlier. It’s quite conceivable that these problems are far less of an issue when you’re starting from scratch with an empty file, instead of trying to port an existing template from one syntax to another by applying incremental search-and-replace patches and then running the result to see what breaks. But this experience still makes me wary for maintenance programmers who come in months after the fact to tweak a template.&lt;/p&gt;</field>
<field name="itemdescription">
A fast, lightweight, excellently documented und unbelievably painful to use template engine.</field>
<field name="usercomment">
</field>
<field name="identifier">
</field>
</data>
</node>
