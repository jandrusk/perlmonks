<?xml version="1.0" encoding="windows-1252"?>
<node id="31565" title="XML::Writer" created="2000-09-08 09:35:47" updated="2005-08-06 08:48:24">
<type id="31663">
modulereview</type>
<author id="9346">
mirod</author>
<data>
<field name="doctext">
&lt;h3&gt;Description&lt;/h3&gt;
  &lt;p&gt;&lt;a href="http://theoryx5.uwinnipeg.ca/CPAN/data/XML-Writer/Writer.html"&gt;
     XML::Writer&lt;/a&gt; generates XML using an interface similar to CGI.pm.  It
     allows various checks to be performed on the document and takes care of
     special caracter encoding.&lt;/p&gt; 
&lt;h3&gt;Why use XML::Writer?&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;you are generating XML documents "from scratch"&lt;/li&gt;
    &lt;li&gt;you are used to CGI.pm&lt;/li&gt;
    &lt;li&gt;XML::Writer is quite mature&lt;/li&gt;
  &lt;/ul&gt;
&lt;h3&gt;Why NOT use XML::Writer?&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;another method is more appropriate&lt;/li&gt;
    &lt;li&gt;you don't like CGI.pm!&lt;/li&gt;
  &lt;/ul&gt;
&lt;h3&gt;Related modules&lt;/h3&gt;
  &lt;p&gt;&lt;a href="http://theoryx5.uwinnipeg.ca/CPAN/data/XML-AutoWriter/XML/ValidWriter.html"&gt;
     XML::ValidWriter&lt;/a&gt; and 
     &lt;a href="http://theoryx5.uwinnipeg.ca/CPAN/data/XML-AutoWriter/XML/AutoWriter.html"&gt;
     XML::AutoWriter&lt;/a&gt; both aim at emulating XML::Writer
     interface:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;XML::ValidWriter performs some checks on the output document. Notably it
        checks whether the elements and attributes are declared in the DTD and whether
        you are closing the appropriate element.&lt;/li&gt;
    &lt;li&gt;XML::AutoWriter automatically generates missing start or end tags, based 
        on the DTD.&lt;/li&gt;
  &lt;/ul&gt;
  &lt;p&gt;&lt;a href="http://theoryx5.uwinnipeg.ca/CPAN/data/XML-Generator/Generator.html"&gt;
     XML::Generator&lt;/a&gt; and 
     &lt;a href="http://theoryx5.uwinnipeg.ca/CPAN/data/XML-Handler-YAWriter/YAWriter.html"&gt;
     XML::Handler::YAWriter&lt;/a&gt; are 2 other modules doing XML generation&lt;/p&gt; 

&lt;h3&gt;Personal notes&lt;/h3&gt;
  &lt;p&gt;At the moment XML::Writer seems to be the most mature and
     efficient module to generate XML. Of course a lot of the
     transformation modules such as XML::Simple, XML::DOM and 
     XML::Twig can also be used;&lt;/p&gt;
  &lt;p&gt;Of course plain print's can also be used, but I think
     that XML::Writer is a lot more convenient and adds
     some control over the generated XML.&lt;/p&gt;

&lt;h3&gt;Example&lt;/h3&gt;
&lt;code&gt;
#!/bin/perl -w

 use strict;
 use XML::Writer;
 use IO;

 my $doc = new IO::File("&gt;doc.xml");
 my $writer = new XML::Writer(OUTPUT =&gt; $doc);

 $writer-&gt;startTag("doc", class =&gt; "simple");           # tag + att
  $writer-&gt;dataElement( 'title', "Simple XML Document");# text elt
  $writer-&gt;startTag( "section");
   $writer-&gt;dataElement( 'title', "Introduction",      
                         no =&gt; 1, type =&gt; "intro");
   $writer-&gt;startTag( "para");
    $writer-&gt;characters( "a text with");
    $writer-&gt;dataElement( 'bold', "bold");
    $writer-&gt;characters( " words.");
   $writer-&gt;endTag( "para");
  $writer-&gt;endTag();                        # close section      
 $writer-&gt;endTag();                         # close doc
 $writer-&gt;end();                            # check that the doc
                                            # has only one element
 $doc-&gt;close(); # fixed (was $output-&gt;close(); ) as suggested by the post below&lt;/code&gt;</field>
<field name="itemdescription">
A CGI.pm-like module to write XML</field>
<field name="usercomment">
Robust and convenient, recommended over &lt;tt&gt;print&lt;/tt&gt;</field>
<field name="identifier">
</field>
</data>
</node>
