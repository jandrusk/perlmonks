<?xml version="1.0" encoding="windows-1252"?>
<node id="38309" title="Image::Magick" created="2000-10-25 08:20:46" updated="2005-08-15 16:07:19">
<type id="31663">
modulereview</type>
<author id="5348">
Corion</author>
<data>
<field name="doctext">
&lt;P&gt;&lt;B&gt;Update:&lt;/B&gt;&lt;I&gt;The Image Magick URL was updated, thanks to the good folks notifying me.&lt;/I&gt;&lt;/P&gt;
&lt;P&gt;&lt;TT&gt;[cpan://Image::Magick]&lt;/TT&gt; (also called PerlMagick) is the Perl wrapper for
&lt;A href="http://www.imagemagick.org"&gt;Image Magick&lt;/A&gt;,
a feature rich command line image manipulation program.
&lt;/P&gt;

&lt;H2&gt;What's good ?&lt;/H2&gt;
&lt;P&gt;If you have to manipulate images (crop, resize, convert,
montage, grayscale, paint), &lt;TT&gt;Image::Magick&lt;/TT&gt; is the 
thing for you. The ImageMagick suite of programs is seasoned
and converts images between a set of claimed 68 different formats.
If you're thinking about rolling your own image decoder, think
if maybe ImageMagick already does the stuff for you.
&lt;/P&gt;&lt;P&gt;
ImageMagick (and Image::Magick) is available for a lot of 
platforms, ranging from Win32 to VMS and OS/2.
&lt;/P&gt;
&lt;P&gt;Image::Magick is used widely for creating images, for example the
GeoCities banner generator uses Image::Magick.&lt;/P&gt;

&lt;H2&gt;What's bad ?&lt;/H2&gt;
&lt;P&gt;ImageMagick is written in &lt;TT&gt;C&lt;/TT&gt;. While there is not that
much bad about this immediately, this means, you have to find
and install a version of ImageMagick written for your platform.
&lt;/P&gt;&lt;P&gt;
The second thing is, that &lt;TT&gt;Image::Magick&lt;/TT&gt; also needs
some XS compiled, which means that you will need some way
to compile the XS for your target machine. ActiveState
has a Image::Magick for Perl 5.005_03 (build 522), but
there is no Image::Magick package for Perl 5.6 (build 613+)
- a nasty thing to find out after you upgrade.
&lt;/P&gt;
&lt;P&gt;The third thing that might keep you from using Image::Magick
is, that it is a bit overkill for some jobs. If you only need
the dimensions of an image, think about using &lt;TT&gt;[cpan://Image::Size]&lt;/TT&gt;,
and if the image types you want to accept are limited (think PPM),
a Perl decoder might be faster at load time/run time than
Image::Magick. But Image::Magick saves you the trouble
of finding a correct specification for your particular image
format and you can add new file formats easily.
&lt;/P&gt;
&lt;H2&gt;Things of note&lt;/H2&gt;
&lt;P&gt;The interface documentation for the Perl interface is installed
with the main ImageMagick package, the Image::Magick package
itself comes without documentation. The documentation itself
leaves some bits wishing, it takes some experimentation until
you get the parameter names right for every function call
you can make. Other than that, the design is OK, you
instantiate an Image::Magick object, into which you can
load one or more images, you convert them and then you write
them out to disk using the methods of the object. This
is mainly efficient for converting large batches of images.&lt;/P&gt;
&lt;P&gt;If you can't get Image::Magick to work from within Perl,
there is always the backup method of using shell commands
to &lt;TT&gt;convert&lt;/TT&gt; and &lt;TT&gt;mogrify&lt;/TT&gt;, which are two command
line programs that act as call-ins to the ImageMagick libraries
as well. &lt;/P&gt;</field>
<field name="itemdescription">
Manipulate picture files in various file formats</field>
<field name="usercomment">
If you can stand the weight, this is the only tool you need for image manipulation</field>
<field name="identifier">
</field>
</data>
</node>
