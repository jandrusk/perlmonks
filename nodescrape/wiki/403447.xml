<?xml version="1.0" encoding="windows-1252"?>
<node id="403447" title="pmdev wiki through 2004-10-25" created="2001-08-22 02:44:52" updated="2005-08-11 06:10:55">
<type id="68046">
wiki</type>
<author id="979">
vroom</author>
<data>
<field name="doctext">
&lt;p&gt;
&lt;b&gt;[Inner Scriptorium]&lt;/b&gt;&lt;i&gt; has more detailed discussion in it. If what you want to post is large or complex please put it there.&lt;/i&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;!-- ## DONT DELETE THIS TEMPLATE or ANYTHING ABOVE IT.
## New stuff always comes at the top, even replies.
&lt;p&gt;[name], 2004-09-30&lt;br /&gt;
&lt;/p&gt;&lt;hr /&gt;
--&gt;
&lt;p&gt;[ysth], 2004-10-25&lt;br /&gt;
[tye] had talked about expanding [openform] to preserve additional fields; apparently message inbox's recipient field is a candidate.  Query: might it
be good to rename it preserve_recipient and have openform automatically carry
forward any params matching /^preserve_/?  Or have a preserve param that tells
what other params to preserve, so it would be [href://?node=message inbox;recipient=106850;preserve=recipient]?&lt;p&gt;
Did I say that preserve is a really lousy name and someone else should suggest a better?
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[Limbic~Region], 2004-10-25&lt;br /&gt;
Not sure if this is considered "normal" behavior or not, but when you are looking at the pmdev inbox and you "talk" in the CB nodelet, the node changes to your inbox
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-10-24&lt;br /&gt;
When you talk of removing repliesinfo, would you just get rid of reply counts altogether?  Or query the note table for counts (which if I'm not mistaken wouldn't work for repliesbelow to notes)?  Seems a little drastic.  I guess we could get by with just an indicator of whether there were any replies or not, based on presence of at least one note with appropriate parent_node.
&lt;/p&gt;&lt;p&gt;
Re: Gods' Arcade, a link to [180652] might be nice (assuming the test server is current).
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], 2004-10-24&lt;br /&gt;
The [gods] can query the tomb for nuked nodes and there is even a node that lets you resurrect them.  I'll try to remember which one is the one that works, add it to the gods' arcade, and mark the others appropriately.
&lt;/p&gt;&lt;p&gt;
It might be better to just deprecate repliesinfo.  In the past, there appeared to be quite a few ways in which it doesn't stay up-to-date.
&lt;/p&gt;&lt;p&gt;
Rather than a setting for picking which type of reply count to show, I'd rather show both.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[ysth], 2004-10-24&lt;br /&gt;
Whoever added repliesdisplay to [user settings] (I'm resisting checking...), checkvar isn't good enough; it needs to be set to one of the fields in [node://repliesinfo;;dbtable].  See [crazyinsomniac]'s [href://?diff_against=328113;diff_show=MDIC;node_id=332660;reverse=0;diff_mode=line|patch].
&lt;/p&gt;&lt;p&gt;
On the subject of repliesinfo, looks like [id://60309] needs to update it (see [id://5829] and [id://10758] if anyone feels like doing this).
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[ysth], 2004-10-24&lt;br /&gt;
Interesting.  Node 17 is gone on the test server also.  But it was there at the time of [id://50833].
&lt;/p&gt;

&lt;p&gt;[demerphq], 2004-10-23&lt;br /&gt;
It seemd that id://17 has been deleted. I changed the [perlmeditation edit page] to have a parent of [formcontainer] instead. Not sure what was up there and if that was even the correct thing to do.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[tye], 2004-10-20&lt;br /&gt;
Must be. Sorry. I hovered over the newest archived message and was sure it showed me an old date.  I can't check that from here but I'm sure I just misread the date. Thanks.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[theorbtwo], 2004-10-21&lt;br /&gt;
It is, no doubt, refering to the pair of messages from [merlyn], which I just delt with (by telling him that [demerphq] is the contact he was looking for), and thus, archived.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[tye], 2004-10-20&lt;br /&gt;
I noticed the pmdev nodelet showed there was 1 new /msg for [pmdev] so I clicked it and found no recent messages.  I presume someone deleted the message.  Please don't do that.  If you deal with a message, then archive it.  If you see archived messages that are at least a week old, then you can delete those.  If you see unarchived message, then noone has bothered to deal with them.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-10-16&lt;br /&gt;
I was just looking at the documentation in [Everything/NodeCache.pm] and observed the comment 
&lt;em&gt;
&lt;blockquote&gt;
A possible issue that we might need to deal with in the future,
is the fact that entries to the version table do not get removed.
So potentially, the version table could grow to be the number of
nodes in the system.  A way to temporarily fix this problem right

now would be to delete rows from the version table where the
version is less than a certain value (say 50), that would remove
all of the little used nodes from the version table.
&lt;/blockquote&gt;
&lt;/em&gt;
I did a check on the version table and it is within ~10% of the size of the node table. I was thinking that it probably would be a good idea to drop the table and then let it rebuild itself. Id be really interested in seeing how the rebuild progrssed (ie how many days it would take before we hit 50% of the node table size, stats like that). Also a dump of the version table after a short period (say 30 minutes) would give us some really useful data on infrastructure nodes that are commonly used.
&lt;/p&gt;
&lt;p&gt;
Would there be any objections if I did this this weekend?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-10-13&lt;br /&gt;
Actually, what I asked for was [Free Nodelet].  At the moment, only [pmdev] members can add it at [Nodelet Settings].  Once you do, how to use it should be obvious.  There is an extra bit of code in [User Settings] to make the feature hidden from most users for now, so we should delete that bit if the nodelet is to stay.  Note that it doesn't load my huge scratchpad on each of my page loads nor search through it.  I won't say any more.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-10-13&lt;br /&gt;
Ive added a new nodelet, and set its equivelent up in the [Nodelet for Testing] which you can enable. This will go through all your scratchpads looking for sections marked &lt;code&gt;&lt;!--nodelet-begin--&gt;la-de-da&lt;!--nodelet-end--&gt;&lt;/code&gt;, string em together, parse any links and then display them as a nodelet. If you guys like we can make it permanent and public as the [Scratchpad Nodelet]. (It also appends links to view and edit your scratchpads).
&lt;/p&gt;
&lt;p&gt;
[tye] asked for this a while back and i said id do it, so here it is. :-)
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-10-13&lt;br /&gt;
Theres a new diff mode available. 'Ctx' which will show the patch with 5 lines of context. It actually works on only inserted or only deleted as well but i havent put links up for that (ctx needs to be an independt mode which it isnt right node). If you change the diff_mode to 'MDC' or 'MIC' youll get the relevent missing diff. The current Ctx mode shows both inserted and deleted. A settting needs to be added to allow folks to customize the number of lines. There is a hook in the node already under &lt;code&gt;$VARS-&gt;{diff_context_lines}&lt;/code&gt; which will default to 5. 
&lt;/p&gt;
&lt;p&gt;[demerphq], 2004-10-07&lt;br /&gt;
[BigLug] I have created [http://pmdev.flux8.com:8081/index.pl?node_id=324468|bl_sd1], [http://pmdev.flux8.com:8081/index.pl?node_id=324469|bl_sd2] and [http://pmdev.flux8.com:8081/index.pl?node_id=324470|bl_fp1] and one for [http://pmdev.flux8.com:8081/index.pl?node_id=324471|htmlcode] (which can be useful for shared stuff, or even implementing all three in one place) for you to patch against on the pmdev server.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[castaway], 2004-10-02&lt;br /&gt;
I'm not sure I agree with the [Perl Monks User Search] patch. It doesnt show the rep of ANY of their nodes to a person with negative experience, I think this should be amended to show "&lt;0" for any with reps below zero, and the correct rep for any above. I also think you missed the biggest one, at least with regard to negative reps, and not XP. The actual nodes themselves. I suspect that anyone 'proud' of their negative rep nodes will go to the nodes themselves to gloat over/check on the negative rep showing there. These could/should probably show "&lt;0" instead of the actual value. The point of both these suggestions is to show the person that only positive rep nodes are worth something.
&lt;p&gt;
I'm not entirely convinced of the point of all this, but not particularly opposed either.

&lt;p&gt;[chromatic], 2004-10-01&lt;br /&gt;
Alright, I've made a patch to [id://395839|fix Worst Nodes' invisibility] to users with negative XP, a patch to [id://395838|hide XP on homenodes for users with negative XP], and a patch to [id://395841|hide node reputations on user node lists] for users with negative XP.  Those are all of the feedback sources that come to mind.&lt;/p&gt;

&lt;p&gt;[davido], 2004-10-01&lt;br /&gt;
I think that's a fantastic idea [chromatic], and wish we had implemented it sooner.  Please also remember that a person's negative XP is also visible when they view their personal node.  If we want to remove it from the XP Nodelet, it should be removed from the home node too, when a person views his/her own node and it is in the negative.  Disabling anyone of zero or less XP from seeing the reputations on Worst Nodes seems like a good idea too.  It's time (IMO) to stop rewarding/feeding antisocial behavior.  While we're at it, let's make the text-entry boxes one-character column wide for people with negative XP, so that as they enter their posts they can only see one character at a time.  (That's a joke, by the way!)
&lt;/p&gt;
&lt;p&gt;[chromatic], 2004-10-01&lt;br /&gt;
I've just written two patches, one to [id://395631|hide XP information in the XP nodelet] for users with negative XP and one to [id://395632|hide node reputations from users with negative XP].  There are two goals here.  First, I'd like to avoid hurting the feelings unnecessarily of new users who've accidentally run afoul of the voting system.  There's no need to slap their hands at first.  Second, I'd like to avoid rewarding people who really want to gain downvotes.&lt;/p&gt;

&lt;p&gt;It might be worth putting a similar guard on [Worst Nodes].&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;[davido], 2004-09-30&lt;br /&gt;
WRT Catagorized Q&amp;A Answers, it is not overstepping reasonable bounds for [QandAEditors] to remove answers that don't provide a positive contribution to the topic at hand.  In SoPW, such removals would be going too far, but in Q&amp;A, the objective is different, and removal is fine.  I've found that the vast majority of replies to Answers are replies that point out the answer is flawed.  Sometimes the flaws are so bad that it's better to just remove the errant answer (beyond fixing, in other words).  In such a case, the reply to the answer becomes irrelevant, even if it could be reparented, and may as well be left parentless.  Yet the followup doesn't deserve to be deleted, and Q&amp;AEditors can't delete followups to Answers even if they wanted to.  Orphaned is really the only possibility for such nodes.  People should probably just not be posting followups to Answers, and instead /msg-ing QandAEditors when there's a need for a fix.  But that's not going to happen unless we remove the ability to reply to Answers, and even then people won't bother to /msg QandAEditors.  I'm not in favor of removing the ability to reply to Answers though, as that would eliminate the most commonly used means of people identifying mistaken Q&amp;A Answers.  ...it's just a troubled area all around.  I guess the point I'm trying to make is that I don't think there is a way for [pmdev] to completely guarantee that there will never be orphaned nodes anymore, at least with respect to Q&amp;A Answers.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-09-30&lt;br /&gt;
Making the root of Cat nodes be the section makes great sense to me.  For replies to Cat Answers it makes more sense for the root to be the question instead of the section.  Note that this would break [re-root nodes] but I think we can just fix [re-root notes] to deal with that.
&lt;/p&gt;&lt;p&gt;
No, I don't think creating a new node type and a bunch of new, mostly pointless nodes is a good idea.
&lt;/p&gt;&lt;p&gt;
Your code needs to deal with orphans whether these particular orphans stay or not.  So I don't see the orphans as &lt;em&gt;needing&lt;/em&gt; to be cleaned up.
&lt;/p&gt;&lt;p&gt;
I really hate nuking nodes in part because it makes nodes completely (except for quite inconvenient tricks available only to [gods]) disappear w/o explanation.  So I don't want to nuke orphaned replies to previously nuked nodes.  Resurrecting the nuked parents would be more appealing to me provided we have an apropriate alternative, but imagining alternatives I haven't come up with much that is very appealing.  Some may not consider reaping to be sufficient for some of these nuked nodes.
&lt;/p&gt;&lt;p&gt;
So just leave them orphaned.  Fix the "in reply to" and "in thread" links to point to some faqlet about orphaned nodes when the value is zero or points to a node ID that is no longer in the node table.
&lt;/p&gt;&lt;p&gt;
[Super Search] could use some enhancements to allow for conditions to be placed on the parent and root when searching for nodes.  That would allow orphans to be easily found by anyone who wishes to find individual cases that should be restored to some related thread or updated with pointers to something related.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-09-30&lt;br /&gt;
Ok, I rolled the changes back, the [Note Orphanage] is now empty. But now the re-parent tool wont work. Basically all of these are total orphans. The root-node has been deleted so the re-parent tricks dont work.  I still have my script to send them to the orphanage so I could always do that again. However another plan is to just recreate the roots. I could create a new nodetype "foster_parent" and just recreate the roots with a note explaining what they are. At least that way the orphans can be reviewed and considered, etc. What do you think?
&lt;/p&gt;
&lt;p&gt;[demerphq], 2004-09-30&lt;br /&gt;

Ok, I see what your saying here. A last point relates to the way Q&amp;A uses the note table. They DONT utilize the 'root_node' field. Which causes me trouble in the sandpit. Ive thought about makeing the root_node=parent_node, and also about making the root_node=relevent-QandSection. This means that all answers would be easily groupable into section, likewise all questions. Other ideas are welcome too. Ive also just though about ignoring the parent_node/root_node for categorized questions which may actually be the smartest thing.... Hmmm....
&lt;/p&gt;
&lt;p&gt;[tye], 2004-09-30&lt;br /&gt;
It is best to assume that some breakage is inevitable.  That doesn't make improvements undesirable.  But I'm not convinced that such should be a high priority.  The primary change I'd make would be to change how cat answers are nuked.  My first choice would probably be to stop nuking them and instead mark them as "removed" and no longer show them, such that any links to them still work and contain links to the question or containing section (or to a duplicate question or whatever).  They could also have their node type changed so that [Super Search] doesn't hit them.
&lt;/p&gt;&lt;p&gt;
Most of the other causes of orphans have been removed already.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-09-30&lt;br /&gt;
Agreed [tye], and thats one of the reasons the sandpit is offline to everybody but me right now. But the fact remains we had a bunch of bogus notes, i "fixed" them, and now im wondering if I should "unfix" them, reparent them ala [re-parent note] or just leave them dangling off of that special node.
&lt;/p&gt;
&lt;p&gt;
Also im curious as to a possible implication of your comment here, are you of the opinion that these bogus notes are inevitable and that improvments to prevent them occuring are unnecessary?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-09-30&lt;br /&gt;
It is best to fix the code to not mind the bogus data.  As is, you'll still have breakage the next time some bogus note shows up.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-09-30&lt;br /&gt;
At least some appear to be orphaned because they were comments to Q&amp;A answers that were deleted. The rest appear to be because the normal delete/reap process seems not to have been followed. This is of course conjecture however.
&lt;/p&gt;
&lt;p&gt;[grinder], 2004-09-30&lt;br /&gt;
Well, it certainly makes for interesting reading, it's like the Monestary on acid :)&lt;/p&gt;

&lt;p&gt;Indeed, I recall the threads to which some of these notes belong. I wonder how they became orphaned?&lt;/p&gt;

&lt;p&gt;[demerphq], 2004-09-30&lt;br /&gt;
I had some problems with the sandpit due to some nonexisting nodes being referenced by the node table. In the process of tracking it down I identified aroun 500 or so notes whose root or parent were nonexistant. I therefore wrote a little tool that reparented and rerooted them all under a special node: [id://392529] (which you TAKES A VERY LONG TIME TO LOAD AS THERE ARE HUNDREDS OF NODES INVOLVED). 
&lt;/p&gt;
&lt;p&gt;
There are some interesting notes in there, and I suspect that something can be done to reparent them better, but a lot could probably be deleted without affecting much. I have put the original note data in the content of the node. Each table represents a run by my code and shows the pre-updated values of the relevent records that are modified to do the reparenting.
&lt;/p&gt;
&lt;p&gt;
I hope this doesnt bother people, but the bogus records were really causing me trouble in the sandpit.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[theorbtwo], 2004-09-28&lt;br /&gt;
Done.  Just before you mentioned in here, in fact.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[Corion], 2004-09-28&lt;br /&gt;
As now the main CSS node ([234493]) is properly cached, the remaining [rawnode]s with CSS content (like [204962]) should be reblessed into [css] nodes too. The [href://?node_id=106927;whichtype=2544|nodelister] lists the following nodes to be reblessed:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;[id://2877]&lt;/li&gt;
&lt;li&gt;[id://5103]&lt;/li&gt;
&lt;li&gt;[id://6181]&lt;/li&gt;
&lt;li&gt;[id://6182]&lt;/li&gt;
&lt;li&gt;[id://181138]&lt;/li&gt;
&lt;li&gt;[id://204962]&lt;/li&gt;
&lt;li&gt;[id://227159]&lt;/li&gt;
&lt;li&gt;[id://227261]&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;p&gt;[grinder], 2004-09-24&lt;br /&gt;
Oh yeah, now I see :) I was viewing it on Firefox and was remarkably unimpressed by the results. Now that I see the Sandpit with Mozilla 1.8 it's something else again. Well done, Yves! I've got to say though (he says, tooting his own horn), that I do like the succinctness of my side bar, especially the terness for indicating age, and age of most recent reply. In a given thread I really don't care which note is the most recent, just that one is. The [http://grinder.perlmonk.org/sidebar-setup.html|sidebar is here] in case you haven't seen it.&lt;/p&gt;

&lt;p&gt;[Limbic~Region], 2004-09-22&lt;br /&gt;
It seems to be b0rked for FireFox .093 (both Windows and Debian), but works fine in FireFox 1.0PR.  [http://perlmonk.org/~limbicregion/sandbox.jpg|here] is what I get on Windows - not sure what [theorbtwo] is seeing for Debian
&lt;/p&gt;
&lt;p&gt;[Limbic~Region], 2004-09-21&lt;br /&gt;
Perhaps a view where all you see is root threads that are themselves newer than a configurable time or have replies that are newer than that time.  I tend to use NN by opening root threads in a new tab.  Perhaps even showing the timestamp next to it.  I am interested in old nodes that get new replies.  I would prefer that to the current NN.
&lt;/p&gt;
&lt;p&gt;[demerphq], 2004-09-21&lt;br /&gt;
Its bold because its less than an hour old.
&lt;/p&gt;
&lt;p&gt;[crazyinsomniac], 2004-09-21&lt;br /&gt;
Why are some entries &lt;B&gt;BOLD&lt;/B&gt;ed?
Is it because those are replies to root nodes which don't show up in NN?
If thats the case, I think those root nodes links should have some kind of gray backround.

&lt;/p&gt;
&lt;p&gt;[demerphq], 2004-09-21&lt;br /&gt;
I put together an threaded NN implmentation in [pmdev://demerphq's sandpit]. Id appreciate peoples thoughts and suggestions. I didnt make this a [scriptorium] as I dont want to publicly announce this at all yet. Just [pmdev] for now.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-09-14&lt;br /&gt;
Done with the patchable settings stuff.  Review appreciated.  There's a workaround in editvars and displayvars until the Everything.pm change gets
made (diff at [href://?node_id=390698;displaytype=displaycode]).
&lt;p&gt;
I haven't changed [patch completed page], but don't see that as a great priority.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], 2004-09-13&lt;br /&gt;
"I have more drastic changes to ... HTML filtering that I'll roll as I test them enough".  That includes the change you want. (:
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[theorbtwo], 2004-09-13&lt;br /&gt;
linkNode still gives a HREF rather then a href attribute, I suspect due to the call to htmlScreen on line 771.  It would be nice (though not terribly important) if this could be fixed -- AFAICS, it's the last remaining place where it's Everything::HTML's fault that we're outputting bad HTML -- most of the remaining places seem to be in CGI.pm, which I'll look at upgrading once you're finished with Everything/HTML.pm.&lt;/p&gt;
&lt;p&gt;Another way to solve it would be to make htmlScreen always consider tag and attribute names to be lowercase, no matter what case they're passed in as.  I'm not sure if this should be considered a "fix everything in one go" solution, or a "ugly hack that throws away the user's intent".
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], 2004-09-13&lt;br /&gt;
"I have more drastic changes to link handling ... that I'll roll as I test them enough".  That includes the change you want.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-09-12&lt;br /&gt;
Nice [tye] thanks. Its a pitty you didnt change the if ($nodeloc) that prevents pad:// and other locationless pm tags from being used. Maybe next time you roll out changes? Or I guess ill do it once somebody tells me the connection details for uploading PM modules.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-09-12&lt;br /&gt;
My version of [Corion]'s patches to [Everything/HTML.pm] are in production.
&lt;/p&gt;&lt;p&gt;
You can also now use | and :// in square-bracket links without causing problems.
&lt;/p&gt;&lt;p&gt;
I have more drastic changes to link handling and HTML filtering that I'll roll as I test them enough.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-09-10&lt;br /&gt;
Ive reorganized [reordernodelets] so you dont have to hack the nodes code to configure what nodelets are seen. It now uses the [nodelet permissions] setting to do the usergroup and exceptional configuration.
&lt;/p&gt;
&lt;p&gt;
Regarding [grinder]s idea. This links into a longer running point. We need a convenient way to get a "type string" from a $NODE. By this I mean a string similar to those returned by [Super Search]. So for instance a [perlquestion] shows as a "SOPW" (or something to that effect), and a note that is a reply to a perl question shows as a "Re: SopW". This could then be used in a number of places in the code where showing a "pretty/smart" nodetype string is wanted. Then [grinders] patch would be much nicer. Please have a look at [typelink] for an initial implementation.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[grinder], 2004-09-10&lt;br /&gt;
I have posted a sketch of a patch at [id://390177]. The idea is to add the nodetype of the considered node to the NtC full page display. I find that sometimes it takes more time to vote on a consideration to move, because while it may be clear as to where the person thinks it should go, it's not always clear where it's coming from.&lt;/p&gt;

&lt;p&gt;I used &lt;tt&gt;$HTMLVARS{embed_node}&lt;/tt&gt; rather than &lt;tt&gt;$NODE&lt;/tt&gt; because I'm not familiar enough with the codebase to figure out how to conjure up a &lt;tt&gt;$NODE&lt;/tt&gt; out of thin air, and took a punt that the former refers to the same thing as the latter. Otherwise please amend to suit. And if someone has a better idea of how to present the info, go right ahead.&lt;/p&gt;
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[diotalevi], 2004-09-09&lt;br /&gt;
In unrelated news, there's [id://389687] so note bodies are tagged with the CSS class pmnote-#####. I did this just so I could cause more of [Wassercrats] stuff to be invisible to me.&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-09-09&lt;br /&gt;
Heh. My feeling was that the primary proponent of restrcited access was you [tye] so if you have no objections then I have none either. Depending on my time availability ill look into this, assuming someone doesnt beat me to it.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[theorbtwo], 2004-09-09&lt;br /&gt;
Just wanted to say real quick that I'm with [tye] on this one.  If trolls become a big problem, we can then limit it a bit, but I see no problem with starting this way, and certianly hope it works well.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], 2004-09-09&lt;br /&gt;
Yes, the whole of the threads will be visible to the world.  Part of the point is to make the process more open.  Non-cabalist will even be able to reply.  They can even choose to see the topics in Newest Nodes if they go to the effort (filtering pmdevtopic replies from NN if they don't go to that effort will be a to-do item).
&lt;/p&gt;&lt;p&gt;
For sensitive items (the exception), the wiki and patch replies can still be used.  If we have a *lot* of sensitive discussions, then some top-secret section could be created later, but I don't think there will be a need and I don't think it is a good idea either.
&lt;/p&gt;&lt;p&gt;
So it will be that easy.
&lt;/p&gt;&lt;p&gt;
So feel free to jump in and do it, [demerphq] (or anyone).  Just post in here that you've started.  I doubt [BigLug] would mind much.  [BigLug], if you beat everyone to it, please feel guilty if you don't start working on this. (:
&lt;/p&gt;&lt;p&gt;
Thanks (sincerely).
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-09-09&lt;br /&gt;
Ok, well I guess this has moved from a subject of debate to a fait acompli. I was actually going to do this myself last night. But some objections in the CB as to which groups it should be for followed by some kind of connectivity problem killed that. However I'd like to point out that doing this wont be as simple as [tye] outlines below.  Unless of course you wish to make all replies to [pmdevtopic]'s world readable. Had this been restricted to pmdev only we could have exploited [pmdevnote]'s for the replies however as it is I suspect that we will have to either change the permissioning on [pmdevnote]s or create a new type called 'cabalnote' or something with the appropriate permissions.  Furthermore its not totally straight forward how to make 'pmdevnote's or 'cabalnote's be the correct reply type to a [pmdevtopic]. The best thing to do is to search for mentions of [pmdevnote] in the code base and then handle [pmdevtopic]s in a similar way to how replies to [patches] are handled. Lastly IMO the "section" view is the least 
difficult part of this. Ive done this before on pmdev and its fairly straightforward.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-09-08&lt;br /&gt;
Congratulations, [BigLug], you've volunteered.  I've created nodetype [pmdevtopic] and allowed [cabal]ists to create them.  Now [BigLug|you] just need to write a node display page and a section page based on those for [Perl News] and SoPW and submit them as patches to [request for new code] with the title and nodetype in the 'reason'.
&lt;/p&gt;&lt;p&gt;
The only reason I say "SoPW" above is because the Perl News display page doesn't make it obvious that you can edit your own root nodes there so follow SoPW's lead in that one respect but Perl News' for all else.
&lt;/p&gt;&lt;p&gt;
For non-cabalists, replace the "add" form with an explanation that if 'you' want to post a node here, you'll have to get a cabalist to do it for you.
&lt;/p&gt;&lt;p&gt;
Don't worry about approval or an archive or front-paging or moving or consideration or special-casing voting.  A few of those bells can be added later.
&lt;/p&gt;&lt;p&gt;
TIA.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[BigLug], 2004-09-09&lt;br /&gt;
Whats the chance on implementing an idea I saw here a while ago where PMDev becomes a section rather than a Wiki. Then we can keep an eye on conversations rather than have them drop out of site because someone said something controversial! We'd need two sections IMO: PMDev and PMDev Archive. Once conversations finish the OP (or a God) could elect to have the conversation moved to the archive. One reason for this is because IE for mac won't allow me to edit Wikis over 32K. I had to jump into Safari to post this notice. If we have a threaded conversation we don't have that problem. Now, read my next post and forget this idea :P
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[BigLug], 2004-09-09&lt;br /&gt;
Aaargh ... please can we stop talking about GMT? The correct term is UTC. GMT = UTC+0. Also, acroymns for time zones should not be used as they're ambiguous. IMHO, we should use ISO datetimes everywhere (YYYY-MM-DD HH:MM:SS) and never use Epoch. The datetime should either be in UTC everywhere or in the users preference timezone everywhere. We should never mix it up.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[eric256], 2004-09-08&lt;br /&gt;
I've posted a draft of a post about "Recent PM Development" on my [pad://eric256].  I would like to get it reviewd, updated, etc, to then post into PMD.  Suggestions for a title are welcomed, added examples of use of the CSS, and any more changes. I tried to keep the topic of this one CSS and display changes. If there are other changes that users would be interested in I would like to include those as well.  Please post here or msg me with your ideas, suggestions, etc. Thanks!
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[ysth], 2004-09-07&lt;br /&gt;Mea culpa; I should have taken time to list the advantages I saw or stayed quiet.
&lt;p&gt;
First of all, arguments for having *time:// at all: We've had the server-time on reaped nodes for not very long, and I've  had occasion to compare it to the times other nodes were created twice in that time.  The comparison is easier if both are in my localtime, but I could live with GMT instead since I don't have all that much trouble mentally converting.
&lt;p&gt;
Another use I can think of offhand is giving a deadline for something; for instance, the solutions for the most recent qotw could be posted beginning [localtime://20040904005014].  I had occasion to /msg this to someone and I
think I messed up the conversion (and I may have messed up putting it in
servertime now -- you might not find GMT easier, but I know I would).
&lt;p&gt;
Both doctext and messages are available to xml clients in unrendered form;
I think it behooves us to make the text still readable for clients that don't handle this link type.  (That's actually an argument for time:// rather than
localtime://; a user could be forgiven for being somewhat confused by &amp;#91;localtime://some ISO GMT time&amp;#93;.)
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-09-07&lt;br /&gt;
My intention with introducing this linktype was not so much that users could or would use it (although I anticipated that at least a moderate few would) but for infrastructure purposes such as reaped nodes and a few other nooks and crannys. My personal feeling was to facilitate 'now' as an argument because currently we can't do an argumentless prefix type call and I wanted a way to get at "now" (as in the time the link the was rendered, not the time the link was submitted). Likewise I felt that an argument matching \D would be a GMT timestamp and when it was pure numeric it would be an epoch seconds value.  There was some talk of user being able to provide date/times in their localtime and have it localized to the viewing users time. I see that as a nice hack that isn't worth the effort. 
&lt;/p&gt;
&lt;p&gt;
So in short I just want an easy way I can embed a user localized timestamp. The only reason that I can think of for a user to want to use this is to not use the tick tock nodelet, but rather put a localtime:// link in their personal nodelet. Other than that my orientation was towards making embedded timestamps in dynamic node content easier. And it does make the reaped nodes look nicer.
&lt;/p&gt;
&lt;p&gt;
WRT time and the tickers: I dont see a lot of reason in providing multiple time formats with CB content. There is already precedent for request based changes in the XML content returned. And there is even [new_xml_fling|infrastructure] for easily handling the request. If for instance we added an additional xmlstyle="gmt_timestamps" then the current code for handling the query will cover it, and the actual usage boils down to something like:
&lt;/p&gt;
&lt;code&gt;
  $time=make_gmt($time) if $xmlstyle{gmt_timestamps};
&lt;/code&gt;
&lt;p&gt;
Continuing in this vein we can make xmlstyle="localized_timestamps" provide localized timestamp information. Any older client will never even know there is a difference. (Don't forget multiple xmlstyles can be used at once.)
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-09-07&lt;br /&gt;
What was last discussed (other than trivia) was [sporty]'s request to have the time(s) reported in XML feeds to be more useful and more consistent.
&lt;/p&gt;&lt;p&gt;
As for "Can you give examples of what output you are talking about?":  The only use for *time:// that I've heard is to allow the time of reaping to be displayed in the user's local time instead of just putting the time in as a string &amp;#91;in GMT unlike the current(recent?) "server local time" + "(EST)"&amp;#93;.  I'm just fine with using GMT for such time displays like we've been doing for a long time in [Other Users], for example.
&lt;/p&gt;&lt;p&gt;
I particularly dislike the idea of trying to invent input munging to support *time://now.
&lt;/p&gt;&lt;p&gt;
As for what to allow after *time:// (other than "now"), the only use I've heard is for reaping so putting time() there is certainly easier than formatting a GMT time string and I consider that an advantage.  Epoch seconds are also unambiguous.
&lt;/p&gt;&lt;p&gt;
Using "server local time" in ISO order (w/ or w/o punctuation) means that [parseTimeInString]'s code could simply be reused here.  But I'd rather move the servers to GMT before releasing such a feature if such code reuse is important.
&lt;/p&gt;&lt;p&gt;
I presume you seeing advantages (which I guess you didn't want to state or had already stated and wanted us to go look up even though you can't follow what we are talking about) to using GMT (in ISO order but w/o punctuation) is because you envision some use for this feature where people will type in dates and these people will prefer to type in dates in GMT?  I'd think people would more likely cut'n'paste a date-time from somewhere and converting to GMT isn't something I can do in my head very well so I'd probably resort to a helper program which means epoch seconds isn't any worse for me.  But using my chosen timezone would be better but that opens a whole can of worms because I can change my local timezone so let's just not go there.
&lt;/p&gt;&lt;p&gt;
But then I don't envision much good use for this feature by people anyway so I say we have very little to go on as far as choosing the best way to implement something that we haven't figured why we should have it at all.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[ysth], 2004-09-07&lt;br /&gt;
I've lost track of what's being discussed; it seems to have widen from "what do you put after (local)?time://".  Can you give examples of what output you are talking about?
&lt;/p&gt;&lt;p&gt;
Re: localtime:// vs. time://, since the intent is to have something rendered as a user's localtime (if known), localtime makes more sense to me.
&lt;/p&gt;&lt;p&gt;
Re: Argument to localtime://, I see only disadvantages to using epoch seconds rather than an ISO GMT time (e.g. localtime://200409071724).  What is the advantage?
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], 2004-09-07&lt;br /&gt;
Calling it "&lt;b&gt;GMT&lt;/b&gt; epoch seconds" implies that we might want to use some non-GMT "epoch seconds" and so is confusing and not a term I will use (or that I think we should adopt).  "1970(GMT) epoch seconds" would be fine in cases where we are worried that some might wonder if we are using the old-MacOS epoch or some other less common epoch (but I think "1970 epoch seconds" works as well for that since I've not run into any epoch points that were based on anything other than midnight GMT anyway).
&lt;/p&gt;&lt;p&gt;
The server time zone will be changing so I don't see a problem with changing any uses of "server time" in tickers to be in a different, per-user time zone.  The reason for using user's localtime is two fold.  First, it makes the timestamp easy to parse (as [theorbtwo] stressed) for humans.  Second, it makes it easy for programs to present the time as the user prefers to see it.
&lt;/p&gt;&lt;p&gt;
Note that this per-user time zone is based on the cookie used to fetch the ticker, not on the author of the chatter or message or node.  The very few programs that aggregate both public chatter and private messages for multiple users within a single instance will likely not have much use for the per-user timestamp.  The user XML display reports the timezone and time format of the user so converting from epoch seconds to any user's prefered format is only a couple of lines of code (and an extra XML fetch) -- not a lot of work if you want to do it, but enough work that we should just provide the user's prefered time for users reading the ticker directly and to simplify the common case of just displaying the time as presented.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[theorbtwo], 2004-09-06&lt;br /&gt;
Tickers should be easily parsable first, before all other concerns.  That would seem to indicate times should be in GMT epoch seconds, because that requires no external knowladge of what the user's timezone is set to.  Giving the times in server-time also requires no knowladge of the user's timezone setting, but does require the ability to convert between timezones that are neither GMT nor the user's localtime, which isn't always a simple propisition.  OTOH, we currently give times in db time, and I see no reason to stop doing that -- just additionaly give the time in GMT epoc seconds.&lt;/p&gt;
&lt;p&gt;I think time:// (which I prefer as a name to localtime://) should take input in GMT epoch seconds, because it's easily findable in any (programming) language people might be using to input, and it's easy for us to parse.  Supporting the string 'now' as well might be nice.  It's not easy for the user to input, but I don't see users inputting this much.&lt;/p&gt;
&lt;p&gt;I don't like the idea of differenciating between &lt;code&gt;('foo', undef)&lt;/code&gt;, and &lt;code&gt;'foo'&lt;/code&gt; in the returns from link handlers, but I suppose I can live with it.&lt;/p&gt;
&lt;p&gt;Oh, I just reread [tye]'s statement -- if he means "both in &amp;#91;GMT] epoch seconds and in the user's localtime", I agree, that wouldn't be bad, though we'd also have to continue to provide what we provide now, and three ways of writing the same time seems like overkill.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-09-06&lt;br /&gt;
Timestamps in tickers should be epoch seconds and user's localtime.
&lt;/p&gt;&lt;p&gt;
I don't think we should try to implement input filtering for something we have no need for anyway.  I'd rather just put GMT in places than get this carried away.
&lt;/p&gt;&lt;p&gt;
As for link handlers returning 3 values, 2 is enough; return URL followed by optional alternate title/description or '' followed by non-link HTML.  And returning nothing means the spec was invalid so just turn the &amp;#91; and &amp;#93; into entities.
&lt;/p&gt;&lt;p&gt;
But I'd actually make the transition much simpler and first tell handleLinks that 1 value means HTML and 2 values means URL followed by title/desc but a title/desc of '' means use the default.  Then the link handlers can be fixed whenever instead of trying to roll a *.pm change and a bunch of setting changes all at once (which can't be done anyway).
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[sporty], 2004-09-06&lt;br /&gt;

On the local time thing, is there any reason "we" can't filter (time://...) to utc/epoch on input?  Then we could display it to the user's timezone setting. 
&lt;p&gt;
q pointed out that we have a lot of places for input.  He's right.  But can it be done as a general input filter?  I can't speak for mod_perl, as I've played with it about 5 times, but can a module be written so that it filters all input?  I know it is possible under the servlet spec, but this is modperl :)  Just a thought.&lt;p&gt; 
-s
&lt;p&gt;
p.s. Can we have the private xml ticker, instead of using EDT dates and timestamping the xml message with a GMT date, use GMT dates "globally"?  It's odd that there's a conversion that needs to take palce, no?
&lt;/p&gt;&lt;hr /&gt;



&lt;p&gt;[tye], 2004-09-06&lt;br /&gt;
For the Nth time, don't try to make login and create happen together, that is a recipe for failure cases that would *at least* be confusing (even if you intelligently prevent 'create' from happening if login fails).
&lt;/p&gt;&lt;p&gt;
Ah!  We can eliminate the problem by having 3 buttons: login, preview, and create.  The form should try to convey that 'login' continues the preview. How to acutally get it to is an exercise for the implementor.  Perhaps just a new LoginAndPreview opcode (or probably better as login_and_preview) so the button can be labeled that (yes, HTML is so stupid that the button label can't be set separately from the value and no, I don't want a picture on the button).
w&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[theorbtwo], 2004-09-06&lt;br /&gt;
In PM, the presumption is generally that you want to remain logged in.  Having people logged in is good for the community and for the user, and has very little downside.  LJ is different; there's a lot of downside to people finding a logged-in account and finding out about all the jucy bits people write in their LJ and mark friends-only, so people are highly encouraged not to remain logged in.  I don't see any reason to parallel their "log in" checkbox.  The radio button would be reallypostanon=yes or =''.  If it's set to yes, op=login will run, get empty-string username and password, and be ignored.  (I'm not sure if it will go to all the work of failing, or just ignore the op compltely -- it's in [Everything/HTML.pm], "sub opLogin", if you care.)  Another way to do it would be to make the radio button be for op=login or op=nop, but I'm not sure how you'd signal create to do it even though the user is anon.
&lt;/p&gt;
&lt;p&gt;[ysth], 2004-09-06&lt;br /&gt;
So, looking at that livejournal page, I'm guessing you'd want the Anonymous radio to be op=dummy and the PerlMonk user radio to be op=login; is the "Log in?" checkbox the expires=+10y?  Not sure how closely you meant to mirror
what lj has.  ITYM "differential SCSI drive".&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[theorbtwo], 2004-09-06&lt;br /&gt;
I'd agree that localtime://, or whatever mechinisim is used, should take a UTC time, or allow specificing an explicit timezone -- which means not using [ParsetTimeInString], though the best thing to do is probably implement both [ParseTimeInString] and whatever this new thing is called in terms of some common code.&lt;/p&gt;
&lt;p&gt;As far as the refactoring of handlelinks and related code, there's already a highly useful meaning to returning only one item -- it's the URL.  Most linktypes have no need to change the title, and there's no reason to force them to do so.  Allowing them to return arbitrary HTML would mean making them return three items: URL, title, arbitrary HTML, where the first two get ignored if the third is present.&lt;/p&gt;
&lt;p&gt;As far as the login-on-create thing goes, I think livejournal has a great UI for it -- [lj://theorb/29751.html?mode=reply|here], for example.  Obviously, I'm not talking about stealing their whole UI, but just a bit of it.  If $USER == anonymonk, then provide a form, that gives a hidden op=login, text for username and password, and a radio button that provides reallypostasanon='yes' or ''.  Then make create use the same tricks it does for need-a-title-sucka or dupes if $USER == anonymonk and not $q-&gt;param('reallypostasanon').  &lt;/p&gt;
&lt;p&gt;Note that opcodes run before we figure out what the current node is, and so can do any sort of changes they want to the set of parameters later code thinks the user has passed, including moving things back to the preview form.&lt;/p&gt;
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-09-06&lt;br /&gt;
Since other computers may be rendering localtime://, it should take an iso-formatted utc time, IMO.&lt;p&gt;
I wouldn't bar all use of op=login;op=create; (apparently the patch synch
stuff uses it); maybe detect that it's coming from preview page with some 
other field and redirect create to preview.  If there are ordering concerns with the login checkbox not necessarily coming before the preview button, [Everything/HTML.pm] would need to change to always do login first (not a bad idea anyway).
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[VSarkiss], 2004-09-06&lt;br /&gt;
The consensus to [id://387989|my question] seemed to be that single-word titles shouldn't be automatically disabled.  So I added [id://388834|a patch] to [perlquestion edit page] to add a sentence if hints are enabled.  Possible a [sitedoclet] would have been better, but I thought it was overkill for this.  Please apply whenever convenient.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[tye], 2004-09-06&lt;br /&gt;
The link handlers &lt;em&gt;should&lt;/em&gt; be changed to return URL and title separately (?node=pad://tye should return a redirect w/out requiring HTML to be parsed).  But there should still be support for returning a non-link.  An obvious way is that if two values are returned, then they are URL and title, but if a single value is returned it is some non-link HTML.
&lt;/p&gt;&lt;p&gt;
For anonymous preview, even having a preview table would mean that if I edit the text, notice I'm not logged in, don't hit preview (again), and log in, then I've lost my edits since the last preview.  So we could have a login form on the preview (it still feels hokey to mee, but I see more justifcation for it now and the 'Login and Create' is right out).

&lt;/p&gt;&lt;p&gt;
We'd need to discourage attempts to 'login and create' since such would just lead to an anonymous node if a password is mistyped.  I'd have a checkbox for 'login' but I'm not sure how to turn 'create' into 'preview' if 'login' was selected, perhaps just have op=create check $q-&gt;param('op') for 'login'.
&lt;/p&gt;&lt;p&gt;
I'd rather localtime:// take an epoch-seconds (return value from time()), but I'll just switch the servers to gmtime so the code reuse can continue.  BTW, the reason localtime not gmtime is used with the DB is because that is how &lt;em&gt;MySQL&lt;/em&gt; works, not some dumb design choice of the Everything coders.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-09-06&lt;br /&gt;
Given what youve just said I strongly object. I would like to see this proposal documented here in the wiki before its applied. I see absolutely no reason to break this mechanism to make pad:// work, and I dont understand which duplication you are referring to.  IMO you are talking about fixing something that isnt broken, and breaking something that works well.  I know that there are minor changes needed to the PM module but in my wildest imagination I can't see a justification for breaking this.
&lt;/p&gt;
&lt;p&gt;
You are always telling me to justify and publish my proposals, and you have on a number of occassions asked me to do nothing because you disagree with my proposal. I have always complied and I am making the same request here and now regarding this matter.
&lt;/p&gt;
&lt;p&gt;
As far as I am concerned you have not justified why this mechanism should not be used for non link related dynamic content. Simply saying "it should make links" isn't an argument IMO. I would really like to understand what your objections are and see if we can find a middle ground.
&lt;/p&gt;
&lt;p&gt;
I updated this note from my original as it read stronger than i intended it to. My apologies for that.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[theorbtwo], 2004-09-06&lt;br /&gt;
I'm planning on pushing through a change that would make linktype renderers not have lots of cargo-culted erronious code, by having them return a URL and a title.  This also allows for non-hacky coding of &lt;code&gt;[pad://]&lt;/code&gt;, and pretty much all the other improvements that people have been talking about making to that code.  It also means that you can't use links for things that don't make links, in exchange for not duplicating the functionality of making links.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-09-06&lt;br /&gt;
Heh. Well, to2, IMO the problem is that you have too inflexible an internal concept of what a PM link is for. You seem to think that it "must make a link to somewhere", where I see it as simply a way of hooking dynamic content into the way a node renders. The fact that that typically involves linking somewhere is IMO orthagonal to the issue at hand.
&lt;/p&gt;
&lt;p&gt;
Lets consider this rationally and not emotionally for a minute. We have a mechanism that allows us to dynamically render bits of nodes accordng to the viewer and attributes of the viewer. If we say that these can only be for producing links then we have to &lt;b&gt;duplicate&lt;/b&gt; code to handle something like the proposed tag. So I would like to see an argument (that doesnt beg the question) for why this mechanism should only produce links. And I would like to see an argument why we should invent a secondary process just like the link handler for this type of purpose.
&lt;/p&gt;
&lt;p&gt;
I'm reminded of Einstein here, "everything should be as simple as possible no simpler". IMO You are simplifying the use of this mechanism to the point where the overal system will become unnecessarily complex.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[theorbtwo], 2004-09-06&lt;br /&gt;
You're right, I hate it.  This has none of the semantics of a link.  When you start doing things certian ways because they're easy, and not because they make sense, you end up with something that makes no sense.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-09-06&lt;br /&gt;
I propose the best way to handle this is a new linktype. &lt;code&gt;[localtime://TIME_OR_NOW]&lt;/code&gt; should do the trick nicely. &lt;code&gt;[localtime://now]&lt;/code&gt; eq "[localtime://now]". Then just put that tag in the node contents and presto. :-)
&lt;/p&gt;
&lt;p&gt;
Given the hysteria new linktypes seem to generate I expect somebody to really hate this idea, but I think its a neat and elegant way to handle it. And i made a [id://388796|patch] to [reapnode] that would use it. One problem is that really it should be possible for it to take GMT instead of localtime. Not sure how to handle that intellgiently tho.
&lt;/p&gt;
&lt;p&gt;
And please don't publicise this linktype in any kind of hard coded form until its settled that it is a good idea.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-09-06&lt;br /&gt;
[id://388783] fixes the problem with reaped node dates; is there a better
way to get a date in ISO format?
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[theorbtwo], 2004-09-06&lt;br /&gt;
&lt;ul&gt;
 &lt;li&gt;Make a checkbox that provides op=login iff it's checked.
 &lt;li&gt;Make a pair of radio buttons that provide op=login or op=nop.
 &lt;li&gt;Always provide op=login, and ignore the failure that will occour if both the username and the passwd are blank.
 &lt;li&gt;Never say never.
&lt;/ul&gt;
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-09-06&lt;br /&gt;
How do you have one form that either does or doesn't provide op=login based
on which button you press?
&lt;/p&gt;
&lt;p&gt;[theorbtwo], 2004-09-06&lt;br /&gt;
Care to specify what sense [tye] knocked into you?  Doing multiple ops at once /is/ supported.  They'll be done in the order specified by the POST or GET parameters, which is generally the order specified by the HTML elements, though that's not actually gaurenteed per the spec.  In other words, having a login form /before/ the create form should work.  The hard part would be getting the interaction right -- the node creation should only trigger if you've logged in /successfully/, or if the "really post anonymously" box (or radio-button) is checked, and you should get an /informative/ page if the login failed, rather then getting something that looks more or less like where you just were.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-09-05&lt;br /&gt;
Update: [tye] knocked some sense into me in the cb; I retract my suggestion.&lt;p&gt;
I don't quite follow what you are saying, [tye].  I was aware of the form above the nodelets, but that doesn't preserve the title and text you've entered (though even half a clue about how cookies work would be enough to suggest logging in with the form and then using the back button--but not everybody has that half-clue).  I had thought (perhaps erroneously) that multiple ops were allowed and op=login was processed  first; if this isn't true my idea is a non-starter.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq] 2004-09-05&lt;br /&gt;
Maybe we could put a checkbox on the login box that says "I wanna be anonymous" or something. If its on we needn't show the warning in preview nor the login text box, just the checkbox with different text (maybe 'Lemme login!'). That way we dont annoy anony unnecessarily, but still show the warnings when its most often useful. Another approach that we could use is to provide some theme/styling that is _only_ used by anonymonk. A totally hypothetical example to get my idea accross is that we could put anonymonks nodelets on the LEFT. That way it would be instantly obvious when you were there as anonymonk or not. Anyway just my early morning wakeup thoughts on the matter. Oh I also rotated the wiki.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-09-05&lt;br /&gt;
There is already a login form on the preview page (top of the nodelets, whenever you aren't logged in).  I'm not a fan of duplicating functionality lots of different places and I'm not a fan of code behaving extremely differently depending on the situation.  So I don't like this idea.  Note that the "preview" button generates op=preview so "Login and Create" would require quite a bit of change.  "Login and Create" is an especially bad idea; "Login and Preview" would be better (but I still don't like it).
&lt;/p&gt;&lt;p&gt;
When we get a preview table that prevents duplicates better and lets people pull up their last preview that they 'lost' when their browser crashed, then it probably will make sense to allow someone to pull up an anonymous preview after they log in under certain conditions.  But, all in all, I think this is a pretty minor problem with tons of features already pointed at it and we shouldn't get too elaborate trying to make it too foolproof.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[ysth], 2004-09-05&lt;br /&gt;
How about instead just putting a login form on the preview page and "Preview",
"Login and Create", and "Create Anonymously" buttons?
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[davido], 2004-09-04&lt;br /&gt;
[id://388560] is ready to be applied on the main server.  It promotes the "You aren't logged in." text on the [Preview Page] to &lt;code&gt;&lt;h2&gt;&lt;/code&gt; size, making it much harder to miss.  We've had a few double-posts lately by people who mistakenly posted while not logged in, and then attempted to fix it by double-posting.  Then I get all cranky when I shouldn't. ;)  Let's make it easier for folks to avoid the mistake. &lt;grin&gt;
&lt;/p&gt;
&lt;p&gt;[davido], 2004-09-02&lt;br /&gt;
I've created a patch on the test server making the "You aren't logged in" message on the preview page "h2" in size, hoping that might help people to avoid the mistake that seems to lead to a lot of double-posts.  If someone could apply it on the test server, and if it meets with approval there, I'll push it over to the main server in a day or two.  I'm posting this message here because I'm not sure anyone's reading the test server's dev wiki.
&lt;/p&gt;
&lt;p&gt;[davido], 2004-09-02&lt;br /&gt;
This may already have been addressed, but I don't recall seeing it.  On the test server, the nodelet "up/down/collapse/remove" links have a few minor quirks:  First, the collapse and remove links have (on my browser) the same little icon; an empty box.  ...probably a characterset issue only apparent to some users (myself included).  Second, the tips that pop up when you hover over these links are missing from the collapse link; only up, down, and remove generate hover tips.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-09-02&lt;br /&gt;
As per a suggestion by tye I swapped the viewtype and nodetype arguments in the pmdev:// linktype and also added a new linktype called node:// arguments are node://name_or_id;displaytype;nodetype|title
&lt;/p&gt;
&lt;p&gt;
I view this new linktype as totally experimental. What I think we aught to do is simply switch id:// to using this code. It won't break the current definition of id:// and usefully extends it. Until then I wanted it available so folks here could play with it on their scratchpads if they like.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[eric256], 2004-09-01&lt;br /&gt;
That is easy to do and it was that way before, i don't care if the timestamp shows in the chatter box at all myself.  The feature is easy to hide or move using CSS (you could even hide it in the chatterbox with that) or we could add a user setting for it.  If you think it should be hidden in both by default then we could have some common CSS added that does that. I'm open for suggestions on any of that. I'm planning on posting a Discussion here soon regarding any new CSS tags so if you have added some that you want listed please msg me. If someone else would prefer that honor thats fine by me as well. 
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], 2004-09-01&lt;br /&gt;
If I want a timestamp on my chatterbox, then I move [tick tock] near my chatterbox.  That way I can have it or not and put it on top or on bottom, all using existing features.  I'd rather not duplicate this for within the chatterbox itself (there was already disagreement on where the timestamp should go).  Perhaps this should only appear for full-page chat (for example, only if wrapping wasn't requested)?  But I don't clearly see a best solution.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[eric256], 2004-09-01&lt;br /&gt;
I just added two patches. The [387549|first] one modifies [nodesWithinDays] to add a CSS class to the TR element for each listing. It takes the form nodefrom_userid (where userid is the actual id).  This way that page can be customized, it could even be used to hide the display of certain peoples nodes. I also [387565|updated] [showchatter] so that the CB has a timestamp of when it last reloaded.  I often have trouble with FullPage chat not refreshing, this way everyone can tell its still working or not. It uses the user time format string.&lt;/p&gt;
&lt;p&gt;I also wanted to note a current issue with CSS in fullpage chat.  The fullpage chat frames are of type [superdoc] and shown in raw mode. When shown in raw mode each htmlcode for fullpage procudes the full HTML needed for a page, includeing the header that holds CSS.  This output is then sent threw the link processing code. In this way certain css is messed up because it matches the link code and get mistakenly converted into links.  My idea for a solution would be to change those so that they are type [fullpage] and then have each individualy call the link processing code on just its contents. Hopefully someone else can review this, I have no idea what other effects changing the doctype might cause.&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq] 2004-09-01&lt;br /&gt;
Hmm, this actually raises a point for me. Id like to make a new prefix, possibly 'node://' that uses similar logic to the 'pmdev://' prefix. That is it handles href:// id:// and 'name' cases in a pretty intuitive manner, as well as disambiguated node titles and an easy way to specify the displaytype. For instance you could say node://node;nodetype and it would go to the right place. 
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-09-01&lt;br /&gt;
Close.  The idea is that typing "cpan://Gnarfle" (or "&lt;code&gt;[cpan://Gnarfle]&lt;/code&gt;") into the Search box (that should be renamed "Find") would return a redirect to the appropriate URL (and a way to pull the suggest link text).  This would be useful to things like chat clients but would also be very handy interactively.
&lt;/p&gt;&lt;p&gt;
So you'd type "href://?node=message;type=opcode" or "href://?node=fullpage chat;displaytype=viewcode" or "pmdev://fullpage chat;;viewcode", etc.
&lt;/p&gt;&lt;p&gt;
The title filter code should also prevent node titles from being used that match m#^\w+://#.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-09-01&lt;br /&gt;
Tye has mentioned in the past how it would be nice if you could say stuff like 'message;opcode' in the search box and it would do the right thing. Unfortunately changes to this behaviour require module uploads so its a bit tricky to do.
&lt;/p&gt;
&lt;p&gt;
Regading [davido]'s cabal section, its a nice idea but there are some technical issues. In order to provide the  permissioning required by the idea each of the subsections would have to be a different type, which would cause trouble. Im planning some modifications to the approval system so its possible that it would be a lot easier once thats done.
&lt;/p&gt;
&lt;p&gt;
On that note, since i havent heard any feedback on my proposed changes to the approval system I intend to just go ahead and figure it out and put together patches.
&lt;/p&gt;&lt;hr ?&gt;
&lt;p&gt;[castaway], 2004-09-01&lt;br /&gt;
A pmdev discussion section (or indeed for each of the cabal), sounds like it might be useful. (Although some things are better done singly, and not by a committee.. Ive noticed)
&lt;p&gt;
Anyway, random thought for the day, should anyone care to implement: I can't count how often I've typed some pmdev-type node name into the searchbox, then had to specify if I meant opcode, or dbtable or whatever. (eg 'message', both opcode and dbtable), so how about showing a dropdown next to the search box, that lists the nodetypes? It should show up just for pmdevers/people that can actually read those ndoes, of course.. Hmm, or a reduced version for everyone else, that justs lists perlquestion, monkdiscuss, and so on?
&lt;hr /&gt;
[pmdev wiki through 2004-08-31]
</field>
</data>
</node>
