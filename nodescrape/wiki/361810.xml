<?xml version="1.0" encoding="windows-1252"?>
<node id="361810" title="pmdev wiki through 2004-06-05" created="2001-08-22 02:44:52" updated="2005-08-02 09:43:08">
<type id="68046">
wiki</type>
<author id="979">
vroom</author>
<data>
<field name="doctext">
Continued from [pmdev wiki]...
&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-06-03&lt;br /&gt;
Ok, regarding [eric256]'s point, we will need to work on the add to scratchpad link. There almost certainly is a problem as described by [davido]. What needs to happen is that the personal nodelet needs to force the creation of a scratchpad object before it tries to appened anything. This can be done by using 
&lt;code&gt;
$link=htmlcode('scratchpad_link','',$USER,'',{},0,1)
&lt;/code&gt;
Or probably easier to use:
&lt;code&gt;
$pad_id=htmlcode('scratchpad_link','',$USER,'',{},1,1)
&lt;/code&gt;
whose return can be used to identify the required pad for updating. Ill leave this for now as im visting friends and dont have any time today.
&lt;/p&gt;
&lt;P&gt;
Regarding [tye]s comments. This is essentially a benign exploit of a minor security vulnerability in the PM patching process. Its possible to create a patch for a restricted node (which is particularly easy from the test site if you are a god there and are using Patch To Pm) which one cannot see. The patch so created cannot be viewed properly in diff view by non gods here, but can viewed properly by gods. All in all i dont see a problem with this beyond it being a touch odd.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[davido], 2004-06-05&lt;br /&gt;
[eric256] just mentioned to me that the "add to scratchpad" link on the Personal Nodelet is broken.  His CB comment was that it "doesn't work at all. it takes me to a search page..."  But when I tested the "add to scratchpad" link, it worked fine for me.  When I asked him to confirm that it really didn't work, he said, "weird it works for me now to. thats just strange."
&lt;/p&gt;&lt;p&gt;
I have a theory.  When he found it to "not work" probably was chronologically &lt;em&gt;after&lt;/em&gt; the new scratchpad patches were applied, but &lt;em&gt;before&lt;/em&gt; he had actually visited his scratchpad to trigger the creation of a new scratchpad.  I can't test that theory, as I've already visited my scratchpad post-patch.
&lt;/p&gt;
&lt;p&gt;&lt;b&gt;UPDATE: &lt;/b&gt;After showing [eric256] what I wrote in this wiki, his response was: &lt;em&gt;eric256&gt; sorry davido but i had infact visited my page already, the other day when the announcements went out. i'll watch though and see if i can make it happen agian.
&lt;/em&gt;&lt;/p&gt;&lt;p&gt;
If anyone else can test and cause the "add to scratchpad" link break, let us know.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-06-05&lt;br /&gt;
It's a patch to a restricted_superdoc, so inaccessible to mortals (as is the
code to the restricted_superdoc itself).  I had noticed this before and
assumed it was by design.
&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[tye], 2004-06-04&lt;br /&gt;
[id://361415] gives [tye] "Permission denied".  It looked pretty normal to tye&amp;amp;nbsp;.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-06-03&lt;br /&gt;
[ysth] and i did a fair amount of changes to the scratchpad stuff. With the intention of resolving the bug reported by limbic, duplicate code, and of creating a scratchpad by linking to it, as well as the problems of linking by name. These changes are now applied. Please see [id://361606] for more details.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[davido], 2004-06-03&lt;br /&gt;
I just wanted to follow up to my earlier mention of on-site links.  Again, the issue is that site code usually referrs to nodes by name, whereas [id://17342] has a policy of linking by node id, and if necessary, using the "|text" option to modify the default name for display purposes.
&lt;/p&gt;&lt;p&gt;
Here is the specific verbiage in the [id://240586]:&lt;br /&gt;
&lt;ul&gt;
&lt;li&gt;Links should always use the Node ID as this doesn't change. The document title may change. 
&lt;li&gt;All links to PerlMonks nodes should be by ID, rather than by name. Probably the best way to determine a node's ID is the following..... (description is provided for setting up node title info in [id://1072].)
&lt;/ul&gt;
&lt;/p&gt;&lt;p&gt;
My recommendation is that when creating new code, or refactoring old site code, the SDC policy be implemented.  If that means also using a # comment to identify what the link pertains to, so be it.  It's a worthwhile tradeoff because of the benefits gained by using node id's, IMHO.  Other opinions are welcome. ;)  BTW: To see node ID for whatever node you're currently visiting, add the "Custom Node Title Definition" of &lt;code&gt;%N : %T&lt;/code&gt; to your [id://1072].  I usually have two browsers opened at once so that I can use the second one to look up node ID's quickly.
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-06-03&lt;br /&gt;
You can't change scratchpad titles any more: a simple addition to [restricted fields].  This is a great example of why I consider the Everything security model broken ([unrestricted fields] is more how I think things should work, and most fields should be changed by code on a page, not some default "let users change whatever fields they want however they want").
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-06-03&lt;br /&gt;
Ive been trying to deal with the scratchpad problems, re: LR's node and also the hole that ysth mentioned. Between [ysth] and I we have fixed the problems pretty much but ive run out of time before i could get it finished. Im going to Berlin tonite so I cant stay to fix this.
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;[demerphq], 2004-06-03&lt;br /&gt;
The reason is the origin of the code. If its origin was from a nodeball it wont use ids as there is way to know those ids at the time of creation of the nodeball. Thus symbolic references are required. However much of the PM code is long morphed from Everything and it has no intention of being redistributed which makes using ids for linking both possible and preferable (for the reasons you stated.) 
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-06-03&lt;br /&gt;
People shouldn't have arbitrary nodes named things like [Newest Nodes], and
it's more self-documenting to use the name, but I agree that it would be
better to use the id (or create a link by name and type, e.g. where we know
no one will be creating a second superdoc named Newest Nodes).
&lt;p&gt;
Along those lines, there's a hole in the new scratchpad stuff; you can
create your new pad, enter a link like: 
&lt;blockquote&gt;&lt;code&gt;http://perlmonks.org/index.pl?node_id={your-scratchpad};sexisgood=submit;scratchpad_title={an -alternate-title}
&lt;/code&gt;&lt;/blockquote&gt;
to retitle it, then visit your user page, and presto! you have two scratchpads.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[davido], 2004-06-03&lt;br /&gt;
While sifting through the site's code I am finding that &lt;code&gt;[]&lt;/code&gt; links to on-site documents are typically done by name.  For example, &lt;code&gt;[Newest Nodes]&lt;/code&gt; may appear just like that in site code.  This has gotten me to thinking.  It is standard policy among the [SiteDocClan]smen to always link to on-site nodes by node id, not by node name.  I have assumed this is because node id is a quicker search, more precise, less prone to getting fouled up by the existance of multiple nodes of the same title, and so on.
&lt;/p&gt;&lt;p&gt;
I'm wondering why site code doesn't follow the same practice as site documentation.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[crazyinsomniac], 2004-06-02&lt;br /&gt;
Here be a bug bug
&lt;code&gt;
[ftp://megrez.math.u-bordeaux.fr/pub/pari/unix/]
[ftp://megrez.math.u-bordeaux.fr/pub/pari/unix/|ftp://megrez.math.u-bordeaux.fr/pub/pari/unix/]
&lt;/code&gt;
results in
&lt;code&gt;
&lt;a href="ftp://megrez.math.u-bordeaux.fr/pub/pari/unix/"&gt;megrez.math.u-bordeaux.fr/pub/pari/unix/&lt;/a&gt;
&lt;a href="ftp://megrez.math.u-bordeaux.fr/pub/pari/unix/"&gt;ftp&lt;/a&gt;
&lt;/code&gt; (or without code tags)&lt;br&gt;
[ftp://megrez.math.u-bordeaux.fr/pub/pari/unix/]
[ftp://megrez.math.u-bordeaux.fr/pub/pari/unix/|ftp://megrez.math.u-bordeaux.fr/pub/pari/unix/]
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[Corion], 2004-06-02&lt;br /&gt;
I know that (only [fullpage]) nodes can output custom headers already, but the logic used in the Perl code also implies that &lt;i&gt;only&lt;/i&gt; [fullpage] nodes can output custom headers, and not css nodes or other arbitrary [htmlcode] nodes - the patch to Everything::HTML will enable all (code) nodes to output custom headers.&lt;/p&gt;
&lt;p&gt;I oriented myself at [yesterday's most-visited nodes] to look for valuable targets for caching, and the only thing that gets not hit by the ever-changing
CB are the CSS pages. A second target could be the XML message ticker, but
the on-site caching for this already is disabled, I guess so that a conversation
by &lt;tt&gt;/msg&lt;/tt&gt; isn't hindered. Some dynamic caching might be interesting in this case...
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-06-02&lt;br /&gt;
Newest Nodes changes requested by [davido] are applied. My first real application. Everything is controlled through the [newest nodes setting]. The way it works is this: first the value of the key 'specialgroups' is extracted and split, these groups are then used to build a hash table of "permissions" based on their membership of the group. This means a type can be in two groups safely. The group name is used to look up the "nodetypes_$group" list of types which is split to build the permission table. The special nodetypes_all is automatically split and assumed that anyone can see them. Then finally nodetypes itself is split, which determines the order of the results as filtered by the permissions.
&lt;/p&gt;
&lt;p&gt;
What this means is that adding a new section requires: Add a new type entry in the setting (TODO: add type entry info), add the type name to the group lists it will belong in, and then finally add it to the 'nodetypes' entry in the correct position to be displayed. This sequence is somewhat important. Other than that your done. Oh, titles for type sections should be in plural by preference. There is rudimentary pluralization code but its smarter at depluralization than it is at pluralization.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-06-01&lt;br /&gt;
Note that raw pages can include their own HTTP headers in PM *right now*.  If no HTTP headers are detected in what they output, then default HTTP headers are added.  I didn't see where the code that set the headers was linked, but I figure this feature is easy to overlook and wanted to make sure that it is considered.  I also don't think "CSS" is the best choice for a node type (too specific -- we'll probably want other pages to be cached better at some point).
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[Corion], 2004-06-01&lt;br /&gt;
In [http://pmdev.flux8.com:8081/index.pl?node=323928], I discuss how
cache-friendly headers could be added to the two CSS pages currently 
served with every page request. The changes have already been implemented
on the pmdev machine and work there for the last two days. As the needed
changes are small but widely distributed, I have posted the list of needed things "over there", but I'll move the content here if that is desired.&lt;/p&gt;
&lt;p&gt;The change to Everything::HTML would also mean that we get the ability
to issue &lt;tt&gt;Location:&lt;/tt&gt; redirects from any node.
&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[ysth], 2004-06-01&lt;br /&gt;
Rather than just say "Jump To New Meditation", perhaps add value by having
the link say "3 New Meditations" or whatever number there are.  Though to
read well, this would require singular/plural forms of the section names.
&lt;p&gt;My inclination would also be to ditch the list format and just have a list
of links like&lt;br /&gt;
[3 New Discussions] | [97 New Questions] | ...
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-06-01&lt;br /&gt;
Hi [davido], yes I probably will apply this tonight. There are a few minor issues to be resolved first though. That being primarily that the order of sections needs to be handled differently. Once I've put something in place to order them in a little more of a sane fashion ill apply it. Although having said that if youd like you could give it a go on the test server. What the issue is that currently we pull a list of types from a setting. This is list is for all users. We then pull a seperate list for pmdev and gods (and actually we could do something for SDC as well). Currently we just appened or prepend them to the normal user list. What we &lt;b&gt;should&lt;/b&gt; do is put all the groups in the normal user list. Then we should use the presence in a group list and membership in the group (or lack of it) to determine if we should skip the section. Presumably this is a fairly minor change with the exception of some required mods to the setting.  Once this change is implemented then ill go ahead with it.
&lt;/p&gt;
&lt;p&gt;
For the record the implementation idea is [tye]s. As usual an more elegant approach than i had conceived. (I was going to tag the types with an index or something. Blech.) :-) Thanks [tye].
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[davido], 2004-06-01&lt;br /&gt;
[demerphq] has uploaded from the test server [id://357974] and [id://357975].  I'm interested in recommending the application of these two patches, provided they meet with everyone's approval.  Their purpose is to put anchors in the [Newest Nodes] page and a TOC for the various sections at the top of the page.  We've all noticed how long the list of items on [Newest Nodes] can become if you don't click the "I've seen all these" button often enough.  This patch will make it easy to click "Jump to Newest Meditations", rather than scrolling past 200 other things first to find that portion of the Newest Nodes page.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-06-01&lt;br /&gt;
Very nice, [castaway].  I'm looking forward to seeing what appears next on the pmdev todo wiki on the test site, since you seem to have rapidly made your way through what was listed there :).
&lt;p&gt;
Would it be a problem to make super search's scratchpad search work only for
the new-format scratchpads?  Might be confusing to users, but it IMO it would be better than not searching at all.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-06-01&lt;br /&gt;
Thanks, [castaway].  I'm very glad to see that finally happen.
&lt;/p&gt;&lt;p&gt;
When code becomes unused, make a note of that in the contents and make the code fail or do nothing.  Later, after noone has complained, update the title or nuke it (or ask one of the [gods] to).  I don't want anyone to go on a "clean out dead code" nukefest.  I reuse old code nodes for testing rather than creating a new node for each thing I want to try out, but that is probably not a great idea and nuking dead code makes sense, with moderation.  A "mark dead code" patch fest or even "collect lists of dead code to be renamed" might be a good idea.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[castaway], 2004-06-01&lt;br /&gt;
Ive uploaded a bunch of patches to separate scratchpads from users. It also automagically ports from old style to new, as soon as someone attempts to edit their scratchpad, or someone else links to it, etc. The old contents are currently kept where they were, we can clean those out sometime, when this proves to be stable.
&lt;p&gt;These are all installed and tested on the test server.
&lt;p&gt;
Old code currently just gets left where it is, as far as I can see. It would be nice if it had at least a flag that said 'dead code' (which could be shown on search code results etc. Its hard to tell else, since theres code that [Petruchio|certain people] are using, that only gets uses on a certain interface..
&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-05-31&lt;br /&gt;
How about like [id://357820]; go ahead and apply if it looks reasonable to you.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerhq], 2004-05-31&lt;br /&gt;
I don't think it should &lt;i&gt;nuked&lt;/i&gt;.  Marked as dead code sure.  I think [theorbtwo] has applied your changes already though regarding review.
&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;[ysth], 2004-05-31&lt;br /&gt;
I've patched voteit to go ahead and just show the reputation for a secondary user's node to the master user or vice versa.  Also made it work in place of
Q&amp;Avoteit.  The patches are: [id://357745], [id://357743], [id://357741].
I'd appreciate it if y'all could take a look at them and let me know if you
see any problem with applying.
&lt;/p&gt;&lt;p&gt;What happens to obsolete code (such as Q&amp;Avoteit will them be?  Does it get nuked or a comment added that it's been
superceded?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-05-30&lt;br /&gt;
That sounds a lot more complicated than merging the voteit code.
Do you have a rough idea what all would need to be changed?
Does anyone have any idea why the foreach (values %HTMLVARS) is there?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-05-30&lt;br /&gt;
Before doing this, you can simplify the problem by switching Q+A nodes back to being owned by their authors so they aren't a special case any more.  I changed the permissions so that this work-around is no longer needed.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[ysth], 2004-05-30&lt;br /&gt;
Ok, that prevents a secondary account user from voting on the master user's nodes, but shouldn't a secondary user have voting disabled?  I'd think the
check should be the other way round.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[theorbtwo], 2004-05-30&lt;br /&gt;
The &lt;code&gt;$USER-&gt;{nick} eq $A-&gt;{title}&lt;/code&gt; bit is to keep people from having two accounts, and voting on nodes written by one from the other.  It should be fixed asap.  I nominate you and [davido].
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-05-30&lt;br /&gt;
Re: recent mention in PMD that Q&amp;A section doesn't support mid null-votes,
can [id://5765] be combined with [id://20232]?  I see the following differences:
&lt;ul&gt;
&lt;li&gt;Q&amp;A uses voteHeader and voteFooter around Reputation: instead of showRepHeader/showRepFooter; Q&amp;A should probably change
&lt;li&gt;Q&amp;A has a strange &lt;code&gt;foreach (values %HTMLVARS) {return if (getId($N) eq $_);}
&lt;/code&gt; Reason??
&lt;li&gt;Q&amp;A has a use lib $HTMLVARS{uselib} before the use Everything::Experience; is this for testing changed .pm's?  Need this stay?
&lt;li&gt;Q&amp;A doesn't have code for nullvote eq mid (or dropdownvote, whatever that is)
&lt;li&gt;Q&amp;A checks original author instead of author; would &lt;code&gt;
getId($USER) == ($N-&gt;{original_author} || $N-&gt;{author_user})&lt;/code&gt; work for both?  (Just guessing that only Q&amp;A Q's and A's have original_author.)
&lt;li&gt;regular voteit has extra check for $USER-&gt;{nick} eq $A-&gt;{title}; as far
as I can see this would be redundant unless someone changes the title of their
home node to be a different user name ?!
&lt;/ul&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-05-29&lt;br /&gt;
Dear [gods], i dont want a major reduction in the price of beer, but I'd love the ability to delete bad patches that I have created. Is there any way we can work that out?&lt;br /&gt;
&lt;font size="-1"&gt;grinder . . o o O (heh... name that tune :o)&lt;/font&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[davido], 2004-05-29&lt;br /&gt;
I have created [id://357439] to patch the Q&amp;A section display page code so that all questions, approved or unapproved get listed together instead of being misleadingly segregated by a system that has fallen into disuse.  I've tested it out on the test server quite a bit.  If it meets with approval here, hopefully it can be applied. (Thanks for all your help [demerphq] and others.)
&lt;/p&gt;
&lt;p&gt;[davido], 2004-05-26&lt;br /&gt;
I'll be playing with the Q&amp;A section on the test server for the next couple of days.  It looks to me like it shouldn't be too difficult to do away with the obsolete segregation of 'approved' and 'unapproved' Q&amp;A questions.  Since there is no approval process anymore, and since Q&amp;A Editors weed out the garbage, there is no point to identifying and segregating approved Q&amp;A from unapproved Q&amp;A; it's all pretty much the same thing.  Comments welcome.  I'm going to take it slow as it's my first shot at working on site code (albiet test-site code).
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-05-26&lt;br /&gt;
[therobtwo] I'd really appreciate it if you leave altering the [patch lister] for a bit. Im still working on it (need to add filtering and a few other things). That is assuming that at some point we can get the new implementation moved over. Speaking of, I assume nobody has noticed any issues with the new sortordering stuff on the test server?
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[theorbtwo], 2004-05-26&lt;br /&gt;
Thanks for the bug report, [ysth].  Fixed.  Now "all" I have to do is rebless the new notes-that-should-be-pmdevnotes.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[theorbtwo], 2004-05-26&lt;br /&gt;
Please welcome [davido] to the group.  Oh, and making [patch lister] show the number of replies is on my list -- I'm going about this thing stepwise.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[Petruchio], 2004-05-25&lt;br /&gt;
Thanks for confirming my understanding, [demerphq]. I'd read the code, noted that it
wasn't &lt;em&gt;supposed&lt;/em&gt; to copy the creation date, but didn't get around to checking
what was actually happening.
&lt;/p&gt;
&lt;p&gt;
I only started using it recently, since it did seem convenient.  While [tye]'s criticism
is vague, it's enough that I'll avoid the mechanism.  The convenience really isn't worth
the trouble of keeping a watchful eye for subtle problems which might just as easily be
avoided. If, however, [demerphq|someone] studies it and comes to a conclusion, I'll be
happy to hear of it.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-05-25&lt;br /&gt;
Ok, now thats a much better explanation. :-) I will certainly keep an eye out in the future for issues like that. Thanks. To be honest though lately ive not used clone node so much, but on occasion it has been very useful.
&lt;/p&gt;
&lt;p&gt;
Regarding synching nodes. You can now associate a node on the test server with a node here and have the test server do a diff (assuming the node has a patchable code field and that you have privs to see the node here anyway). Ill be beefing it up with auto-synchronization type code but for now this is an important first step IMO. Anyway. The features are available through the Perl Monks Nodelet on the test server. Cheers.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-05-25&lt;br /&gt;
Regarding cloning nodes: I continue to avoid doing it but the biggest of the reasons I recall for disliking it was that it cloned creation dates and it appears I fixed that.  If you aren't really trying to clone the node (including the owner and perhaps other subtle bits of it -- an action that I've not seen much call for), then I still think it is the wrong way to create a new node, even if it is convenient.
&lt;/p&gt;&lt;p&gt;
But I'm against cloning in general because I've experienced too many problems with subtle items being cloned that either broke things or got forgotten such that cloning became the only way to create a working instance.  So I won't be using it and don't think it is a good idea for others to use it, but you can pick your poison.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[ysth], 2004-05-25&lt;br /&gt;
Tried commenting on a patch and it created a note, not a pmdevnote, as did
replying to the note created.  (I was seeing if it messaged the patch author
when a pmdevnote was created).
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-05-25&lt;br /&gt;
A few thoughts about design. I find myself using this pattern a lot (sub{} represents an htmlcode node)
&lt;code&gt;
sub{
  my ($opts)=@_;
  $opts-&gt;{default}=$q-&gt;param('default')||'default';

  ...

  $opts-&gt;{return_foo}=$foo;
  return $html_text
}
&lt;/code&gt;
And then leavng the displayable containers empty save for a few htmlcode calls etc. I find it improves reusability and extensibility quite a bit. I'm wondering what people think?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-05-25&lt;br /&gt;
I just double checked how the [node cloner] works on the test server. Since it is untouched and its mtime predates the fork I assume it is identical code as it is here is which case &lt;i&gt;the creation date is &lt;b&gt;not&lt;/b&gt; cloned&lt;/i&gt;.
&lt;/p&gt;
&lt;p&gt;
On the subject of other business I intend to leave the [pmdevnote] stuff alone (insofar as [Patch Lister] goes anyway) until I have finished the node/patch pinning stuff. Its worth noting that the [http://pmdev.flux8.com:8081|pmdev] [Patch Lister] uses [listpatches] and is seriously souped up in comparison to what is running here. Once ive got the pinning done Ill synch the patch sets accross to here and hopefully we can use them in production.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-05-25&lt;br /&gt;
[tye] was that a complaint?  Perhaps [Patch Lister] could indicate when a patch has replies, or [Super Search] could have a box added to search patches (with pmdevnotes included if you say to search for replies).  There's also
[href:///index.pl?node_id=106927&amp;whichtype=356170|List pmdevnote nodes].
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-05-25&lt;br /&gt;
Bah. Details details. One step at a time still gets you 100 miles away eventually. Oh, and regarding the issue of cloning, from the way it looks on the test site the creation date is NOT cloned. Unfortunately however I dont have the rights to see the PM code, but since the patch I see by [tye&amp;nbsp;] is about not cloning the creation date, and its been applied since 2003-01-08 14:12:26 (although was last modified on 2004-01-28 17:16:54) im assuming this matter is resolved. Can any gods confirm?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-05-25&lt;br /&gt;
So we now have a state where most (all?) the ways to notice replies to patches have been disabled (other than /msg to author, I presume)?  Newest nodes, super search...
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-05-25&lt;br /&gt;
Thanks to the collaborative efforts of [theorbtwo], [castaway] and myself you can now diff nodes on the Test Server against nodes here. This functionality is currently limited to nodes that predate the fork (323484) but I intend to get that resolved soon.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[theorbtwo], 2004-05-25&lt;br /&gt;
Patch replies are now of type [pmdevnote], which is identical to [note], except it is only readable to [pmdev]ils.  The existing replies having a root node that is a patch have been reblessed into [pmdevnote] (that is, have had their type_nodetype field set to the node_id of [pmdevnote]).&lt;/p&gt;
&lt;p&gt;Also, more information is available on the XML displaytype of code-ish nodes (thanks to [castaway]'s prompting), and nodetype nodes now show their attributes  (thanks to [demerphq]'s prompting).
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[ysth], 2004-05-24&lt;br /&gt;
Patches themselves are not publicly accessible, so I see no reason the replies
to them should be.
&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[ysth], 2004-05-24&lt;br /&gt;
Yes and no.  If you select "replies from selected sections" it shouldn't, but that gets optimized to "replies from any section" if all the sections super search knows about are being
searched.  Having notes with root_node set to an unknown-to-super-search type
makes this optimization actually have a difference in output.  Note that there are
currently a number of notes with root_node set to editor requests, superdocs,
an htmlpage, other notes, and even one wiki :)  And, of course, orphan notes.
&lt;p&gt;
But I wasn't trying to say one way or the other; just wanted people to be aware.
&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[tye], 2004-05-24&lt;br /&gt;
If they are publicly viewable, then [super search] *should* find them.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[ysth], 2004-05-24&lt;br /&gt;
Just wanted to mention that comments to patches will currently show up in
super search; in the test environment it looks like [theorbtwo] has set up
a pmdevnote nodetype to use instead of note that would prevent this.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-05-23&lt;br /&gt;
Please don't 'release' patches (as previously discussed in the wiki. Thanks.
&lt;/p&gt;&lt;hr /&gt;
.
&lt;p&gt;[Corion], 2004-05-23&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;This patch, to give the [minilogin] form a name ("login") is a test balloon - I'm not sure whether it is worthwhile to go out and hunt the codebase for unnamed forms and give each form a (good) name. This patch scratches a special itch for me on the pmdev machine, as I prefer to refer to forms by name instead of number on the page.&lt;/p&gt;
&lt;p&gt;So, if you have any comments on whether it's worthwhile (or dangerous) to have this on the PM production environment as well, I'd like to hear them.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-05-21&lt;br /&gt;
[http://pmdev.flux8.com:8081/|PMDEV test server] is now mod_perl and has a better url (note that currently the port must be specified as 8081 to utilize the mod_perl), and has seriously beefed up patching/diff powers. Please contact [theorbtwo], myself, or [corion], [castaway] or [ysth] to get passwords set up if you don't already have one. This address replaces the earlier. Many thanks to [theorbtwo] and [corion] for sorting the mod_perl stuff out. And I hope you folks like the improvements to the patch display and edit stuff.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[Petruchio], 2004-05-20&lt;br /&gt;
Oops!  Roger, wilco.
&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[tye], 2004-05-19&lt;br /&gt;
BTW, don't clone nodes ([gods]), or please patch 'clone' to not clone the creation date.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[theorbtwo], 2004-05-18&lt;br /&gt;
Sure.  Do that, and ping me in the CB -- I prefer that patch authors are around when I apply their patches.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-05-18&lt;br /&gt;
OK, will change it later today (plus a comment about browser-compatibility).
After that, can it be applied?  I know some would prefer actually including the dates in the output, but there seems to be no consensus on how to do it.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[theorbtwo], 2004-05-18&lt;br /&gt;
Looking back at that patch (I know it's mine, but I don't remember it) I suspect there were two points: Firstly, that the code being generated was wrong -- the end tags didn't match the start tags in order.  Secondly, that there was some browser that supported &amp;lt;a title=&gt;, but not &amp;lt;span title=&gt;.  I like your patch, with the commented-out bit commented back in.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-05-17&lt;br /&gt;
I've done a Message Inbox hover patch: [id://354033], but have a question.  There's a commented out part I've added that corresponds to [theorbtwo]'s
[id://293469]; I'm not sure what its for or if that same change belongs
in showprivatemessages2. My patch is applied in the test environment and seems to work without that part.  Please advise.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-05-16&lt;br /&gt;
Somebody went to a great deal of trouble over the error messages in [id://60309].  Perhaps they should be extracted into a separate htmlcode
node so as to be usable from other superdocs that are limited to certain groups?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-05-16&lt;br /&gt;
To summarize what's there, having it say "&lt;i&gt;user&lt;/i&gt; said ... on &lt;i&gt;tstamp&lt;/i&gt;" would leave the times ragged; perhaps better to have
"&lt;i&gt;tstamp&lt;/i&gt;; &lt;i&gt;user&lt;/i&gt; says ...".  Also mooted is adding a column
to the table to have a right-aligned time.  I think the first option
obscures the username, and the second wastes too much horizontal space.
I'd like to see either the original patch applied, or a hover timestamp,
and will go ahead and work on the latter.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[theorbtwo], 2004-05-16&lt;br /&gt;
There was a discussion about this on the wiki, see [id://328159], search for "right-aligned idea"
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-05-16&lt;br /&gt;
For my first patch, I had thought of putting the message time in [Message Inbox] (source:[showprivatemessages2]) with a "&amp;lt;span title=" the way the chatterbox does for private messages, but I see there's alread a patch [240370] to include the time in the text directly.  Is there a reason the patch isn't applied?  Should I go ahead and do it the other way?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[belg4mit], 2004-05-12&lt;br /&gt;
Just a note, it seems as though implementing the : in URI fix would be good as
it would allow for compatability eith [http://www.archive.org/web/freecache.php]
which could be useful for the release of future Exegeses and Apocalypses.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[theorbtwo], 2004-05-10&lt;br /&gt;
The problem with [belg4mit]'s patch isn't that it's wrong, but that it's patching the wrong code-path.  Here's where the patch should be, along with how I found it.  Start at [chatterbox], because I know it allows for bracket-links.
From there, [showchatter], [parselinksinchatter].  [parselinksinchatter] calls handleLinks, not as an [htmlcode], but as a regular function, meaning that it's getting imported from somewhere... but where?&lt;/p&gt;
&lt;p&gt;[search internal code] to the rescue!  A search for "sub handleLinks" will take you to [Everything/HTML.pm], which is where the bug lies -- both splits there need a &lt;code&gt;, 2&lt;/code&gt; argument tacked on to the end.  A closer look at the code shows that it also needs some reordering -- &lt;code&gt;[Handling SSL with LWP|how to handle https:// links]&lt;/code&gt; does not have a prefix of &lt;code&gt;"Handling SSL with LWP|how to handle https://"&lt;/code&gt; and a nodeloc of &lt;code&gt;" links"&lt;/code&gt;, with no title.  Rather, it has a full psudo-uri of "Handling SSL with LWP", (which has no schema), and a title of "how to handle https:// links".&lt;/p&gt;
&lt;p&gt;Unfornatly, this node is of type [pmmodule].  That means it has two copies, in normal files, on each of the web servers, and no entry in the database.  That means it can't be patched by the (wonderful) normal mechinisim.  Instead somebody has to SSH in, edit the file, and scp it to the two individual copies, then wait for the web severs to restart and pick up the changes (or force them to restart, which I should remember how to do).&lt;/p&gt;
&lt;p&gt;I've been meaning to fix this for a while -- I'll make edits on my local copy soon, and do a bit of testing before I push out the change.&lt;/p&gt;
&lt;p&gt;I'm also going to consider making patches replyable-to.  If you start to see changes to this effect, be careful what you say in them, because until I tell you otherwise, you should assume that they're world-readable.  That means that discussion of things with potential security issues should still take place on the wiki.&lt;/p&gt;
&lt;p&gt;(I've done some work on this before, but I havn't pushed it through to the real PM because the changes needed have the potential to muck things up a decent bit, and because I'm not real clear on if the problems I found were bugs in the testing environment or in my code...)&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[Corion], 2004-05-10&lt;br /&gt;
I've been looking through the patches and have tried to do some "QA" onto them. I've started with [demerphq]s batch, but they seem to be interdependent, so I've looked at [belg4mit]s patch for easy results:&lt;br /&gt;
The patch only adds the &lt;tt&gt;:&lt;/tt&gt; to the character class allowed in "full" links, that is, to links that start with &lt;tt&gt;http://&lt;/tt&gt; or other internet protocols. I see no harm in applying that patch, but I would like to see a testbed of "links that are supposed to work" and their HTML renditions, against which future modifications would be tested.&lt;br /&gt;
One thing that might be to consider is, that this change allows what I call "Yahoo redirect spam", by using &lt;tt&gt;http://rd.yahoo.com&lt;/tt&gt; as a redirector to redirect traffic to other sites, for example by using [http://rd.yahoo.com/foo/bar/http://www.corion.net/] (doesn't work yet, as the patch hasn't been applied), but this is mostly used in spam mails and the address is visible to a human anyway.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[Petruchio], 2004-05-09&lt;br /&gt;
Greetings. I've applied a patch which changes the way your show containers power works.
Now, rather than embedding tables, it embeds divs, which are styled in the CSS.  The
intention was to have a less disruptive diagnostic tool, which messed up the page rendering
less often.  This seems to have succeeded, from where I'm sitting.  Check it out, make sure
it works at least as well for you as it did in the past.
&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[belg4mit], 2004-04-14&lt;br /&gt;
&lt;/p&gt;
While posting [RIP PPT] I tried linking to
&lt;tt&gt;http://web.archive.org/web/*/http://language.perl.com/ppt/&lt;/tt&gt;
and got this back [http://web.archive.org/web/*/http://language.perl.com/ppt/].
I suspect the problem is the class on line 32 ought to include &lt;tt&gt;:&lt;/tt&gt;

&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-04-10&lt;br /&gt;
Ok, ive released a bunch of new patches to support similar stuff for the personal nodelet as I did for titlebar links (and tye did for the nodelet settings.) Its all tested on the test server as usual. The basic idea is to put all the logic for handling links in the 
[http://perlmonks.org/index.pl?node_id=344132|personalnodelethandler] 
and then calling it as needed. It handles customizing the title after they have been added from the nodelet, ordering, arbitrary html and control of how many links are displayed (and from which end of the list). Its written to be used as either part of [User Settings]  or as a standalone by providing an additional option (my preference). The other patches are to the things that deal with personal nodelets for switching them over to use the new core routine.
&lt;/p&gt;
&lt;p&gt;[belg4mit]: If you don't specify a configuration then its not that much more work than the current system. (At least if it is it can be made that way.) And even when you do its a negligable amount and web server load at that. 
&lt;/p&gt;
&lt;p&gt;
I thought this is supposed to be a place where TIMTOWTDI fans come to play? I personally wanted this feature and so I wrote it. Its tested, and unless it really proves to be a load problem I would be disappointed if it didnt get applied. I also feel that providing a set of optional links to things like your settings, and your notepad is a useful tool will probably be welcomed by a reasonable number.
&lt;/p&gt;
&lt;p&gt;
I think its fair to point out that certain of the links in the title bar can't be made via the personal nodelet. Even after the patches I just provided were applied which expand the personal nodelets powers. For a logout link, for example, you could make an normal Anchor link to your normal site with the appropriate arguments, but it wouldnt be correct when you logged in under a different domain.
&lt;/p&gt;
&lt;p&gt;
And last but not least, I personally almost never use the personal nodelet. Yet I just hacked a bunch of stuff for it. Hopefully people will appreciate that when they consider that they personally dont want to configure their titlebar links.
&lt;/p&gt;
&lt;p&gt;
If we can let people do this, and the cost isn't prohibitive why not let them do it?&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[belg4mit], 2004-04-10&lt;br /&gt;
The patches are interesting but they seem to overkill. The same effect
can be achieved by turning off the titlebar links and using the personal
nodelet. What advantage does your system have other than adding more
ops per page?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-04-09&lt;br /&gt;
Hi folks. Ive posted three new patches to allow people to configure and manage the links on the title bar (including supporting arbitrary HTML and PM style links). [http://web6.p15138201.pureserver.info/index.pl?node_id=323609|Titlebar Settings on the test site] has a working implementation. Im going to look into the personal nodelet. The patch is in three parts, two new htmlcode nodes and one hack to the current code in monktitlebar. the latter cleans that node up a touch, and puts in a wrapper that forwards to one of the new htmlcode nodes get_title_links(). which is designed to work with Titlebar Settings.&lt;br /&gt;
Hopefully folks like it and itll get applied soonish. I really want to be able to do this. :-)
&lt;/p&gt; 
&lt;p&gt;[demerphq], 2004-04-05&lt;br /&gt;
[id://342477|Updated add_signature v2]. Hopefully this meets your meaning. I've made changes that reflect two possible interpretations of your words. First, it doesnt put the delim in if both template and signature are being used. Second I have provided support for $VARS-&gt;{keep_yer_claws_off_my_sig} which will override any PM modification of the template or signature, as well as any warnings it might generate.
I haven't done a reciprocal patch to user settings or anything to support it as I actually dont think it should be used. But its there should the [gods] decide its needed.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[tye], 2004-04-04&lt;br /&gt;
If I have a template, please don't add to it.  There needs to be a way to not be bothered by the 'hey, Stupid, write here' text and I don't see a reason to add that text if I've already got a non-empty template being inserted above the sig tags.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-04-04&lt;br /&gt;
Well, after [theorbtwo] noticed a problem with my implementation of [bazb]s patch and I had to answer a question about the interface he asked I realized the design was wrong. [id://342477|I've redone it now and I think its much nicer]. Ive put patches up for [http://perlmonks.org/index.pl?node_id=342283|addnewform] and [http://perlmonks.org/index.pl?node_id=342282|addnewnoteform] to use the new nodes that assume v2 is applied. All patches arem marked 'ver 2'. All of these patches represent the current state on the test box.
&lt;/p&gt;
&lt;p&gt;[demerphq], 2004-04-03&lt;br /&gt;
FWIW: Looks good to me. I was just looking into some patches to these nodes as well, so ill just incorperate your change into mine as well.&lt;br /&gt;
I really think these need to be refactored. &lt;strike&gt;The question is how.&lt;/strike&gt;&lt;br /&gt;
Ok, ive refactored [addnewform] and [addnewnoteform] so that the signature handling is in a single seperate node ive provisionally called [id://342281|add_signature] ive also modified them both to use a new mechanism for adding Re: to the title which is at [id://342280|add_re_to_title]. My patches include [bazb]'s. I havent yet tested them on the test server, but they pass -c with strict running, and the add_re_to_title is pretty well tested as it doesnt involve PM specific functionality.
&lt;br /&gt;
&lt;b&gt;Update a few hours later:&lt;/b&gt;K its all tested now.
&lt;/p&gt;
&lt;p&gt;[BazB], 2004-04-02&lt;br /&gt;
I've just submitted a patch to [id://41840] and the same patch for [id://11910].&lt;br /&gt;
I'm still running across a significant number of posts where the poster simply wasn't sure where the sig div tags should go.&lt;br /&gt;
Hopefully a litte HTML comment should be enough to point folk in the right direction.&lt;br /&gt;&lt;br /&gt;

I'm not 100% sure I've got the patch right.../msgs or comments here please.
&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;[Corion], 2004-03-30&lt;br /&gt;
Regarding the accesskeys/hotkeys - I've looked at the CSS specs, and while CSS&lt;b&gt;3&lt;/b&gt; claims to do something about the keys, not even Mozilla implements it. So it seems like accesskeys remain in the realm of HTML and thus won't be implemented. It's not an ideal solution, but I understand it, as I'm not keen on checking the keybindings for various browsers myself. One thing I've seen in my ventures to various sites is the use of numeric shortcuts instead of mnemonic shortcuts, that is, making &lt;tt&gt;ALT-1&lt;/tt&gt; and so on accesskeys - would that be a viable way? I don't know of any use of the digit keys in UIs and I interpret the anecdotal evidence to point that way too.
&lt;/p&gt;
&lt;p&gt;[crazyinsomniac], 2004-03-29&lt;br /&gt;
About "Tick Tock",
can you name one spot?
I'm pretty sure the point of the tick tock nodelet has always been to show the server time.
As for the table stuff, you can always just ignore that part (even though it would fit just the same).
How about adding a separate format for server time to [user settings]?
&lt;br /&gt;
What about [id://332660]? I'd have thought that one would be a no-brainer.
&lt;/p&gt;
&lt;p&gt;[tye], 2004-03-29&lt;br /&gt;
I'd hope that keyboard binding could be done via CSS.  I find them quite inappropriate to be selected at the server.  The few times I've run into them were quite frustrating because my usual key binding stopped working.
&lt;/p&gt;&lt;p&gt;
Regarding [crazyinsonmiac]'s [id://340377|patch], part of the point of [Tick tock] is that times are displayed in two different ways on the site and you can match their format against the format used in [Tick tock], so I don't want to change the format of the server time in [Tick tock].  I also find that times fit nicely in the nodelet column but added text wouldn't fit.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[belg4mit], 2004-03-29&lt;br /&gt;
In my experience browsers tend to use Ctrl-F or Alt-F for Find.
&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[Corion], 2004-03-28&lt;br /&gt;
I've added a tiny patch to [talkform] to add an access key (ALT-C)
to it. This makes it easy to use the chat from any page without
using a mouse. One obvious addition would be to have the navigation/search textentry in the upper left use ALT-S, but I don't know whether browsers reserve
ALT-S for "Search"...
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-03-09&lt;br /&gt;
Ok, ive created a [id://334971|new patch] to the v/e system. This one is a much more aggresive rewrite. I think its got a better feel to it and fits in with the other site docs more. Something close to the patch is on my [pad://demerphq]. The patch is actually
spell checked and has a few differences to it. Its live on the test server now too.
[http://web6.p15138201.pureserver.info/index.pl?node_id=5938|Here]. And yes I have now reviewed the possible changes node that [theorbtwo] did a while back. I had completely forgotten about them. If and when the system changes Id be happy to rewrite things appropriately.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-03-08&lt;br /&gt;
Regarding the [id://334549|wrapcode patch] I did. There are two intentions of this patch. First its more efficient than the earlier patch I wrote (and fixes the same bugs.) Second it deals with &amp;d; as being the digit holder, and it handles the case where the number of digits provided by the user is less than the number of digits required to list all the lines. And it handles the case where the user has forgotton to put a seperator between the line count and the end of the prefix. Thus if the users prefix is '&amp;1;' the code will not "ripple" when it goes from 9 to 10 and 99 to 100 etc, and a space will automatically be added to the end of the prefix to ensure its obvious the line number is not part of the code.  
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-03-07&lt;br /&gt;
The [id://334605|patch] to the [voting/experience system] that I posted (and looks like [http://web6.p15138201.pureserver.info/index.pl?node_id=5938|this]) depends on the following settings table ([http://web6.p15138201.pureserver.info/index.pl?node=level+faqlinks|level faqlinks]):
&lt;/br&gt;
&lt;table width="100%" cellpadding="1"&gt;&lt;tr&gt;&lt;th&gt;Setting&lt;/th&gt; &lt;th&gt;Value&lt;/th&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td bgcolor="#CCCCFF"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/td&gt; &lt;td bgcolor="#DEDEFF"&gt;&lt;font color="#000000"&gt;&amp;#91;id://21211|Initiate&amp;#93;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td bgcolor="#CCCCFF"&gt;&lt;font color="#000000"&gt;10&lt;/font&gt;&lt;/td&gt; &lt;td bgcolor="#DEDEFF"&gt;&lt;font color="#000000"&gt;&amp;#91;id://244022|Saint&amp;#93;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td bgcolor="#CCCCFF"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/td&gt; &lt;td bgcolor="#DEDEFF"&gt;&lt;font color="#000000"&gt;&amp;#91;id://17643|Novice&amp;#93;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td bgcolor="#CCCCFF"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/td&gt; &lt;td bgcolor="#DEDEFF"&gt;&lt;font color="#000000"&gt;Acolyte&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td bgcolor="#CCCCFF"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/td&gt; &lt;td bgcolor="#DEDEFF"&gt;&lt;font color="#000000"&gt;&amp;#91;id://198665|Scribe&amp;#93;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td bgcolor="#CCCCFF"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/td&gt; &lt;td bgcolor="#DEDEFF"&gt;&lt;font color="#000000"&gt;&amp;#91;id://17644|Monk&amp;#93;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td bgcolor="#CCCCFF"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/td&gt; &lt;td bgcolor="#DEDEFF"&gt;&lt;font color="#000000"&gt;&amp;#91;id://17645|Friar&amp;#93;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td bgcolor="#CCCCFF"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/td&gt; &lt;td bgcolor="#DEDEFF"&gt;&lt;font color="#000000"&gt;Abbot&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td bgcolor="#CCCCFF"&gt;&lt;font color="#000000"&gt;8&lt;/font&gt;&lt;/td&gt; &lt;td bgcolor="#DEDEFF"&gt;&lt;font color="#000000"&gt;Bishop&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;
 &lt;tr&gt;&lt;td bgcolor="#CCCCFF"&gt;&lt;font color="#000000"&gt;9&lt;/font&gt;&lt;/td&gt; &lt;td bgcolor="#DEDEFF"&gt;&lt;font color="#000000"&gt;Pontiff&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[Corion], 2004-02-25&lt;br /&gt;
[leira] found that [id://111307] is still using the &lt;tt&gt;blue*.gif&lt;/tt&gt; versions of the images where it should be using the &lt;tt&gt;green*.gif&lt;/tt&gt; versions, at least
for the Poll and Talk buttons. I conclude from [theorbtwo]s comment in the CB that only [gods] can change the values, so they must step in here ...&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Update:&lt;/b&gt; The links go to the blue variants because the green images are missing. D'oh. I'll possibly create them if I find time.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[Petruchio], 2004-02-24&lt;br /&gt;
Hey. I haven't been doing any dev stuff lately, but I've been keeping an eye on the patch lister and the wikis. It looks distinctly like you guys are chewing bubblegum and kicking ass.  Keep up the good work.
&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[tye], 2004-12-19&lt;br /&gt;
I've started patching HTML.pm to better fix the problem. There is so much room for improvement there that I haven't decided how much I want to fix right now (and there are some backcompat issues to fix).
&lt;/p&gt;&lt;p&gt;
The worst case appears to be 0.3 CPU seconds per crypt, which means, even with the current HTML.pm calling crypt *3* times for each op=login, the DoS potential is no more than The Thread That Must Not Be Named.
&lt;/p&gt;&lt;p&gt;
So I'm going to sleep and worry about deploying something Friday or Sunday or...
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq] 2004-12-19&lt;br /&gt;
Provided patch for the issue below.
&lt;/p&gt;
&lt;p&gt;[diotalevi], 2004-12-19&lt;br /&gt;
In reading [http://www.freebsd.org/cgi/man.cgi?query=crypt&amp;apropos=0&amp;sektion=3&amp;manpath=FreeBSD+5.2-RELEASE+and+Ports&amp;format=html|FreeBSD's crypt(3)] I get the impression that users whose username match /^_/ trigger the DES Extended mode where the next four characters indicate the number of loops to go. A malicious user could login as _zzzz.... which would have crypt() in confirmUser of [Everything/HTML.pm] internally loop for 16007040 rounds. My guess is that it'd be obnoxiously slow and easy to knock over a server this way.&lt;/p&gt;&lt;p&gt;Similarly, usernames of the form /^\$\d\$/ trigger another mode and in this case the amount of the username that is used is conditional on if there is another dollar sign. A user like /^\$\d\$\$/ might be a corner case for the libcrypt library.&lt;/p&gt;
&lt;p&gt;[demerphq], 2004-02-16&lt;br /&gt;
Re: [tye]'s &lt;i&gt;I'd rather reduce code duplication by just temporarily appending 'document'  to the list tables for nodetype 'user' and letting the node cache do the work.&lt;/i&gt;. This is done. It required an additional patch to Create A New User to make it work. The edit code is changed, and the display code can stay the same. Cheers.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-02-16&lt;br /&gt;
I like this idea. Since htmlcode returns a string it could be easily provided via an XML generator. id assume the xml generator node itself would have to be restricted to gods though.
&lt;/p&gt;
&lt;p&gt;
++[castaway] for the password patch.
&lt;/p&gt;
&lt;p&gt;[Corion], 2004-02-16&lt;br /&gt;
For a start, I would go with the "whole functionality test", like the way you described your actions below, but the other test where I submit values to a form,  the engine runs the HTMLcode and then reports the results is also interesting.
&lt;/p&gt;
&lt;p&gt;For the sake of simplicity, I would like to keep the expected result within the test program, as this allows for more flexibility than a plain string comparision, and keeps the testing outside of the Everything engine.&lt;/p&gt;
&lt;p&gt;[castaway], 2004-02-16&lt;br /&gt;
It's certainly an interesting idea.. and theres only [http://www.perlmonks.org/index.pl?node_id=106927&amp;whichtype=4|271] htmlcodes (aka subs) to be tested. Maybe a nodelet in which you input htmlcode id, params and somehow some output value to compare with.. plus a way of automating? I'm not quite sure how you propose to do it with WWW::Mechanize, tho I suppose thats just a higher level of testing. Im thinking of a db of known inputs, known outputs, which can be run after changes to see if the behaviour is as before, and to get an output to update the test db with, for the bits that have purposely changed. Your idea is more of overall functionality I guess. (Hmm, we have a func spec for this thing anywhere? :) Should keep you busy a while..

&lt;p&gt;[Corion], 20045-02-16&lt;br /&gt;
Reading what [castaway] did, would it be a good idea to create functionality regression tests for PM? Small test scripts that recreate/automate these actions, and check for the relevant changes (like [castaway] described in this case). Possibly there would also be tests that check for the changes in the database, but I would prefer a solution that works purely via HTTP, as it can be run from home or locally on the pmdev machine, or even on the production machines.
&lt;/p&gt;
&lt;p&gt;If there are no objections and I find free time, I'll start by implementing what [castaway] described as a small test file. If there are any hints/wishes regarding configurability/user lists/general infrastructure, my ears are open, but I'll start with the most simple approach first and let the framework emerge from that instead of designing anything.&lt;/p&gt;
&lt;p&gt;I plan to use my to(y|ol)s of choice, [cpan://WWW::Mechanize] and [cpan://Test::HTML::Content], as the [cpan://WebTest] modules are unknown to me - if anyone has better suggestions, I'd like to hear these as well!&lt;/p&gt;
&lt;p&gt;Now, thinking about it, and having written three paragraphs already, would this be good to discuss in a PMDiscuss/Meditation as well? Having more people write tests would be good, but having tests of different quality/writing style is bad ...&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[castaway], 2004-02-16&lt;br /&gt;
I just patched [password_field] to send empty default values for the password fields. Since it already only actually changes the password when the fields have a value, this works fine. Is this what sporty wanted, or am I way off track?&lt;br /&gt;
Tested on test server: Open homenode edit page, submit (with empty password fields) - can still login with current password. Open homenode edit page, change password in both boxes - can now login with new password. Also, source of homenode edit page does now not contain any passwords.
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-02-15&lt;br /&gt;
I'd rather reduce code duplication by just temporarily appending 'document'  to the list tables for nodetype 'user' and letting the node cache do the work.
&lt;/p&gt;&lt;p&gt;
Don't put webserver times into the DB.  Use 'now()' (which won't work in a placeholder, of course).  For 'lastedit', just don't set it and it will change to 'now()' automatically (but that code should go away so that the node cache handles it).
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-02-16&lt;br /&gt;
Posted another set of patches. The one to [user edit page] and [user display page]. Once you apply these patches you should remove 'document' from the user node type list. What it does is simulate the fetch/update/insert logic that would occur on a the document part of a user object normally, but now only occurs when showing a user home node. This means that it adds the 'doctext' and 'lastedited' fields to the $NODE object directly. That way I didnt have to change any of the other code. It seems to work correctly on the test site. (This has now been tested with both new users and existing users. It works fine.)
&lt;/p&gt;
&lt;p&gt;
Also, now that they are cached at the DB level, the best nodes nodelets need to have their cache times reduced. I would say to quater or half hourly. Most times all this will do is change the "Refresh in" time. Personally i think the (nodelet,db) caching should be Daily Best: (900,3600) Weekly Best: (1800,4*3600) Monthly Best: (3600,24*3600) which. I know [tye] said that we dont want to turn this into a pig, but fetching 10-20 rows every 15 minutes isnt that big a pain I would have thought.
&lt;/p&gt;
&lt;p&gt;
I mean other users is not being cached at the nodelet level at all from what I can tell. We have more to gain there that we do with fetches from picked_nodes
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-02-15&lt;br /&gt;
Posted another set of patches. The one to [get_picked_nodes] is a bit of a clean up and reorg, as well as a few minor tweaks to existing functionality such as removing the year from best of nodelets, to (hopefully) make them stop wrapping. The other code is to use it as a cache for [other users] data via [other users xml ticker] and [showusers]. I set it to show user who have been around for 3 minutes, and to cache for the same amount of time as it checks for user to be around +- a fuzz factor of 1/4 the amount of time (when below 900 seconds). The time is configured via a variable set in _minutes_. Hope that helps with the caching.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-02-13&lt;br /&gt;
Ive updated [id://328664] to fix the html escaping bug (it only happens for best nodes). And added a refresh time. The posted code is live on the test server if you want to check it out. Also it would be good if you forced a refresh of the cache (just add force_refresh=1 to your query string for the screens). Cheers.
&lt;/p&gt;
&lt;p&gt;[demerphq], 2004-02-13&lt;br /&gt;
Noticed a small bug in get_picked_nodes, it seems that the way the titles are being escaped [Meryln]s &amp;bul; thingee doesnt get escaped and renders properly. Which IMO isnt the highest priortiy issue, but probably should be fixed if only for consistancy.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-02-13&lt;br /&gt;
&lt;code&gt;
sub updateNodelet
{
    my ($NODELET) = @_;
    my $interval;
    my $lastupdate;
    my $currTime = time; 

    getRef $NODELET;

    $interval = $$NODELET{updateinterval};
    $lastupdate = $$NODELET{lastupdate};
    
    # Return if we have generated it, and never want to update again (-1) 
    return if($interval == -1 &amp;&amp; $lastupdate != 0);
    
    #__PATCH__
    if ($interval&gt;900) {
        $interval+=int(rand(1800)-900)
    } elsif ($interval&gt;60) {
        $interval+=int(rand(120)-60)
    }
    #__PATCH__
    
    # If we are beyond the update interal, or this thing has never
    # been generated before, generate it.
    if((not $currTime or not $interval) or
        ($currTime &gt; $lastupdate + $interval) || ($lastupdate == 0))
    {
        $$NODELET{nltext} = parseCode($$NODELET{nlcode}, $NODELET);
        $$NODELET{lastupdate} = $currTime; 

        updateNode($NODELET, -1) unless $interval == 0;
        #if interval is zero then it should only be updated in cache
    }
    
    ""; # don't return anything
}
&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;[demerphq], 2004-02-12&lt;br /&gt;
&lt;strike&gt;Judging by the patch lister, something went horribly wrong. I hope not but if so I really hope it wasn't too much trouble.  Please let me know what the story is so I can look into fixing it. Cheers.
&lt;/strike&gt;&lt;br /&gt;
Like the numbnuts I can be I didn't look closely at the situation and completely misunderstood the patch lister. Thanks [tye]. I hope everybody likes it, and I definately will take a deep breath and look closer next time. :-)
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-02-11&lt;br /&gt;
Now Joe random user &lt;i&gt;can't&lt;/i&gt; force a refresh. And I used [parseTimeInString], in the end I kept it simple and just showed the update time in the users local time.  Mostly cause I didnt want to mess around with converting seconds to next refresh to a formatted time. Other than that the code is tested on the test server, along with the three pages, and the "Best Nodelets" as well. I'm not aware of a worst nodes nodelet. As I said Id like to have a way for the user to set the number of rows shown in the nodelet, but im happy to leave that for another night. I hope this is up to scratch now. :-) Cheers. 
&lt;/p&gt;
&lt;p&gt;[demerphq], 2004-02-11&lt;br /&gt;
Nope, your right. Joe random user &lt;i&gt;shouldn't&lt;/i&gt; be allowed to force a refresh. Thats mostly code for me to test with. I was planning on either removing that check, or to set it to only function if the user was a god (but i havent gotten around to figuring out how to do that check yet, gimme time :-)
&lt;/br&gt;
I found [parseTimeInString] which appears to be what the Tick Tock nodelet uses. I'll check [parsetime], but its useful to know that I should feed it/them GMT times. Ill sort that out. Btw, how does "Last update was DATE, approximately X hours to next refresh." sound?
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[tye], 2004-02-11&lt;br /&gt;
I hadn't looked at the code.  Joe random user shouldn't be allowed to force a refresh. [parsetime] converts a standardly formatted numeric date/time (in the server's local timezone which should be GMT but still isn't) into the user's preferred timezone and format.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-02-11&lt;br /&gt;
I have updated the version on the test server to sort out some issues raised by [castaway] in the CB and below and to handle nodelet output. Before I update the stuff here Ill sort out the time issue [theorbtwo] raises. Unless someone can give me a pointer to how showing people localtime can be accomplished Ill just change the message to say how long it will be until the node is refreshed. Also I may redo it so it doesnt use XML::Fling for html, as it turns out that its a pain to do so. (Unless as is likely ive missed some way to cause it NOT to escape the last argument.) Also, im thinking that for the nodelets ill provide a way to set the number of records displayed (out of the number actually cached).
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[theorbtwo], 2004-02-11&lt;br /&gt;
[tye], you may have gotten confused because the test server's local time is 6 hours off from the real server's local time (specificly, it's CET -- central europe time, which is 6 hours off from EST except one week per year -- they don't go out of daylight savings time at quite the same time), &lt;strike&gt;and those times are in server-localtime&lt;/strike&gt;.  Oooh, even more confusing: the last-updated times are given in GMT.
&lt;/p&gt;&lt;p&gt;
There's still some outstanding issues I need to resolve before I open up the test server to general use.  Expect an announcement here soon.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[castaway], 2004-02-11&lt;br /&gt;
Very nice.&lt;br /&gt;
Theres a couple of little bugs in the version on the test server:
&lt;code&gt;Remember: &lt;i&gt;Don't feed the &lt;bTrolls!&lt;/b&gt;&lt;/i&gt;&lt;/code&gt; (at the top of worstest nodes), also a couple of the links it creates there are strange, eg the 'OT: Complaints about spidering hacks book' (or whatever its called), only has the 'OT' linked to the node, the rest is normal text..
&lt;code&gt;
&lt;td&gt;
&lt;a href="?node_id=307566"&gt;
&lt;a href="/index.pl?node=OT"&gt;OT&lt;/a&gt; Complaints about Spidering Hacks book&lt;/a&gt;
&lt;/td&gt;
&lt;/code&gt;
In my opinion we could do away with the rep column, if you add a hint that the nodes are sorted in order of rep. I suppose just displaying it for people who have voted would be a whole new level of complication we probably dont want to go into.. And adding ++/-- buttons for those who havent is a little silly, when all they can see is the title. (Now something like a 'select list of comments on the node' is popping into my mind, I'd better stop before I go too far..)
&lt;/p&gt;

&lt;p&gt;[dermerphq], 2004-02-12&lt;br /&gt;
Ah, im not sure what you mean about the best of day thing. The logic it uses is the same as the old [Best Nodes]:
&lt;code&gt;
AND ( ( n.ucreatetime + 86400 * ? ) &gt; unix_timestamp())
&lt;/code&gt;
&lt;p&gt;
Which means that nodes must be at most 86399 seconds old (where $arg{days}==1) and since Best of Day refreshes hourly and best of week every four hours, I don't think there will be the lag as you describe. So no I dont think they will complain about that. :-)  They might complain about no best nodes of all time perhaps, but shrug. And I think we aught to consider not posting reps on the pages.  I only included them for maximum compatibility with the current code. &lt;br /&gt;
Ill post a patch to get_picked_nodes to handle nodelets and also patch the nodelets themselves, which should be easy.
&lt;/p&gt;
&lt;p&gt;[tye], 2004-02-11&lt;br /&gt;
Very nice, [demerphq].
&lt;/p&gt;&lt;p&gt;
Will the user community complain too much about 'best of day' being 'best of yesterday'?  That hadn't been my plan but I think it is the best choice.  Next is to fix the nodelets (and apply the patches).
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-02-11&lt;br /&gt;
Ok, I'm done now pretty much. The code at [id://327642] has been tested as a working cached (selected)? (best|worst) nodes engine. The table used was 
&lt;/p&gt;
&lt;code&gt;
CREATE TABLE picked_nodes (
   pick_id  int(11)    NOT NULL,
   pickname char(240)  NOT NULL,
   auth_id  int(11)    NOT NULL,
   authname char(240)  NOT NULL,
   rep      int(11)    NOT NULL,
   days     int(3)     NOT NULL,
   picktype int(1)     NOT NULL,  /* x0 - Best x1 Selected 
                                     0x - DESC 1x ASC */
   seq      int(3)     NOT NULL,
   ulastupdate int(11) NOT NULL,
   UNIQUE INDEX idx_pick (days,picktype,pick_id),
   UNIQUE INDEX uidx_main (days,picktype,seq)
) TYPE=MyISAM PACK_KEYS=1
&lt;/code&gt;
&lt;p&gt;
I've written patches for [id://327644|Best Nodes] and [id://328068|Worst Nodes] and created code requests for [id://328065|Selected Nodes], and the engine code is at [id://327642|get_picked_nodes]. If above table is created and then these patch are applied, (in reverse order) then eveything should be fine. Its tested [http://web6.p15138201.pureserver.info/index.pl?node_id=323503|Worstest Nodes] and [http://web6.p15138201.pureserver.info/index.pl?node_id=323496|Bestest Nodes] and [http://web6.p15138201.pureserver.info/index.pl?node_id=323500|Selected Nodes]. You can add an remove types and ranges as you procede and the code should just follow along. It may be worth wiping the table after making any serious changes just so unused stuff gets flushed out.
&lt;/p&gt;
&lt;hr /&gt;
Continued in [id://328159]
</field>
</data>
</node>
