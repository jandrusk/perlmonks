<?xml version="1.0" encoding="windows-1252"?>
<node id="222493" title="pmdev to-do wiki" created="2002-12-27 02:31:06" updated="2005-08-10 06:24:51">
<type id="68046">
wiki</type>
<author id="142755">
tye&amp;nbsp;</author>
<data>
<field name="doctext">
&lt;!-- Notes on updating this wiki:

Put your change in the items list, between the bracketing &lt;dl&gt;&lt;/dl&gt; tags, in a format like so:

&lt;dt&gt;&lt;b&gt;Short description of issue&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
  Detailed explanation (possibly with reasoning, examples and other things).
  Please don't keep it as brief as you can.
&lt;/p&gt;&lt;p&gt;
  (More paragraphs as necessary.)
&lt;/p&gt;&lt;p align='right'&gt;&lt;wikihead&gt;&lt;/p&gt;&lt;/dd&gt;

--&gt;
&lt;h4&gt;PMDEV To-do items:&lt;/h4&gt;
&lt;p&gt;Please feel free to add items as you see fit.&lt;/p&gt;&lt;hr/&gt;&lt;dl&gt;



&lt;dt&gt;&lt;b&gt;Track all user edits&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
  Currently, when a user edits a node she owns
  (i.e. replies, and root posts in the various sections),
  the previous content is completely lost;
  no history is retained.
  (Some monks have set up off-site repositories to try to mitigate this.)
&lt;/p&gt;&lt;p&gt;
  Log all such changes, just as is currently done for edits to [wiki]s
  and so on.  Many benefits will obtain.
&lt;/p&gt;&lt;p align='right'&gt;[jdporter], &lt;a href="#2010-12-29 12:19:46" name="2010-12-29 12:19:46"&gt;[localtime://2010-12-29 12:19:46]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;


&lt;dt&gt;&lt;b&gt;Log more janitorial events in the edithistory&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
  There are still a few janitorial events which don't show up in the [edithistory].
  Make it so that they do. See [id://768935] and discusson on [id://783978].
&lt;/p&gt;&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-28 13:10:51" name="2009-07-28 13:10:51"&gt;[localtime://2009-07-28 13:10:51]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Complete the migration of site styling to CSS&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
This primarily involves eliminating &lt;c&gt;&lt;FONT&gt;&lt;/c&gt; tags. Also desirable: eliminating the use of tables for representing semantic structure, such as in displaying threads. Catch up with what's been done and what could yet be done by reading [id://675952].
&lt;/p&gt;&lt;p&gt;
The next step would be to refactor the CSS ad-hoc architecture into something planned. 
&lt;/p&gt;&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-24 13:41:34" name="2009-07-24 13:41:34"&gt;[localtime://2009-07-24 13:41:34]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Make it possible to frontpage [Perl News] posts&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
Or at least determine why they can't be.
&lt;/p&gt;&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-24 13:41:34" name="2009-07-24 13:41:34"&gt;[localtime://2009-07-24 13:41:34]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Add a "raw" mode to [Newest Nodes]&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
This would simply display the nodes in chronological order &amp;mdash; no sectioning, no sorting. [href://?node_id=157620;searchterms=order_nn_by|search for 'order_nn_by'].
&lt;/p&gt;&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-24 13:41:34" name="2009-07-24 13:41:34"&gt;[localtime://2009-07-24 13:41:34]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Render superdocs meaningfully in XML&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
Create [superdoc xml page] which renders the final content of the superdoc just as [superdoc display page] does in XML format instead of HTML.
&lt;/p&gt;&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-24 13:41:34" name="2009-07-24 13:41:34"&gt;[localtime://2009-07-24 13:41:34]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Fix the form in [chatterbox sidebar]&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
Currently it shows checkboxes, but they're useless. Either make the form work, or remove the checkboxes.
&lt;/p&gt;&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-24 13:41:34" name="2009-07-24 13:41:34"&gt;[localtime://2009-07-24 13:41:34]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Add a "forward" capability in [Message Inbox]&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;
&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-24 13:41:34" name="2009-07-24 13:41:34"&gt;[localtime://2009-07-24 13:41:34]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Integrate [http://microformats.org/wiki/Main_Page|microformats]&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;
&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-24 13:41:34" name="2009-07-24 13:41:34"&gt;[localtime://2009-07-24 13:41:34]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Add support for [http://hobix.com/textile/|Textile] markup&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;
&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-24 13:41:34" name="2009-07-24 13:41:34"&gt;[localtime://2009-07-24 13:41:34]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Integrate [http://tinymce.moxiecode.com/|TinyMCE] for wysiwyg posting&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
[dhoss] submitted [id://785580]. It's still not clear how best to host/enable TinyMCE.
&lt;br /&gt; 
--
&lt;br /&gt;
This is a serious pain.  I suggest perhaps that we add it in the advanced mode and allow users to turn it off and have it remember this setting. -- [dhoss]
&lt;/p&gt;&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-24 13:41:34" name="2009-07-24 13:41:34"&gt;[localtime://2009-07-24 13:41:34]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Give [id://16902] xml/rss feed capability&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;
&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-24 13:41:34" name="2009-07-24 13:41:34"&gt;[localtime://2009-07-24 13:41:34]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Make all of the wikis consistent in using either P/HR or DL/DT/DD&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
Then put the warning&amp;amp;template outside (i.e., just above) the textarea.
&lt;br&gt;Fwiw, all wikis support &lt;tt&gt;&amp;lt;wikihead&amp;gt;&lt;/tt&gt;, so people should probably be using it universally.
&lt;/p&gt;&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-24 13:41:34" name="2009-07-24 13:41:34"&gt;[localtime://2009-07-24 13:41:34]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Create group-private postable sections&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
Create a new section (patterned off of [Perl Monks Discussion]) for each cabal group, where permission to read&amp;amp;write is restricted to the members of that group. Then promote these sections for discussions, vice the wikis. (Wikis will still have other uses, of course.)
&lt;/p&gt;&lt;p&gt;
See inner manuscript [id://790479].
&lt;/p&gt;&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-24 13:41:34" name="2009-07-24 13:41:34"&gt;[localtime://2009-07-24 13:41:34]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Flip the graph in [id://17245] so that bars are horizontal&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
 Some users complain that the table is too wide.
&lt;/p&gt;&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-24 13:41:34" name="2009-07-24 13:41:34"&gt;[localtime://2009-07-24 13:41:34]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Make a [toInbox]-like htmlcode for [Newest Nodes|NN]&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
It would create a link which simply links to [Newest Nodes], but would also show the number of "new" nodes.
&lt;/p&gt;&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-24 13:41:34" name="2009-07-24 13:41:34"&gt;[localtime://2009-07-24 13:41:34]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Need to make [SuperSearch] search [sitedoclet]s&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
In rendering any [sitedoclet] hits, it would actaually map each hit back to the page (usually a superdoc) which displays that sitedoclet.
&lt;/p&gt;&lt;p align='right'&gt;[jdporter], &lt;a href="#2009-07-24 13:41:34" name="2009-07-24 13:41:34"&gt;[localtime://2009-07-24 13:41:34]&lt;/a&gt;&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Make other data fields patchable&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Currently, only settings are patchable, not other data fields. It would be convenient
to have other patchable fields.
&lt;/p&gt;&lt;p align='right'&gt;[Corion], [localtime://2006-10-13 07:06:07]&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;More timestamp improvements&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;
There are still lots of places in the codebase where "custom" timestamp strings are being used. Many of these must remain, for backward compatibility, but many can be improved through the use of [parseTimeInString].
&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Review TODO list for obsolete items.&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Some of the items in the TODO list are complete or no longer relevent. We need to get a review done of all the points and remove those that are no longer required.
&lt;/p&gt;&lt;p align='right'&gt;[demerphq], [localtime://2006-02-02 05:38:32]&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Convert all remaining nodes using [XML/Fling.pm|XML::Fling] to use [new_xml_fling] instead&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;
This is pretty straightforward refactoring work. [new_xml_fling] provides a consistent interface and handles the 'xmlstyle' attribute. Also, since it encapsulates the use of XML::Fling, [new_xml_fling] will make the transition much easier if we ever decide to try a different XML generator.
&lt;/p&gt;&lt;p&gt;
On a related note: We should make sure that any [fullpage] nodes using XML::Fling generate a correct mime header for the response. This is easiest done by setting the 4th (real) parameter to true (conventionally, the string 'add_header').
&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Better privilege management
&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;The current cookie format is &lt;tt&gt;username|crypt(password)|iscloaked&lt;/tt&gt;, which means it's easy to get the plaintext password. This is a problem since a lot of people use the same password for multiple accounts (the fact that they shouldn't aside).
&lt;/p&gt;&lt;p&gt;We also want to encourage externally hosted tools to interact with PM as they improve the user experince, often while also lowering our DB load. However some tickers require a login, so these tools need to be given the user's credentials, but there's currently no way to supply credentials that only allow grant limited rights to a third party.
&lt;/p&gt;&lt;p&gt;The cookie should probably be an index into a table with expery-time, is-visible, and can-do-foo flags (which should work with isGod and isApproved, but not change the semantics when the thing being tested for group membership is not the currently-logged-in user). The cookie needs some extra check data to prevent people changing it to other values along the index.
&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;style=none
&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;displaytype=raw is a nice tool but it only works for [superdoc] nodes and not even for the xml/viewcode/etc. views of those.  The only difference between [superdoc display page] and [superdoc raw page] is that the former has a parent container of [general container] while the latter has none.  We should support something like style=none (name change ideas welcome) to override the parent container used to display a page.  Then style=none would turn off navigation, etc. for all pages, not just [superdoc] nodes.  Then would could also do style=wap and style=robot to present pages better suited for wireless devices or for indexing by web crawlers, etc.&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;wiki preview/done buttons
&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;We could use a "preview" button for wiki edits that refreshes the wiki lock.  We could also use a "done" button that releases the lock (which currently always lasts 10 minutes) and return to displaytype=display (which would also tell wiki links that you've seen the changes you made).&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;&lt;p&gt;Disable approving reaped nodes for non-editors&lt;/p&gt;&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
You can approve reaped nodes via each section's main page. Only [editors] should be allowed to approve reaped nodes but the [approve] opcode doesn't enforce that. Perhaps a 'canapprove' htmlcode is in order.
&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;&lt;p&gt;[Editors nodelet]&lt;/p&gt;&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
The [editors nodelet] should not allow a node to be moved if it is approved for its section.  Editors should unapprove it for its section (and/or the frontpage, tho this is probably not required) and then move it (and reapprove it, if desired). We should test that leaving a node approved for the front page then moving it causes it to move to a different section on the front page (this takes a few minutes as the frontpage is cached).  For now, the "move node" feature has just been removed so that [editors] have to unapprove, reload the page, move it (via the [approval nodelet]), reload the page, reapprove.  This really sucks.
&lt;/p&gt;&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;&lt;p&gt;Editing messages in [Message Inbox]&lt;/p&gt;&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;
We'll need a way to edit messages in [message inbox] (such as an "edit" link for each message and/or a global "edit" checkbox that displays all archived messages in text boxes so you can edit several at once).  To reduce (but no eliminate) race conditions, the actual update should check that the current text is the same as the starting text and refuse to update otherwise (probably with "&lt;tt&gt;update ... where message_id=? and msgtext=?&lt;/tt&gt;" so SQL can perhaps completely remove the race condition).
&lt;/p&gt;&lt;/dd&gt;

























</field>
</data>
</node>
