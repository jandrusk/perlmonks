<?xml version="1.0" encoding="windows-1252"?>
<node id="1451" title="updatepoll" created="1999-12-28 19:51:15" updated="2005-07-15 03:03:14">
<type id="4">
htmlcode</type>
<author id="929">
developers</author>
<data>
<field name="code">
  my $votenum= $query-&gt;param('vote');
  return   if  "" eq $votenum;
  my $address= $ENV{REMOTE_ADDR};
  my $csr= $DB-&gt;getDatabaseHandle()-&gt;prepare(
    "SELECT * FROM pollvote WHERE ipaddress=?");
  $csr-&gt;execute($address)
    or return "Voting temporarily unavailable.";
  return "You have already voted from that IP ($address)"
    if  $csr-&gt;fetchrow_hashref();
  my @choices= split( /\s*(?:\n|\z)/, $$NODE{choices} );
  # What's that you say?  There's an off-by-one error here?
  # I had no idea!
  return "Choice #".(1+$votenum)." doesn't exist"
    unless  $votenum &lt; @choices + 1;

  # gimmick 1: votes always go to (1-based) gimmickchoice
  $votenum = $NODE-&gt;{gimmickchoice} - 1 if ($NODE-&gt;{gimmick} == 1);

  $csr= $DB-&gt;getDatabaseHandle()-&gt;prepare(
    "insert into pollvote (ipaddress,polls_id) values(?,?)");
  $csr-&gt;execute( $address, $NODE-&gt;{node_id} );
  my @numbers= split( /\n/, $$NODE{numbers} );
  $numbers[$votenum]++;

  # gimmick 2: (1-based) gimmickchoice and the following choice are paired;
  # a vote for either is a vote for both
  if ( $NODE-&gt;{gimmick} == 2 &amp;&amp; (
    $votenum == $NODE-&gt;{gimmickchoice} - 1 || $votenum == $NODE-&gt;{gimmickchoice}
  ) ) {
    $numbers[ 2 * $NODE-&gt;{gimmickchoice} - 1 - $votenum ]++;
  }

  $$NODE{numbers}= join "\n", @numbers;
  updateNode($NODE,-1);
  return qq(Recorded your vote for ")
    . $q-&gt;escapeHTML($choices[$votenum]) . qq(".);
</field>
</data>
</node>
