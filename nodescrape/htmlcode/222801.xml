<?xml version="1.0" encoding="windows-1252"?>
<node id="222801" title="linkWiki" created="2002-12-28 16:58:47" updated="2004-11-20 19:06:58">
<type id="4">
htmlcode</type>
<author id="8948">
ar0n</author>
<data>
<field name="code">
my( $node, $newtitle, $flag )= @_;
$flag ||= '(*)';

return $q-&gt;escapeHTML('[no wiki given]')
    if  ! $node;

# Avoid loading (often large) wiki text into cache just to display
# whether the wiki was updated.  But use cached version if present.
my @where;
if(  ! ref $node  ) {
    my $cached;
    if(  $node =~ /\D/  ) {
        $cached= $DB-&gt;getCache()-&gt;getCachedNodeByName( $node, 'wiki' );
        my $nodetype= getId( getNode('wiki','nodetype') );
        push @where,
            'title = ' . $DB-&gt;quote($node),
            "type_nodetype = $nodetype";
    } else {
        $cached= $DB-&gt;getCache()-&gt;getCachedNodeById( $node );
        push @where, 'node_id = ' . $node;
    }
    $node= $cached
        if  $cached;
}
if(  ! ref $node  ) {
    my( $node_id, $title, $lastedit )= $DB-&gt;sqlSelect(
        'node_id, title, lastedit',
        'node, document',
        join( ' AND ', @where, 'node_id = document_id' ),
    );
    return $q-&gt;escapeHTML( "[no such wiki, $node]" )
        if  ! $node_id;

    $node= {
        title =&gt; $title,
        node_id =&gt; $node_id,
        lastedit =&gt; $lastedit,
    };
}

my $wid= 'wiki' . getId($node);
my $updated=
        exists $VARS-&gt;{$wid}
    &amp;&amp;  $node-&gt;{lastedit} ne $VARS-&gt;{$wid};

my $link= genLink(
    $newtitle || $node-&gt;{title},
    { node_id =&gt; getId($node) },
);

my $class = 'wikilink';

if ( $updated ) {
    $link .= $q-&gt;span( { class =&gt; 'wikiupdate' }, $flag );
    $class .= ' updated';
}

return qq(&lt;span class="$class"&gt;$link&lt;/span&gt;);
</field>
</data>
</node>
