<?xml version="1.0" encoding="windows-1252"?>
<node id="68047" title="wiki editpage" created="2001-03-29 03:58:58" updated="2005-08-11 02:54:13">
<type id="5">
htmlpage</type>
<author id="929">
developers</author>
<data>
<field name="page">
&lt;p align="right"&gt;&lt;font size="2"&gt;
   [% linkNode($NODE,"go back to the display view"); %]
&lt;/font&gt;&lt;/p&gt;
[{openform:-multipart,1}]
[{wikipermissionmenu:readers,1}]
[{wikipermissionmenu:writers,1}]
[%
    my $wiki_end= "&lt;!--Wiki End -- Do NOT modify this line"
        . " or add any text after it --&gt;";
    my $wiki_pat= qr/\Q$wiki_end\E\s*\z/;

    return "You don't have edit permission"
        if  ! htmlcode('hasWikiPermission','writers');

    if(  ! htmlcode('getOrRenewLock','1')  ) {
        return "Sorry, " . linkNode( $NODE-&gt;{lockedby_user} )
            . " has a lock on this node right now";
    }

    require POSIX;
    for(  $q-&gt;param('update_doctext')  ) {
        my $time= POSIX::strftime( "%Y-%m-%d %H:%M:%S", localtime() );
        s{(&lt;!--.*?--&gt;)|(&lt;wikihead&gt;)}{
            $1 || join '',
                "[$USER-&gt;{title}],",
                qq[ &lt;a href="#$time" name="$time"&gt;],
                "[localtime://$time]&lt;/a&gt;"
        }gies;
        $q-&gt;param( 'update_doctext', $_ );
        last;
    }

    my $html= '';
    my @fields= grep /^update_(.+)/, $q-&gt;param();
    my $update= $q-&gt;param('blah') eq "update";
    my $doctext_updated= 0;

    require Digest::MD5;
    if(  $update  ) {
        my @badfields;
        foreach(  @fields  ) {
            my( $field )= /update_(.*)/;
            my $new_value= $q-&gt;param("update_$field");
            my $old_digest= $q-&gt;param("digest_$field");
            my( $new_digest )= Digest::MD5::md5_hex( $NODE-&gt;{$field} );
            if(  $new_digest ne $old_digest  ) {
                push @badfields, $field;
            } elsif(  $NODE-&gt;{$field} eq $new_value  ) {
                ;   # No change
            } elsif(    $field eq 'doctext'
                    &amp;&amp;  65536 &lt;= length($new_value)
            ) {
                $html .= join '',
                    '&lt;br /&gt;&lt;font color="red"&gt;',
                    "Won't update doctext as it is too large. This means",
                    " something has probably been chopped off the bottom.",
                    "  Please ask a god to rotate the wiki.",
                    "&lt;/font&gt;&lt;br /&gt;\n";
            } elsif(    $field eq 'doctext'
                    &amp;&amp;  $new_value !~ s/$wiki_pat//
            ) {
                $html .= join '',
                    '&lt;br /&gt;&lt;font color="red"&gt;',
                    "Won't update doctext as it appears the end marker",
                    " has been truncated from the text.  This could be",
                    " because your browser cannot handle text fields as",
                    " large as are needed.&lt;/font&gt;&lt;br /&gt;\n";
            } else {
                $DB-&gt;sqlInsert(
                    'edithistory',
                    {
                        starttext =&gt;    $NODE-&gt;{$field},
                        endtext =&gt;      $new_value,
                        editor_user =&gt;  getId($USER),
                        -edittime =&gt;    "now()",
                        fieldname =&gt;    $field,
                        edithistory_id =&gt; getId($NODE),
                    },
                );
                $NODE-&gt;{$field}= $new_value;
                $q-&gt;param(
                    "digest_$field",
                    Digest::MD5::md5_hex( $NODE-&gt;{$field} ),
                );
                $doctext_updated= 1
                    if  $field eq 'doctext';
            }
        }
        # Fixup lastedit (hackish; should fix updateNode to not try to
        #  update it, nor cache it's non-existance if it isn't there)
        $NODE-&gt;{lastedit}= POSIX::strftime( '%Y%m%d%H%m%S', localtime() );
        updateNode( $NODE, -1 );
        $VARS-&gt;{ 'wiki' . getId($NODE) }= $NODE-&gt;{lastedit};
        if(  @badfields  ) {
            $html .= join '',
                '&lt;br /&gt;&lt;font color="red"&gt;',
                "The following fields weren't updated because they",
                " have been updated since you started editing: ",
                join( ',', @badfields ),
                "&lt;/font&gt;&lt;p&gt;\n";
        } elsif(  ! $html  ) {
            $html .= "&lt;b&gt;All Fields Updated OK!&lt;/b&gt;&lt;hr /&gt;\n";
        }
    }

    $html &amp;&amp;= "&lt;hr /&gt;$html&lt;hr /&gt;&lt;p&gt;";
    $html ||= "&lt;br /&gt;"
        if  isGod($USER);

    my $hiddenMD5= sub {
        my($field)= @_;
        return $q-&gt;hidden(
            -name =&gt;    "digest_$field",
            -value =&gt;   Digest::MD5::md5_hex( $NODE-&gt;{$field} ),
        ) . "\n";
    };

    # This code generates the form fields and the stuff that
    # the user sees.
    my %titletype;
    {
        my $tables= $DB-&gt;getNodetypeTables( $NODE-&gt;{type_nodetype} );
        foreach my $table (  @$tables, 'node'  ) {
            foreach my $field (  $DB-&gt;getFieldsHash($table)  ) {
                $titletype{ $field-&gt;{Field} }= $field-&gt;{Type};
            }
        }
        delete @titletype{ qw( core readers writers ) };
    }

    foreach my $field (  keys %titletype  ) {
        my $val= $q-&gt;param("pu_$field") || $NODE-&gt;{$field};
        if(  $titletype{$field} =~ /char\((.*)\)/  ) {
            my $size= $1;
            $size= 80
                if  80 &lt; $size;
            $html .= join '',
                "&lt;b&gt;$field:&lt;/b&gt;&lt;br /&gt;",
                $q-&gt;textfield(
                    -name =&gt;        "update_$field",
                    -default =&gt;     $val,
                    -size =&gt;        $size,
                    -maxlength =&gt;   $1,
                ),
                "&lt;br /&gt;\n",
                $hiddenMD5-&gt;( $field );
        } elsif(  $titletype{$field} =~ /text/  ) {
            $val .= "\n" . $wiki_end
                if  $val !~ /$wiki_pat/;
            my $inform= $q-&gt;param("update_$field") || $val;
            my $warn= "";
            if(  63000 &lt; length($val)  ) {
                if(  isGod($USER)  ) {
                    $warn= join '',
                        '&lt;font color="red"&gt;',
                        "Please rotate the wiki as it is",
                        " dangerously full.&lt;/font&gt;&lt;br /&gt;\n";
                } else {
                    $warn= join '',
                        '&lt;font color="red"&gt;',
                        "You can't edit this field right now,",
                        " the wiki is too full.",
                        "&lt;/font&gt;&lt;br /&gt;\n";
                }
            }

            $html .= join '',
                "&lt;b&gt;$field:&lt;/b&gt;&lt;font size='2pt'&gt;(Current Length: ",
                length($val),
                " In Form Length:",
                length($inform),
                ")&lt;/font&gt;&lt;br /&gt;$warn";
            $html .= join( '',
                $q-&gt;textarea(
                    -name =&gt;    "update_$field",
                    -default =&gt; $val,
                    -rows =&gt;    20,
                    -cols =&gt;    80,
                    -wrap =&gt;    "virtual",
                ),
                "&lt;br /&gt;\n",
                $hiddenMD5-&gt;( $field ),
            )
                if  ! $warn  ||  isGod($USER);
        }
    }
    $html .= join '',
        $q-&gt;submit('blah','preview'),
        "&amp;nbsp;",
        $q-&gt;submit('blah','update'),
        "&lt;/form&gt;&lt;hr /&gt;\n";

    #preview section
    if(  $q-&gt;param('update_title')  ) {
        $html .= join '',
            "&lt;b&gt;Title:&lt;/b&gt;",
            $q-&gt;param('update_title'),
            "&lt;br /&gt;\n";
    }
    foreach(  @fields  ) {
        my( $field )= /update_(.*)/;
        next
            if  $field eq "title";
        if(  $field eq 'doctext'  ) {
            if(  $doctext_updated  ) {
                $html.="&lt;strong&gt;Updated &lt;/strong&gt;";
            } else {
                $html.="&lt;strong&gt;Preview &lt;/strong&gt;";
            }
        }
        my $val= $q-&gt;param($_);
        $html .= join '',
            "&lt;b&gt;$field:&lt;/b&gt;&lt;br /&gt;",
            htmlcode( 'parselinksincontent','', $val ),
            "&lt;br /&gt;\n";
    }

    return $html;
%]
</field>
<field name="displaytype">
editpage</field>
</data>
</node>
