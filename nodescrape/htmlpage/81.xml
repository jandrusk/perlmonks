<?xml version="1.0" encoding="windows-1252"?>
<node id="81" title="user display page" created="1999-10-04 18:35:04" updated="2005-08-13 05:59:51">
<type id="5">
htmlpage</type>
<author id="929">
developers</author>
<data>
<keywords>
<keyword rating="">
jsdork</keyword>
</keywords>
<field name="page">
[%
    return join '',
        "&lt;p&gt;&lt;b&gt;If this is your usernode and you want it ",
        "back please read &lt;a href='?node_id=523120'&gt;",
        "Unused accounts zombified&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;hr /&gt;\n"
        if(  'zombie_user' eq $NODE-&gt;{type}{title}  );
%]


&lt;table class="pm-user-info"&gt;&lt;tr&gt;
[%
    # User Image
    my $src= $NODE-&gt;{imgsrc};
    return ''
        if  ! $src
        ||  ! Everything::isApproved( $NODE, 'CanHaveImage' );

    my $upd= join '', $NODE-&gt;{lastupdate} =~ /(\d+)/g;
    my $alt= "$NODE-&gt;{title}'s user image";

    if(  $src =~ /\D/  ) {
        $src= "/$src?updated=$upd";
    } else {
        $src= urlGen(
            { node_id =&gt; $src, updated =&gt; $upd },
            -1,
        );
    }
    return $q-&gt;td(
        $q-&gt;img( {
            src =&gt; $src,
            alt =&gt; $alt,
            title =&gt; $alt,
        } )
    );
%]
    &lt;td valign="top"&gt;
[%
    return linkNodeTitle('I want my picture back|*')
        if  ! Everything::isApproved( $NODE, 'CanHaveImage' )
        &amp;&amp;  $NODE-&gt;{imgsrc};
%]
      &lt;table&gt;
[%
    # Edit links
    return ''
        if  getId($USER) != getId($NODE)
        ||  getId($USER) == $HTMLVARS{default_user};

    my $eup= genLink(
        'Profile',
        { node_id =&gt; getId($NODE), displaytype =&gt; 'edit' },
    );
    my $eus= genLink(
        'Settings',
        { node =&gt; 'User Settings' },
    );
    return join '',
        '&lt;tr id="user-edit-links"&gt;&lt;td&gt;Edit your:&lt;/td&gt;&lt;td&gt;',
        "$eup, $eus&lt;/td&gt;&lt;/tr&gt;\n";
%]
        &lt;tr&gt;
          &lt;td&gt;User since:&lt;/td&gt;
          &lt;td&gt;[{parsetime:createtime}]
          [%  return q{&amp;#91;Account disabled&amp;#93;}
                if  ! $NODE-&gt;{passwd};
          %]&lt;/td&gt;
        &lt;/tr&gt;&lt;tr&gt;
          &lt;td&gt;Last here:&lt;/td&gt;
          &lt;td&gt;[{parsetime:lasttime}]
            &lt;i&gt;([{timesince:$NODE-&gt;{lasttime}}])&lt;/i&gt;&lt;/td&gt;
        &lt;/tr&gt;&lt;tr&gt;
          &lt;td&gt;Experience:&lt;/td&gt;
          &lt;td&gt;&lt;b&gt;
[%
    my $xp= $NODE-&gt;{experience};
    (  $xp &lt; -950000  ||  0 &lt; $xp  )
        ?   $xp :
    (  $xp &lt; 0  )
        ? 'requires penance'
        : 'none earned'
%]
          &lt;/b&gt;&lt;/td&gt;
        &lt;/tr&gt;&lt;tr&gt;
          &lt;td&gt;Level:&lt;/td&gt;&lt;td&gt;&lt;b&gt;
[%
    use Everything::Experience qw( getLevel );

    my $level= getLevel($NODE); # can't accessrule
    my $title= getVars(
        getNode( 'level titles', 'setting' )
    )-&gt;{$level};

    return "$title ($level)";
%]
          &lt;/b&gt;&lt;/td&gt;
        &lt;/tr&gt;&lt;tr&gt;
          &lt;td&gt;Writeups:&lt;/td&gt;
          &lt;td&gt;&lt;b&gt;
[%
    my $count= getVars($NODE)-&gt;{numwriteups};

    $count= "none"
        if  ! $count  ||  $count =~ /\D/;

    return linkNode(
        6364,
        $count,
        { user =&gt; $NODE-&gt;{title} },
    );
%]
          &lt;/b&gt;&lt;/td&gt;
        &lt;/tr&gt;
[%
    return ''   # Don't show 'location' for locked users
        if  '[NodeReaper]' eq $NODE-&gt;{nick};
    return htmlcode(
        'displaySingleVar','',
        'location',
        (   isGod($USER)
        ||  $q-&gt;param('scrub')
        ||  ! $VARS-&gt;{unfilterhtml}  )
            ? 1 : 0,
        '&lt;tr&gt;&lt;td&gt;Location:&lt;/td&gt;&lt;td&gt;',
        '&lt;/td&gt;&lt;/tr&gt;',
    );
%]
        &lt;tr&gt;
          &lt;td&gt;User's localtime:&lt;/td&gt;&lt;td&gt;
[%
    my $tz= getVars($NODE)-&gt;{timezone};
    $tz= " "
        if  $tz !~ /\S/;
    return htmlcode( 'parseTimeInString','', '', $tz );
%]
          &lt;/td&gt;
        &lt;/tr&gt;&lt;tr&gt;
          &lt;td&gt;Scratchpad:&lt;/td&gt;&lt;td&gt;
[%
    my $has_pad= $NODE-&gt;{user_scratchpad};

    my $view= $has_pad
        ?   htmlcode( 'scratchpad_link','', $NODE, 'View' )
        :   'None.';

    my @links= $view;

    if(  $NODE-&gt;{author_user} == $USER-&gt;{node_id}  ) {
        push @links, scalar htmlcode( 'scratchpad_link','',
            $NODE,
            $has_pad ? 'Edit' : 'Create',
            { displaytype=&gt;'edit', viewmode=&gt;'public' },
        );
        if( $has_pad ) {
            push @links, sprintf "%s (%s)",
                scalar htmlcode( 'scratchpad_link','',
                    $NODE,
                    'Private',
                    { viewmode=&gt;'private' },
                ),
                scalar htmlcode( 'scratchpad_link','',
                    $NODE,
                    'Edit',
                    { displaytype=&gt;'edit', viewmode=&gt;'private' },
                );
        }
    }
    return join ", ", @links;
%]
          &lt;/td&gt;
        &lt;/tr&gt;
[%
    my $and_where= isGod($USER) ? "" : "AND n.type_nodetype=16";
    my $sth= $DB-&gt;getDatabaseHandle-&gt;prepare_cached( join ' ',
        'SELECT n.node_id AS node_id, n.title AS title',
        'FROM nodegroup AS g, node AS n',
        'WHERE g.nodegroup_id = n.node_id AND g.node_id = ?',
        $and_where,
        'ORDER BY n.title ASC',
    );
    $sth-&gt;execute( getId($NODE) );

    my @groups;
    while(  my $group= $sth-&gt;fetchrow_hashref()  ) {
        push @groups, $group;
    }
    return ''
        if  ! @groups;
    return join '',
        "&lt;tr&gt;&lt;td&gt;Member of:&lt;/td&gt;&lt;td&gt;\n",
        join( ', ', map { linkNode($_) } @groups ),
    "\n";
%]
          &lt;/td&gt;
        &lt;/tr&gt;
[%
    return ''
        if  $HTMLVARS{guest_user} == getId($USER);

    my $msg_link= '';
    if(  $HTMLVARS{guest_user} != getId($NODE)  ) {
        $msg_link= linkNode(
            762476,
            "Send private /msg",
            {   sendto =&gt; $NODE-&gt;{title},
                replytotext =&gt; "",
            },
            {   trusted =&gt; 'yes' },
        ) . ", ";
    }

    return join "\n",
        '&lt;tr class="msg_user"&gt;&lt;td&gt;For this user:&lt;/td&gt;&lt;td&gt;',
        $msg_link,
        genLink(
            isGod($USER) ? 'Their votes' : 'Your votes',
            { node_id =&gt; getId($NODE), displaytype =&gt; 'voteview' },
        ),
        ! isGod($USER) ? '' : genLink( 'Lock', {
            node =&gt; 'lock user',
            type =&gt; 'superdoc',
            user_id =&gt; $NODE-&gt;{node_id},
        } ),
        '&lt;/td&gt;&lt;/tr&gt;',
    '';
%]
      &lt;/table&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;
[%
    if(  '[NodeReaper]' eq $NODE-&gt;{nick}  ) {
        return join $/,
            q{&lt;p&gt;Account locked.&lt;/p&gt;},
            q{&lt;p&gt;Please &lt;a href="?node_id=491035"&gt;},
            q{contact the site administrators&lt;/a&gt; if you feel},
            q{your account should be made available again.&lt;/p&gt;},
        '';
    }

    my @type;
    my $scrub=  isGod($USER)
            ||  $q-&gt;param('scrub')
            ||  ! $VARS-&gt;{unfilterhtml};

    if ($scrub) {
        @type= (
            'doctext',
            {
                # img =&gt; 'alt,border,height,src,width',
                select =&gt; 'name',
                option =&gt; 'selected,value',
                form =&gt; 'method',
                input =&gt;'name,type,value,/'
            },
        );
    } else {
        @type= qw&lt; doctext override &gt;;
    }

    my $nofollow =
            ! Everything::isApproved( $NODE, 'CanHaveImage' )
        ||  $q-&gt;param('nofollow');

    my $str= htmlcode( 'parselinks','', @type );

    # prevent images even if viewer doesn't filter HTML
    $str =~ s/&lt;\s*(?:img|image)[^&gt;]*&gt;//gis
        if  ! Everything::isApproved( $NODE, 'CanHaveImage' );

    $str =~ s{&lt;(\s*script[^&gt;]*&gt;.*?&lt;\s*/\s*script[^&gt;]*)&gt;}{
        "&lt;!-- PM Stripped: ($1) --&gt;";
    }gise
        if  $VARS-&gt;{jsoff}  &amp;&amp;  ! $scrub;

    $str =~ s/(s)(crip)(t)/$1&amp;#x200E;$2&amp;#x200E;$3/gi
        if  $scrub;

    $str =~ s/(&lt;\s*a)\b/$1 rel="nofollow"/gi
        if  $nofollow;

    return $str;
%]
&lt;/p&gt;</field>
<field name="displaytype">
display</field>
</data>
</node>
