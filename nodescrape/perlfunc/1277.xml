<?xml version="1.0" encoding="windows-1252"?>
<node id="1277" title="perlman:User::pwent" created="1999-12-22 19:53:46" updated="2005-08-13 03:15:33">
<type id="119">
perlfunc</type>
<author id="979">
vroom</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;
User::pwent - by-name interface to Perl's built-in getpw*() functions

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
&lt;PRE&gt; use User::pwent;
 $pw = getpwnam('daemon') or die &amp;quot;No daemon user&amp;quot;;
 if ( $pw-&amp;gt;uid == 1 &amp;amp;&amp;amp; $pw-&amp;gt;dir =~ m#^/(bin|tmp)?$# ) {
     print &amp;quot;gid 1 on root dir&amp;quot;;
 } 
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt; use User::pwent qw(:FIELDS);
 get</field>
<field name="description">

&lt;P&gt;
This module's default exports override the core 
&lt;CODE&gt;getpwent(),&lt;/CODE&gt; 
&lt;CODE&gt;getpwuid(),&lt;/CODE&gt; and 
&lt;CODE&gt;getpwnam()&lt;/CODE&gt; functions, replacing them with versions that return ``User::pwent'' objects. This object has methods that return the similarly named structure field name from the C's passwd structure from
 &lt;EM&gt;pwd.h&lt;/EM&gt;; namely name, passwd, uid, gid, quota, comment, gecos, dir, and shell.

&lt;P&gt;
You may also import all the structure fields directly into your namespace as regular variables using the 
&lt;FONT SIZE=-1&gt;:FIELDS&lt;/FONT&gt; import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding
 &lt;CODE&gt;pw_&lt;/CODE&gt; in front their method names. Thus, &lt;CODE&gt;$passwd_obj-&amp;gt;shell()&lt;/CODE&gt; corresponds to &lt;CODE&gt;$pw_shell&lt;/CODE&gt; if you import the fields.

&lt;P&gt;
The 
&lt;CODE&gt;getpw()&lt;/CODE&gt; funtion is a simple front-end that forwards a numeric argument to 
&lt;CODE&gt;getpwuid()&lt;/CODE&gt; and the rest to 
&lt;CODE&gt;getpwnam().&lt;/CODE&gt;

&lt;P&gt;
To access this functionality without the core overrides, pass the [perlfunc:use|use] an empty import list, and then access function functions with their full
qualified names. On the other hand, the built-ins are still available via
the &lt;CODE&gt;CORE::&lt;/CODE&gt; pseudo-package.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="NOTE"&gt;NOTE&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
While this class is currently implemented using the Class::Struct module to
build a struct-like class, you shouldn't rely upon this.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="AUTHOR"&gt;AUTHOR&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Tom Christiansen
&lt;HR&gt;
</field>
</data>
</node>
