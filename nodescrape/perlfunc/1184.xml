<?xml version="1.0" encoding="windows-1252"?>
<node id="1184" title="perlman:ExtUtils::xsubpp" created="1999-12-22 19:51:42" updated="2005-06-13 12:13:40">
<type id="119">
perlfunc</type>
<author id="113">
root</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;
xsubpp - compiler to convert Perl 
&lt;FONT SIZE=-1&gt;XS&lt;/FONT&gt; code into 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; code

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
&lt;STRONG&gt;xsubpp&lt;/STRONG&gt; &amp;#091;&lt;STRONG&gt;-v&lt;/STRONG&gt;&amp;#093; &amp;#091;&lt;STRONG&gt;-C++&lt;/STRONG&gt;&amp;#093; &amp;#091;&lt;STRONG&gt;-except&lt;/STRONG&gt;&amp;#093; &amp;#091;&lt;STRONG&gt;-s pattern&lt;/STRONG&gt;&amp;#093; &amp;#091;&lt;STRONG&gt;-prototypes&lt;/STRONG&gt;&amp;#093; &amp;#091;&lt;STRONG&gt;-noversioncheck&lt;/STRONG&gt;&amp;#09</field>
<field name="description">

&lt;P&gt;
&lt;EM&gt;xsubpp&lt;/EM&gt; will compile 
&lt;FONT SIZE=-1&gt;XS&lt;/FONT&gt; code into 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; code by embedding the constructs necessary to let 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; functions manipulate Perl values and creates the glue necessary to let Perl access those functions. The compiler uses typemaps to determine how to map 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function parameters and variables to Perl values.

&lt;P&gt;
The compiler will search for typemap files called &lt;EM&gt;typemap&lt;/EM&gt;. It will use the following search path to find default typemaps, with the
rightmost typemap taking precedence.

&lt;P&gt;
&lt;PRE&gt;        ../../../typemap:../../typemap:../typemap:typemap
&lt;/PRE&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="OPTIONS"&gt;OPTIONS&lt;/A&gt;&lt;/H1&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item__C_"&gt;-C++&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Adds ``extern 
&lt;FONT SIZE=-1&gt;``C''''&lt;/FONT&gt; to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; code.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item__except"&gt;-except&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Adds exception handling stubs to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; code.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item__typemap"&gt;-typemap typemap&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Indicates that a user-supplied typemap should take precedence over the
default typemaps. This option may be used multiple times, with the last
typemap having the highest precedence.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item__v"&gt;-v&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Prints the &lt;EM&gt;xsubpp&lt;/EM&gt; version number to standard output, then exits.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item__prototypes"&gt;-prototypes&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
By default &lt;EM&gt;xsubpp&lt;/EM&gt; will not automatically generate prototype code for all xsubs. This flag
will enable prototypes.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item__noversioncheck"&gt;-noversioncheck&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Disables the run time test that determines if the object file (derived from
the &lt;CODE&gt;.xs&lt;/CODE&gt; file) and the &lt;CODE&gt;.pm&lt;/CODE&gt; files have the same version number.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item__nolinenumbers"&gt;-nolinenumbers&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Prevents the inclusion of `#line' directives in the output.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item__object_capi"&gt;-object_capi&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Compile code as 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; in a 
&lt;FONT SIZE=-1&gt;PERL_OBJECT&lt;/FONT&gt; environment.

&lt;P&gt;
back

&lt;H1&gt;&lt;A NAME="ENVIRONMENT"&gt;ENVIRONMENT&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
No environment variables are used.

&lt;H1&gt;&lt;A NAME="AUTHOR"&gt;AUTHOR&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Larry Wall

&lt;H1&gt;&lt;A NAME="MODIFICATION_HISTORY"&gt;MODIFICATION HISTORY&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
See the file &lt;EM&gt;changes.pod&lt;/EM&gt;.

&lt;H1&gt;&lt;A NAME="SEE_ALSO"&gt;SEE ALSO&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;

&lt;CODE&gt;perl(1),&lt;/CODE&gt; 
&lt;CODE&gt;perlxs(1),&lt;/CODE&gt; 
&lt;CODE&gt;perlxstut(1)&lt;/CODE&gt;

&lt;/DL&gt;
&lt;HR&gt;
</field>
</data>
</node>
