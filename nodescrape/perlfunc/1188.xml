<?xml version="1.0" encoding="windows-1252"?>
<node id="1188" title="perlman:ExtUtils::Installed" created="1999-12-22 19:51:43" updated="2005-08-10 16:43:46">
<type id="119">
perlfunc</type>
<author id="113">
root</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;
ExtUtils::Installed - Inventory management of installed modules

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
&lt;PRE&gt;   use ExtUtils::Installed;
   my ($inst) = ExtUtils::Installed-&amp;gt;new();
   my (@modules) = $inst-&amp;gt;modules();
   my (@missing) = $inst-&amp;gt;validate(&amp;quot;DBI&amp;quot;);
   my $all_files = $inst-&amp;gt;files(&amp;quot;DBI&amp;quot;);
   my $files_below_us</field>
<field name="description">

&lt;P&gt;
ExtUtils::Installed provides a standard way to find out what core and
module files have been installed. It uses the information stored in
.packlist files created during installation to provide this information. In
addition it provides facilities to classify the installed files and to
extract directory information from the .packlist files.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="USAGE"&gt;USAGE&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
The 
&lt;CODE&gt;new()&lt;/CODE&gt; function searches for all
the installed .packlists on the system, and stores their contents. The
.packlists can be queried with the functions described below.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="FUNCTIONS"&gt;FUNCTIONS&lt;/A&gt;&lt;/H1&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_new"&gt;new()&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This takes no parameters, and searches for all the installed .packlists on
the system. The packlists are read using the ExtUtils::packlist module.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_modules"&gt;modules()&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This returns a list of the names of all the installed modules. The perl
'core' is given the special name 'Perl'.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_files"&gt;files()&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This takes one mandatory parameter, the name of a module. It returns a list
of all the filenames from the package. To obtain a list of core perl files,
use the module name 'Perl'. Additional parameters are allowed. The first is
one of the strings ``prog'', ``man'' or ``all'', to select either just
program files, just manual files or all files. The remaining parameters are
a list of directories. The filenames returned will be restricted to those
under the specified directories.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_directories"&gt;directories()&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This takes one mandatory parameter, the name of a module. It returns a list
of all the directories from the package. Additional parameters are allowed.
The first is one of the strings ``prog'', ``man'' or ``all'', to select
either just program directories, just manual directories or all
directories. The remaining parameters are a list of directories. The
directories returned will be restricted to those under the specified
directories. This method returns only the leaf directories that contain
files from the specified module.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_directory_tree"&gt;directory_tree()&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical in operation to 
&lt;CODE&gt;directory(),&lt;/CODE&gt; except that
it includes all the intermediate directories back up to the specified
directories.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_validate"&gt;validate()&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This takes one mandatory parameter, the name of a module. It checks that
all the files listed in the modules .packlist actually exist, and returns a
list of any missing files. If an optional second argument which evaluates
to true is given any missing files will be removed from the .packlist

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_packlist"&gt;packlist()&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This returns the ExtUtils::Packlist object for the specified module.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_version"&gt;version()&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This returns the version number for the specified module.

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="EXAMPLE"&gt;EXAMPLE&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
See the example in [perlman:ExtUtils::Packlist|Packlist].

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="AUTHOR"&gt;AUTHOR&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Alan Burlison &amp;lt;&lt;A
HREF="mailto:Alan.Burlison@uk.sun.com"&gt;Alan.Burlison@uk.sun.com&lt;/A&gt;&amp;gt;

&lt;HR&gt;
</field>
</data>
</node>
