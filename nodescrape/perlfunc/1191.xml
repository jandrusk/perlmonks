<?xml version="1.0" encoding="windows-1252"?>
<node id="1191" title="perlman:ExtUtils::MM_VMS" created="1999-12-22 19:51:43" updated="2005-08-12 23:45:10">
<type id="119">
perlfunc</type>
<author id="113">
root</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;
ExtUtils::MM_VMS - methods to override 
&lt;FONT SIZE=-1&gt;UN*X&lt;/FONT&gt; behaviour in ExtUtils::MakeMaker

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
&lt;PRE&gt; use ExtUtils::MM_VMS; # Done internally by ExtUtils::MakeMaker if needed
&lt;/PRE&gt;
&lt;P&gt;
&lt;HR&gt;
</field>
<field name="description">

&lt;P&gt;
See ExtUtils::MM_Unix for a documentation of the methods provided there.
This package overrides the implementation of these methods, not the
semantics.

&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="Methods_always_loaded"&gt;Methods always loaded&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_eliminate_macros"&gt;eliminate_macros&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Expands MM&amp;#091;KS&amp;#093;/Make macros in a text string, using the contents of
identically named elements of &lt;CODE&gt;%$self&lt;/CODE&gt;, and returns the result as a file specification in Unix syntax.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fixpath"&gt;fixpath&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Catchall routine to clean up problem MM&amp;#091;SK&amp;#093;/Make macros. Expands macros in any directory specification, in order to avoid juxtaposing two VMS-syntax directories when 
&lt;FONT SIZE=-1&gt;MM&amp;#091;SK&amp;#093;&lt;/FONT&gt; is run. Also expands expressions which are all macro, so that we can tell how long the expansion is, and avoid overrunning DCL's command buffer when 
&lt;FONT SIZE=-1&gt;MM&amp;#091;KS&amp;#093;&lt;/FONT&gt; is running.

&lt;P&gt;
If optional second argument has a 
&lt;FONT SIZE=-1&gt;TRUE&lt;/FONT&gt; value, then the return string is a VMS-syntax directory specification, if it is 
&lt;FONT SIZE=-1&gt;FALSE,&lt;/FONT&gt; the return string is a VMS-syntax file specification, and if it is not specified, 
&lt;CODE&gt;fixpath()&lt;/CODE&gt; checks to see whether it matches the name of a directory in the current default directory, and returns a directory or file specification accordingly.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_catdir"&gt;catdir&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Concatenates a list of file specifications, and returns the result as a
VMS-syntax directory specification.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_catfile"&gt;catfile&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Concatenates a list of file specifications, and returns the result as a
VMS-syntax directory specification.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_wraplist"&gt;wraplist&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Converts a list into a string wrapped at approximately 80 columns.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_curdir"&gt;curdir (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns a string representing of the current directory.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_rootdir"&gt;rootdir (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns a string representing of the root directory.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_updir"&gt;updir (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns a string representing of the parent directory.

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="SelfLoaded_methods"&gt;SelfLoaded methods&lt;/A&gt;&lt;/H2&gt;
&lt;P&gt;
Those methods which override default MM_Unix methods are marked ``(override)'', while methods unique to 
&lt;FONT SIZE=-1&gt;MM_VMS&lt;/FONT&gt; are marked ``(specific)''. For overridden methods, documentation is limited to an explanation of why this method overrides the MM_Unix method; see the ExtUtils::MM_Unix documentation for more details.

&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_guess_name"&gt;guess_name (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Try to determine name of extension being built. We begin with the name of the current directory. Since 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; filenames are case-insensitive, however, we look for a
 &lt;EM&gt;.pm&lt;/EM&gt; file whose name matches that of the current directory (presumably the
'main' &lt;EM&gt;.pm&lt;/EM&gt; file for this extension), and try to find a [perlfunc:package|package] statement from which to obtain the Mixed::Case package name.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_find_perl"&gt;find_perl (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; file specification syntax and 
&lt;FONT SIZE=-1&gt;CLI&lt;/FONT&gt; commands to find and invoke Perl images.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_path"&gt;path (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Translate logical name 
&lt;FONT SIZE=-1&gt;DCL$PATH&lt;/FONT&gt; as a searchlist, rather than trying to [perlfunc:split|split] string value of &lt;CODE&gt;$ENV{'PATH'}&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_maybe_command"&gt;maybe_command (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Follows 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; naming conventions for executable files. If the
name passed in doesn't exactly match an executable file, appends &lt;EM&gt;.Exe&lt;/EM&gt; (or equivalent) to check for executable image, and &lt;EM&gt;.Com&lt;/EM&gt;
to check for 
&lt;FONT SIZE=-1&gt;DCL&lt;/FONT&gt; procedure. If this fails, checks directories in 
&lt;FONT SIZE=-1&gt;DCL$PATH&lt;/FONT&gt; and finally
 &lt;EM&gt;Sys$System:&lt;/EM&gt; for an executable file having the name specified, with or without the &lt;EM&gt;.Exe&lt;/EM&gt;-equivalent suffix.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_maybe_command_in_dirs"&gt;maybe_command_in_dirs (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Uses 
&lt;FONT SIZE=-1&gt;DCL&lt;/FONT&gt; argument quoting on test command line.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_perl_script"&gt;perl_script (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
If name passed in doesn't specify a readable file, appends &lt;EM&gt;.com&lt;/EM&gt; or
&lt;EM&gt;.pl&lt;/EM&gt; and tries again, since it's customary to have file types on all files under 
&lt;FONT SIZE=-1&gt;VMS.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_file_name_is_absolute"&gt;file_name_is_absolute (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Checks for 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; directory spec as well as Unix separators.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_replace_manpage_separator"&gt;replace_manpage_separator&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use as separator a character which is legal in a VMS-syntax file name.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_init_others"&gt;init_others (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Provide VMS-specific forms of various utility commands, then hand off to
the default MM_Unix method.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_constants"&gt;constants (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Fixes up numerous file and directory macros to insure 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; syntax regardless of input syntax. Also adds a few
VMS-specific macros and makes lists of files comma-separated.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_cflags"&gt;cflags (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Bypass shell script and produce qualifiers for 
&lt;FONT SIZE=-1&gt;CC&lt;/FONT&gt; directly (but warn user if a shell script for this extension exists). Fold multiple /Defines into one, since some 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; compilers pay attention to only one instance of this qualifier on the command line.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_const_cccmd"&gt;const_cccmd (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Adds directives to point 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; preprocessor to the right place when handling #include &amp;lt;sys/foo.h&amp;gt; directives. Also constructs 
&lt;FONT SIZE=-1&gt;CC&lt;/FONT&gt; command line a bit differently than MM_Unix method.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_pm_to_blib"&gt;pm_to_blib (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;DCL&lt;/FONT&gt; &lt;EM&gt;still&lt;/EM&gt; accepts a maximum of 255 characters on a command line, so we write the
(potentially) long list of file names to a temp file, then persuade Perl to
read it instead of the command line to find args.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tool_autosplit"&gt;tool_autosplit (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use VMS-style quoting on command line.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tool_sxubpp"&gt;tool_sxubpp (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use VMS-style quoting on xsubpp command line.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_xsubpp_version"&gt;xsubpp_version (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Test xsubpp exit status according to 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; rules ($sts &amp;amp; 1 ==&amp;gt; good) rather than Unix
rules ($sts == 0 ==&amp;gt; good).

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tools_other"&gt;tools_other (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Adds a few 
&lt;FONT SIZE=-1&gt;MM&amp;#091;SK&amp;#093;&lt;/FONT&gt; macros, and shortens some the installatin commands, in order to stay under DCL's 255-character limit. Also changes 
&lt;FONT SIZE=-1&gt;EQUALIZE_TIMESTAMP&lt;/FONT&gt; to set revision date of target file to one second later than source file, since 
&lt;FONT SIZE=-1&gt;MMK&lt;/FONT&gt; interprets precisely equal revision dates for a source and target file as a sign that the target needs to be updated.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dist"&gt;dist (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Provide VMSish defaults for some values, then hand off to default MM_Unix
method.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_c_o"&gt;c_o (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; syntax on command line. In particular, 
&lt;FONT SIZE=-1&gt;$(DEFINE)&lt;/FONT&gt; and 
&lt;FONT SIZE=-1&gt;$(PERL_INC)&lt;/FONT&gt; have been pulled into 
&lt;FONT SIZE=-1&gt;$(CCCMD).&lt;/FONT&gt; Also use 
&lt;FONT SIZE=-1&gt;MM&amp;#091;SK&amp;#093;&lt;/FONT&gt; macros.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_xs_c"&gt;xs_c (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use 
&lt;FONT SIZE=-1&gt;MM&amp;#091;SK&amp;#093;&lt;/FONT&gt; macros.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_xs_o"&gt;xs_o (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use 
&lt;FONT SIZE=-1&gt;MM&amp;#091;SK&amp;#093;&lt;/FONT&gt; macros, and 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; command line for 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; compiler.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_top_targets"&gt;top_targets (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; quoting on command line for Version_check.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dlsyms"&gt;dlsyms (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Create 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; linker options files specifying universal symbols
for this extension's shareable image, and listing other shareable images or
libraries to which it should be linked.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dynamic_lib"&gt;dynamic_lib (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; Link command.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dynamic_bs"&gt;dynamic_bs (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use VMS-style quoting on Mkbootstrap command line.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_static_lib"&gt;static_lib (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; commands to manipulate object library.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_manifypods"&gt;manifypods (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use VMS-style quoting on command line, and 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; logical name to specify fallback location at build
time if we can't find pod2man.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_processPL"&gt;processPL (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use VMS-style quoting on command line.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_installbin"&gt;installbin (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Stay under DCL's 255 character command line limit once again by splitting
potentially long list of files across multiple lines in &lt;CODE&gt;realclean&lt;/CODE&gt; target.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_subdir_x"&gt;subdir_x (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; commands to change default directory.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_clean"&gt;clean (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Split potentially long list of files across multiple commands (in order to stay under the magic command line limit). Also use 
&lt;FONT SIZE=-1&gt;MM&amp;#091;SK&amp;#093;&lt;/FONT&gt; commands for handling subdirectories.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_realclean"&gt;realclean (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Guess what we're working around? Also, use 
&lt;FONT SIZE=-1&gt;MM&amp;#091;SK&amp;#093;&lt;/FONT&gt; for subdirectories.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dist_basics"&gt;dist_basics (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use VMS-style quoting on command line.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dist_core"&gt;dist_core (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Syntax for invoking &lt;EM&gt;VMS_Share&lt;/EM&gt; differs from that for Unix &lt;EM&gt;shar&lt;/EM&gt;, so &lt;CODE&gt;shdist&lt;/CODE&gt; target actions are VMS-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dist_dir"&gt;dist_dir (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use VMS-style quoting on command line.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dist_test"&gt;dist_test (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; commands to change default directory, and use
VMS-style quoting on command line.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_install"&gt;install (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Work around DCL's 255 character limit several times,and use VMS-style
command line quoting in a few cases.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_perldepend"&gt;perldepend (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use VMS-style syntax for files; it's cheaper to just do it directly here
than to have the MM_Unix method call &lt;CODE&gt;catfile&lt;/CODE&gt; repeatedly. Also, if we have to rebuild Config.pm, use 
&lt;FONT SIZE=-1&gt;MM&amp;#091;SK&amp;#093;&lt;/FONT&gt; to do it.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_makefile"&gt;makefile (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; commands and quoting.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_test"&gt;test (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; commands for handling subdirectories.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_test_via_harness"&gt;test_via_harness (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use VMS-style quoting on command line.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_test_via_script"&gt;test_via_script (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use VMS-style quoting on command line.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_makeaperl"&gt;makeaperl (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Undertake to build a new set of Perl images using 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; commands. Since 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; does dynamic loading, it's not necessary to statically link each extension into the Perl image, so this isn't the normal build path. Consequently, it hasn't really been tested, and may well be incomplete.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_nicetext"&gt;nicetext (override)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Insure that colons marking targets are preceded by space, in order to
distinguish the target delimiter from a colon appearing as part of a
filespec.

&lt;/DL&gt;
&lt;HR&gt;
</field>
</data>
</node>
