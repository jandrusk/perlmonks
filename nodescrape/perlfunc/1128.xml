<?xml version="1.0" encoding="windows-1252"?>
<node id="1128" title="perlman:lib:Symbol" created="1999-12-22 19:49:29" updated="2005-08-10 16:22:36">
<type id="119">
perlfunc</type>
<author id="113">
root</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;
Symbol - manipulate Perl symbols and their names

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
&lt;PRE&gt;    use Symbol;
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    $sym = gensym;
    open($sym, &amp;quot;filename&amp;quot;);
    $_ = &amp;lt;$sym&amp;gt;;
    # etc.
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    ungensym $sym;      # no effect
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    print qualify(&amp;quot;x&amp;quot;), &amp;quot;\n&amp;quot;;</field>
<field name="description">

&lt;P&gt;
&lt;CODE&gt;Symbol::gensym&lt;/CODE&gt; creates an anonymous glob and returns a reference to it. Such a glob
reference can be used as a file or directory handle.

&lt;P&gt;
For backward compatibility with older implementations that didn't support
anonymous globs, &lt;CODE&gt;Symbol::ungensym&lt;/CODE&gt; is also provided. But it doesn't do anything.

&lt;P&gt;
&lt;CODE&gt;Symbol::qualify&lt;/CODE&gt; turns unqualified symbol names into qualified variable names (e.g.
``myvar'' -&amp;gt; ``MyPackage::myvar''). If it is given a second parameter, &lt;CODE&gt;qualify&lt;/CODE&gt; uses it as the default package; otherwise, it uses the package of its caller. Regardless, global variable names (e.g. 
&lt;FONT SIZE=-1&gt;``STDOUT'',&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;``ENV'',&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;``SIG'')&lt;/FONT&gt; are always qualfied with ``main::''.

&lt;P&gt;
Qualification applies only to symbol names (strings). References are left
unchanged under the assumption that they are glob references, which are
qualified by their nature.

&lt;P&gt;
&lt;CODE&gt;Symbol::qualify_to_ref&lt;/CODE&gt; is just like &lt;CODE&gt;Symbol::qualify&lt;/CODE&gt; except that it returns a glob ref rather than a symbol name, so you can use
the result even if &lt;CODE&gt;use strict 'refs'&lt;/CODE&gt; is in effect.

&lt;P&gt;
&lt;CODE&gt;Symbol::delete_package&lt;/CODE&gt; wipes out a whole package namespace. Note this routine is not exported by
default--you may want to import it explicitly.

&lt;HR&gt;
</field>
</data>
</node>
