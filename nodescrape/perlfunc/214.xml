<?xml version="1.0" encoding="windows-1252"?>
<node id="214" title="perlfunc:fcntl" created="1999-08-24 18:42:11" updated="2005-08-15 06:58:50">
<type id="119">
perlfunc</type>
<author id="114">
gods</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;
fcntl - file control system all

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
fcntl 
&lt;FONT SIZE=-1&gt;FILEHANDLE,FUNCTION,SCALAR&lt;/FONT&gt;

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="description">

&lt;P&gt;
Implements the 
&lt;CODE&gt;fcntl(2)&lt;/CODE&gt; function. You'll
probably have to say

&lt;P&gt;
&lt;PRE&gt;    use Fcntl;
&lt;/PRE&gt;
&lt;P&gt;
first to get the correct constant definitions. Argument processing and
value return works just like [perlfunc:ioctl|ioctl()] below. For example:

&lt;P&gt;
&lt;PRE&gt;    use Fcntl;
    fcntl($filehandle, F_GETFL, $packed_return_buffer)
        or die &amp;quot;can't fcntl F_GETFL: $!&amp;quot;;
&lt;/PRE&gt;
&lt;P&gt;
You don't have to check for [perlfunc:defined|defined()] on the return from 
&lt;CODE&gt;fnctl()&lt;/CODE&gt;. Like [perlfunc:ioctl|ioctl()], it maps a &lt;CODE&gt;0&lt;/CODE&gt; return from the system call into ``&lt;CODE&gt;0&lt;/CODE&gt; but true'' in Perl. This string is true in boolean context and &lt;CODE&gt;0&lt;/CODE&gt; in numeric context. It is also exempt from the normal &lt;STRONG&gt;-w&lt;/STRONG&gt; warnings on improper numeric conversions.

&lt;P&gt;
Note that [perlfunc:fcntl|fcntl()] will produce a fatal error if used on a machine that doesn't implement 
&lt;CODE&gt;fcntl(2).&lt;/CODE&gt;

&lt;HR&gt;
</field>
</data>
</node>
