<?xml version="1.0" encoding="windows-1252"?>
<node id="361" title="perlfunc:chomp" created="1999-08-24 18:43:40" updated="2005-08-15 12:53:06">
<type id="119">
perlfunc</type>
<author id="114">
gods</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;
chomp - remove a trailing record separator from a string

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
chomp 
&lt;FONT SIZE=-1&gt;VARIABLE&lt;/FONT&gt;

&lt;P&gt;
chomp 
&lt;FONT SIZE=-1&gt;LIST&lt;/FONT&gt;

&lt;P&gt;
chomp

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="description">

&lt;P&gt;
This is a slightly safer version of [perlfunc:chop|chop]. It removes any line ending that corresponds to the current value of &lt;CODE&gt;$/&lt;/CODE&gt; (also known as &lt;CODE&gt;$INPUT_RECORD_SEPARATOR&lt;/CODE&gt; in the &lt;CODE&gt;English&lt;/CODE&gt; module). It returns the total number of characters removed from all its
arguments. It's often used to remove the newline from the end of an input
record when you're worried that the final record may be missing its
newline. When in paragraph mode (&lt;CODE&gt;$/ = &amp;quot;&amp;quot;&lt;/CODE&gt;), it removes all trailing newlines from the string. If 
&lt;FONT SIZE=-1&gt;VARIABLE&lt;/FONT&gt; is omitted, it chomps &lt;CODE&gt;$_&lt;/CODE&gt;. Example:

&lt;P&gt;
&lt;PRE&gt;    while (&amp;lt;&amp;gt;) {
        chomp;  # avoid \n on last field
        @array = split(/:/);
        # ...
    }
&lt;/PRE&gt;
&lt;P&gt;
You can actually chomp anything that's an lvalue, including an assignment:

&lt;P&gt;
&lt;PRE&gt;    chomp($cwd = `pwd`);
    chomp($answer = &amp;lt;STDIN&amp;gt;);
&lt;/PRE&gt;
&lt;P&gt;
If you chomp a list, each element is chomped, and the total number of
characters removed is returned.

&lt;HR&gt;
</field>
</data>
</node>
