<?xml version="1.0" encoding="windows-1252"?>
<node id="336" title="perlfunc:warn" created="1999-08-24 18:43:25" updated="2005-08-15 05:29:31">
<type id="119">
perlfunc</type>
<author id="114">
gods</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;
warn - print debugging info

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
warn 
&lt;FONT SIZE=-1&gt;LIST&lt;/FONT&gt;

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="description">

&lt;P&gt;
Produces a message on 
&lt;FONT SIZE=-1&gt;STDERR&lt;/FONT&gt; just like [perlfunc:die|die()], but doesn't exit or throw an exception.

&lt;P&gt;
If 
&lt;FONT SIZE=-1&gt;LIST&lt;/FONT&gt; is empty and &lt;CODE&gt;$@&lt;/CODE&gt; already contains a value (typically from a previous eval) that value is
used after appending &lt;CODE&gt;&amp;quot;\t...caught&amp;quot;&lt;/CODE&gt;
to &lt;CODE&gt;$@&lt;/CODE&gt;. This is useful for staying almost, but not entirely similar to
[perlfunc:die|die()].

&lt;P&gt;
If &lt;CODE&gt;$@&lt;/CODE&gt; is empty then the string &lt;CODE&gt;&amp;quot;Warning: Something's wrong&amp;quot;&lt;/CODE&gt; is used.

&lt;P&gt;
No message is printed if there is a &lt;CODE&gt;$SIG{__WARN__}&lt;/CODE&gt; handler installed. It is the handler's responsibility to deal with the
message as it sees fit (like, for instance, converting it into a [perlfunc:die|die()]). Most handlers must therefore make arrangements to actually display the
warnings that they are not prepared to deal with, by calling [%linkNodeTitle "perlman:perlguts|warn()", $NODE, "warn()",{anchor=&gt;"item_warn"};%]
again in the handler. Note that this is quite safe and will not produce an
endless loop, since &lt;CODE&gt;__WARN__&lt;/CODE&gt; hooks are not called from inside one.

&lt;P&gt;
You will find this behavior is slightly different from that of
&lt;CODE&gt;$SIG{__DIE__}&lt;/CODE&gt; handlers (which don't suppress the error text, but can instead call [perlfunc:die|die()] again to change it).

&lt;P&gt;
Using a &lt;CODE&gt;__WARN__&lt;/CODE&gt; handler provides a powerful way to silence all warnings (even the so-called
mandatory ones). An example:

&lt;P&gt;
&lt;PRE&gt;    # wipe out *all* compile-time warnings
    BEGIN { $SIG{'__WARN__'} = sub { warn $_&amp;#091;0&amp;#093; if $DOWARN } }
    my $foo = 10;
    my $foo = 20;          # no warning about duplicate my $foo,
                           # but hey, you asked for it!
    # no compile-time or run-time warnings before here
    $DOWARN = 1;
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    # run-time warnings enabled after here
    warn &amp;quot;\$foo is alive and $foo!&amp;quot;;     # does show up
&lt;/PRE&gt;
&lt;P&gt;
See [perlman:perlvar|the perlvar manpage] for details on setting &lt;CODE&gt;%SIG&lt;/CODE&gt; entries, and for more examples.

&lt;HR&gt;
</field>
</data>
</node>
