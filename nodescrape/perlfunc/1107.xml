<?xml version="1.0" encoding="windows-1252"?>
<node id="1107" title="perlman:lib:Env" created="1999-12-22 19:49:26" updated="2005-08-11 06:35:52">
<type id="119">
perlfunc</type>
<author id="113">
root</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;
Env - perl module that imports environment variables

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
&lt;PRE&gt;    use Env;
    use Env qw(PATH HOME TERM);
&lt;/PRE&gt;
&lt;P&gt;
&lt;HR&gt;
</field>
<field name="description">

&lt;P&gt;
Perl maintains environment variables in a pseudo-hash named 
&lt;FONT SIZE=-1&gt;%ENV.&lt;/FONT&gt; For when this access method is inconvenient, the
Perl module &lt;CODE&gt;Env&lt;/CODE&gt; allows environment variables to be treated as simple variables.

&lt;P&gt;
The Env::import() function ties environment variables with suitable names
to global Perl variables with the same names. By default it does so with
all existing environment variables (&lt;CODE&gt;keys %ENV&lt;/CODE&gt;). If the import function receives arguments, it takes them to be a list of
environment variables to tie; it's okay if they don't yet exist.

&lt;P&gt;
After an environment variable is tied, merely use it like a normal
variable. You may access its value 

&lt;P&gt;
&lt;PRE&gt;    @path = split(/:/, $PATH);
&lt;/PRE&gt;
&lt;P&gt;
or modify it

&lt;P&gt;
&lt;PRE&gt;    $PATH .= &amp;quot;:.&amp;quot;;
&lt;/PRE&gt;
&lt;P&gt;
however you'd like. To remove a tied environment variable from the
environment, assign it the undefined value

&lt;P&gt;
&lt;PRE&gt;    undef $PATH;
&lt;/PRE&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="AUTHOR"&gt;AUTHOR&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Chip Salzenberg &amp;lt;&lt;EM&gt;chip@fin.uucp&lt;/EM&gt;&amp;gt;

&lt;HR&gt;
</field>
</data>
</node>
