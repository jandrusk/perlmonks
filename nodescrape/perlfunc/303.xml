<?xml version="1.0" encoding="windows-1252"?>
<node id="303" title="perlfunc:chop" created="1999-08-24 18:43:05" updated="2005-08-15 12:53:17">
<type id="119">
perlfunc</type>
<author id="114">
gods</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;
chop - remove the last character from a string

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
chop 
&lt;FONT SIZE=-1&gt;VARIABLE&lt;/FONT&gt;

&lt;P&gt;
chop 
&lt;FONT SIZE=-1&gt;LIST&lt;/FONT&gt;

&lt;P&gt;
chop

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="description">

&lt;P&gt;
Chops off the last character of a string and returns the character chopped.
It's used primarily to remove the newline from the end of an input record,
but is much more efficient than &lt;CODE&gt;s/\n//&lt;/CODE&gt; because it neither scans nor copies the string. If 
&lt;FONT SIZE=-1&gt;VARIABLE&lt;/FONT&gt; is omitted, chops &lt;CODE&gt;$_&lt;/CODE&gt;. Example:

&lt;P&gt;
&lt;PRE&gt;    while (&amp;lt;&amp;gt;) {
        chop;   # avoid \n on last field
        @array = split(/:/);
        #...
    }
&lt;/PRE&gt;
&lt;P&gt;
You can actually chop anything that's an lvalue, including an assignment:

&lt;P&gt;
&lt;PRE&gt;    chop($cwd = `pwd`);
    chop($answer = &amp;lt;STDIN&amp;gt;);
&lt;/PRE&gt;
&lt;P&gt;
If you chop a list, each element is chopped. Only the value of the last [perlfunc:chop|chop()] is returned.

&lt;P&gt;
Note that [perlfunc:chop|chop()] returns the last character. To return all but the last character, use [perlfunc:substr|substr($string, 0, -1)].

&lt;HR&gt;
</field>
</data>
</node>
