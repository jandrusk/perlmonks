<?xml version="1.0" encoding="windows-1252"?>
<node id="1121" title="perlman:lib:POSIX" created="1999-12-22 19:49:28" updated="2005-08-12 10:12:26">
<type id="119">
perlfunc</type>
<author id="113">
root</author>
<data>
<field name="doctext">
</field>
<field name="name">
&lt;P&gt;

&lt;FONT SIZE=-1&gt;POSIX&lt;/FONT&gt; - Perl interface to 
&lt;FONT SIZE=-1&gt;IEEE&lt;/FONT&gt; Std 1003.1

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">
&lt;P&gt;
&lt;PRE&gt;    use POSIX;
    use POSIX qw(setsid);
    use POSIX qw(:errno_h :fcntl_h);
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    printf &amp;quot;EINTR is %d\n&amp;quot;, EINTR;
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    $sess_id = POSIX::setsid();
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    $fd = POSIX::open($path, O_</field>
<field name="description">
&lt;P&gt;
The 
&lt;FONT SIZE=-1&gt;POSIX&lt;/FONT&gt; module permits you to access all (or nearly all) the standard 
&lt;FONT SIZE=-1&gt;POSIX&lt;/FONT&gt; 1003.1 identifiers. Many of these identifiers have been given Perl-ish interfaces. Things which are
 &lt;CODE&gt;#defines&lt;/CODE&gt; in 
&lt;FONT SIZE=-1&gt;C,&lt;/FONT&gt; like 
&lt;FONT SIZE=-1&gt;EINTR&lt;/FONT&gt; or 
&lt;FONT SIZE=-1&gt;O_NDELAY,&lt;/FONT&gt; are automatically exported into your namespace. All functions are only exported if you ask for them explicitly. Most likely people will prefer to use the fully-qualified function names.

&lt;P&gt;
This document gives a condensed list of the features available in the 
&lt;FONT SIZE=-1&gt;POSIX&lt;/FONT&gt; module. Consult your operating system's manpages
for general information on most features. Consult [perlman:perlfunc|perlfunc] for functions which are noted as being identical to Perl's builtin
functions.

&lt;P&gt;
The first section describes 
&lt;FONT SIZE=-1&gt;POSIX&lt;/FONT&gt; functions from the 1003.1 specification. The second section describes some classes for signal objects, 
&lt;FONT SIZE=-1&gt;TTY&lt;/FONT&gt; objects, and other miscellaneous objects. The remaining sections list various constants and macros in an organization which roughly follows 
&lt;FONT SIZE=-1&gt;IEEE&lt;/FONT&gt; Std 1003.1b-1993.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="NOTE"&gt;NOTE&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
The 
&lt;FONT SIZE=-1&gt;POSIX&lt;/FONT&gt; module is probably the most complex Perl module supplied with the standard distribution. It incorporates autoloading, namespace games, and dynamic loading of code that's in Perl, 
&lt;FONT SIZE=-1&gt;C,&lt;/FONT&gt; or both. It's a great source of wisdom.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="CAVEATS"&gt;CAVEATS&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;

&lt;FONT SIZE=-1&gt;A&lt;/FONT&gt; few functions are not implemented because they are 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; specific. If you attempt to call these, they will print a message telling you that they aren't implemented, and suggest using the Perl equivalent should one exist. For example, trying to access the 
&lt;CODE&gt;setjmp()&lt;/CODE&gt; call will elicit the message ``setjmp() is C-specific: use eval {} instead''.

&lt;P&gt;
Furthermore, some evil vendors will claim 1003.1 compliance, but in fact are not so: they will not pass the 
&lt;FONT SIZE=-1&gt;PCTS&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;(POSIX&lt;/FONT&gt; Compliance Test Suites). For example, one vendor may not define 
&lt;FONT SIZE=-1&gt;EDEADLK,&lt;/FONT&gt; or the semantics of the errno values set by 
&lt;CODE&gt;open(2)&lt;/CODE&gt; might not be quite right. Perl does not attempt to verify 
&lt;FONT SIZE=-1&gt;POSIX&lt;/FONT&gt; compliance. That means you can currently successfully say ``use 
&lt;FONT SIZE=-1&gt;POSIX'',&lt;/FONT&gt; and then later in your program you find that your vendor has been lax and there's no usable 
&lt;FONT SIZE=-1&gt;ICANON&lt;/FONT&gt; macro after all. This could be construed to be a bug.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="FUNCTIONS"&gt;FUNCTIONS&lt;/A&gt;&lt;/H1&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item__exit"&gt;_exit&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;_exit()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_abort"&gt;abort&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;abort()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_abs"&gt;abs&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:abs|abs] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_access"&gt;access&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Determines the accessibility of a file.

&lt;P&gt;
&lt;PRE&gt;        if( POSIX::access( &amp;quot;/&amp;quot;, &amp;amp;POSIX::R_OK ) ){
                print &amp;quot;have read permission\n&amp;quot;;
        }
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_acos"&gt;acos&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;acos()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_alarm"&gt;alarm&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:alarm|alarm] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_asctime"&gt;asctime&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;asctime()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_asin"&gt;asin&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;asin()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_assert"&gt;assert&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Unimplemented.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_atan"&gt;atan&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;atan()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_atan2"&gt;atan2&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:atan2|atan2] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_atexit"&gt;atexit&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;atexit()&lt;/CODE&gt; is C-specific: use 
&lt;FONT SIZE=-1&gt;END&lt;/FONT&gt; {} instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_atof"&gt;atof&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;atof()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_atoi"&gt;atoi&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;atoi()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_atol"&gt;atol&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;atol()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_bsearch"&gt;bsearch&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;bsearch()&lt;/CODE&gt; not supplied.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_calloc"&gt;calloc&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;calloc()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ceil"&gt;ceil&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;ceil()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_chdir"&gt;chdir&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:chdir|chdir] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_chmod"&gt;chmod&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:chmod|chmod] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_chown"&gt;chown&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:chown|chown] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_clearerr"&gt;clearerr&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::Handle::clearerr()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_clock"&gt;clock&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;clock()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_close"&gt;close&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Close the file. This uses file descriptors such as those obtained by
calling
&lt;CODE&gt;POSIX::open&lt;/CODE&gt;.

&lt;P&gt;
&lt;PRE&gt;        $fd = POSIX::open( &amp;quot;foo&amp;quot;, &amp;amp;POSIX::O_RDONLY );
        POSIX::close( $fd );
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_closedir"&gt;closedir&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:closedir|closedir] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_cos"&gt;cos&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:cos|cos] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_cosh"&gt;cosh&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;cosh()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_creat"&gt;creat&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Create a new file. This returns a file descriptor like the ones returned by
&lt;CODE&gt;POSIX::open&lt;/CODE&gt;. Use &lt;CODE&gt;POSIX::close&lt;/CODE&gt; to close the file.

&lt;P&gt;
&lt;PRE&gt;        $fd = POSIX::creat( &amp;quot;foo&amp;quot;, 0611 );
        POSIX::close( $fd );
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ctermid"&gt;ctermid&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Generates the path name for the controlling terminal.

&lt;P&gt;
&lt;PRE&gt;        $path = POSIX::ctermid();
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ctime"&gt;ctime&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;ctime()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_cuserid"&gt;cuserid&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Get the character login name of the user.

&lt;P&gt;
&lt;PRE&gt;        $name = POSIX::cuserid();
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_difftime"&gt;difftime&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;difftime()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_div"&gt;div&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;div()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dup"&gt;dup&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is similar to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;dup()&lt;/CODE&gt;.

&lt;P&gt;
This uses file descriptors such as those obtained by calling
&lt;CODE&gt;POSIX::open&lt;/CODE&gt;.

&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dup2"&gt;dup2&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is similar to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;dup2()&lt;/CODE&gt;.

&lt;P&gt;
This uses file descriptors such as those obtained by calling
&lt;CODE&gt;POSIX::open&lt;/CODE&gt;.

&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_errno"&gt;errno&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the value of errno.

&lt;P&gt;
&lt;PRE&gt;        $errno = POSIX::errno();
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_execl"&gt;execl&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;execl()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_execle"&gt;execle&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;execle()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_execlp"&gt;execlp&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;execlp()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_execv"&gt;execv&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;execv()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_execve"&gt;execve&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;execve()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_execvp"&gt;execvp&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;execvp()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_exit"&gt;exit&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:exit|exit] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_exp"&gt;exp&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:exp|exp] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fabs"&gt;fabs&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:abs|abs] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fclose"&gt;fclose&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::Handle::close()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fcntl"&gt;fcntl&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:fcntl|fcntl] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fdopen"&gt;fdopen&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::Handle::new_from_fd()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_feof"&gt;feof&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::Handle::eof()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ferror"&gt;ferror&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::Handle::error()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fflush"&gt;fflush&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::Handle::flush()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fgetc"&gt;fgetc&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::Handle::getc()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fgetpos"&gt;fgetpos&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::Seekable::getpos()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fgets"&gt;fgets&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::Handle::gets()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fileno"&gt;fileno&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::Handle::fileno()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_floor"&gt;floor&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;floor()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fmod"&gt;fmod&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;fmod()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fopen"&gt;fopen&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::File::open()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fork"&gt;fork&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:fork|fork] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fpathconf"&gt;fpathconf&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Retrieves the value of a configurable limit on a file or directory. This
uses file descriptors such as those obtained by calling &lt;CODE&gt;POSIX::open&lt;/CODE&gt;.

&lt;P&gt;
The following will determine the maximum length of the longest allowable
pathname on the filesystem which holds &lt;CODE&gt;/tmp/foo&lt;/CODE&gt;.

&lt;P&gt;
&lt;PRE&gt;        $fd = POSIX::open( &amp;quot;/tmp/foo&amp;quot;, &amp;amp;POSIX::O_RDONLY );
        $path_max = POSIX::fpathconf( $fd, &amp;amp;POSIX::_PC_PATH_MAX );
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fprintf"&gt;fprintf&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;fprintf()&lt;/CODE&gt; is C-specific--use
printf instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fputc"&gt;fputc&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;fputc()&lt;/CODE&gt; is C-specific--use
print instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fputs"&gt;fputs&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;fputs()&lt;/CODE&gt; is C-specific--use
print instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fread"&gt;fread&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;fread()&lt;/CODE&gt; is C-specific--use
read instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_free"&gt;free&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;free()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_freopen"&gt;freopen&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;freopen()&lt;/CODE&gt; is C-specific--use
open instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_frexp"&gt;frexp&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Return the mantissa and exponent of a floating-point number.

&lt;P&gt;
&lt;PRE&gt;        ($mantissa, $exponent) = POSIX::frexp( 3.14 );
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fscanf"&gt;fscanf&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;fscanf()&lt;/CODE&gt; is C-specific--use
&amp;lt;&amp;gt; and regular expressions instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fseek"&gt;fseek&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::Seekable::seek()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fsetpos"&gt;fsetpos&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::Seekable::setpos()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fstat"&gt;fstat&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Get file status. This uses file descriptors such as those obtained by
calling &lt;CODE&gt;POSIX::open&lt;/CODE&gt;. The data returned is identical to the data from Perl's builtin [perlfunc:stat|stat] function.

&lt;P&gt;
&lt;PRE&gt;        $fd = POSIX::open( &amp;quot;foo&amp;quot;, &amp;amp;POSIX::O_RDONLY );
        @stats = POSIX::fstat( $fd );
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ftell"&gt;ftell&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::Seekable::tell()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fwrite"&gt;fwrite&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;fwrite()&lt;/CODE&gt; is C-specific--use
print instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getc"&gt;getc&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:getc|getc] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getchar"&gt;getchar&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns one character from 
&lt;FONT SIZE=-1&gt;STDIN.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getcwd"&gt;getcwd&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the name of the current working directory.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getegid"&gt;getegid&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the effective group id.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getenv"&gt;getenv&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the value of the specified enironment variable.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_geteuid"&gt;geteuid&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the effective user id.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getgid"&gt;getgid&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the user's real group id.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getgrgid"&gt;getgrgid&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:getgrgid|getgrgid] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getgrnam"&gt;getgrnam&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:getgrnam|getgrnam] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getgroups"&gt;getgroups&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the ids of the user's supplementary groups.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getlogin"&gt;getlogin&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:getlogin|getlogin] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getpgrp"&gt;getpgrp&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:getpgrp|getpgrp] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getpid"&gt;getpid&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the process's id.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getppid"&gt;getppid&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:getppid|getppid] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getpwnam"&gt;getpwnam&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:getpwnam|getpwnam] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getpwuid"&gt;getpwuid&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:getpwuid|getpwuid] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_gets"&gt;gets&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns one line from 
&lt;FONT SIZE=-1&gt;STDIN.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getuid"&gt;getuid&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the user's id.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_gmtime"&gt;gmtime&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:gmtime|gmtime] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_isalnum"&gt;isalnum&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function, except that it can apply to a single
character or to a whole string.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_isalpha"&gt;isalpha&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function, except that it can apply to a single
character or to a whole string.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_isatty"&gt;isatty&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns a boolean indicating whether the specified filehandle is connected
to a tty.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_iscntrl"&gt;iscntrl&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function, except that it can apply to a single
character or to a whole string.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_isdigit"&gt;isdigit&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function, except that it can apply to a single
character or to a whole string.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_isgraph"&gt;isgraph&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function, except that it can apply to a single
character or to a whole string.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_islower"&gt;islower&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function, except that it can apply to a single
character or to a whole string.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_isprint"&gt;isprint&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function, except that it can apply to a single
character or to a whole string.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ispunct"&gt;ispunct&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function, except that it can apply to a single
character or to a whole string.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_isspace"&gt;isspace&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function, except that it can apply to a single
character or to a whole string.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_isupper"&gt;isupper&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function, except that it can apply to a single
character or to a whole string.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_isxdigit"&gt;isxdigit&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function, except that it can apply to a single
character or to a whole string.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_kill"&gt;kill&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:kill|kill] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_labs"&gt;labs&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;labs()&lt;/CODE&gt; is C-specific, use abs
instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ldexp"&gt;ldexp&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;ldexp()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ldiv"&gt;ldiv&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;ldiv()&lt;/CODE&gt; is C-specific, use / and
int instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_link"&gt;link&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:link|link] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_localeconv"&gt;localeconv&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Get numeric formatting information. Returns a reference to a hash
containing the current locale formatting values.

&lt;P&gt;
The database for the &lt;STRONG&gt;de&lt;/STRONG&gt; (Deutsch or German) locale.

&lt;P&gt;
&lt;PRE&gt;        $loc = POSIX::setlocale( &amp;amp;POSIX::LC_ALL, &amp;quot;de&amp;quot; );
        print &amp;quot;Locale = $loc\n&amp;quot;;
        $lconv = POSIX::localeconv();
        print &amp;quot;decimal_point    = &amp;quot;, $lconv-&amp;gt;{decimal_point},   &amp;quot;\n&amp;quot;;
        print &amp;quot;thousands_sep    = &amp;quot;, $lconv-&amp;gt;{thousands_sep},   &amp;quot;\n&amp;quot;;
        print &amp;quot;grouping = &amp;quot;, $lconv-&amp;gt;{grouping},        &amp;quot;\n&amp;quot;;
        print &amp;quot;int_curr_symbol  = &amp;quot;, $lconv-&amp;gt;{int_curr_symbol}, &amp;quot;\n&amp;quot;;
        print &amp;quot;currency_symbol  = &amp;quot;, $lconv-&amp;gt;{currency_symbol}, &amp;quot;\n&amp;quot;;
        print &amp;quot;mon_decimal_point = &amp;quot;, $lconv-&amp;gt;{mon_decimal_point}, &amp;quot;\n&amp;quot;;
        print &amp;quot;mon_thousands_sep = &amp;quot;, $lconv-&amp;gt;{mon_thousands_sep}, &amp;quot;\n&amp;quot;;
        print &amp;quot;mon_grouping     = &amp;quot;, $lconv-&amp;gt;{mon_grouping},    &amp;quot;\n&amp;quot;;
        print &amp;quot;positive_sign    = &amp;quot;, $lconv-&amp;gt;{positive_sign},   &amp;quot;\n&amp;quot;;
        print &amp;quot;negative_sign    = &amp;quot;, $lconv-&amp;gt;{negative_sign},   &amp;quot;\n&amp;quot;;
        print &amp;quot;int_frac_digits  = &amp;quot;, $lconv-&amp;gt;{int_frac_digits}, &amp;quot;\n&amp;quot;;
        print &amp;quot;frac_digits      = &amp;quot;, $lconv-&amp;gt;{frac_digits},     &amp;quot;\n&amp;quot;;
        print &amp;quot;p_cs_precedes    = &amp;quot;, $lconv-&amp;gt;{p_cs_precedes},   &amp;quot;\n&amp;quot;;
        print &amp;quot;p_sep_by_space   = &amp;quot;, $lconv-&amp;gt;{p_sep_by_space},  &amp;quot;\n&amp;quot;;
        print &amp;quot;n_cs_precedes    = &amp;quot;, $lconv-&amp;gt;{n_cs_precedes},   &amp;quot;\n&amp;quot;;
        print &amp;quot;n_sep_by_space   = &amp;quot;, $lconv-&amp;gt;{n_sep_by_space},  &amp;quot;\n&amp;quot;;
        print &amp;quot;p_sign_posn      = &amp;quot;, $lconv-&amp;gt;{p_sign_posn},     &amp;quot;\n&amp;quot;;
        print &amp;quot;n_sign_posn      = &amp;quot;, $lconv-&amp;gt;{n_sign_posn},     &amp;quot;\n&amp;quot;;
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_localtime"&gt;localtime&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:localtime|localtime] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_log"&gt;log&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:log|log] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_log10"&gt;log10&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;log10()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_longjmp"&gt;longjmp&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;longjmp()&lt;/CODE&gt; is C-specific: use
die instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_lseek"&gt;lseek&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Move the file's read/write position. This uses file descriptors such as
those obtained by calling &lt;CODE&gt;POSIX::open&lt;/CODE&gt;.

&lt;P&gt;
&lt;PRE&gt;        $fd = POSIX::open( &amp;quot;foo&amp;quot;, &amp;amp;POSIX::O_RDONLY );
        $off_t = POSIX::lseek( $fd, 0, &amp;amp;POSIX::SEEK_SET );
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_malloc"&gt;malloc&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;malloc()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_mblen"&gt;mblen&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;mblen()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_mbstowcs"&gt;mbstowcs&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;mbstowcs()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_mbtowc"&gt;mbtowc&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;mbtowc()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_memchr"&gt;memchr&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;memchr()&lt;/CODE&gt; is C-specific, use 
&lt;CODE&gt;index()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_memcmp"&gt;memcmp&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;memcmp()&lt;/CODE&gt; is C-specific, use
eq instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_memcpy"&gt;memcpy&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;memcpy()&lt;/CODE&gt; is C-specific, use =
instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_memmove"&gt;memmove&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;memmove()&lt;/CODE&gt; is C-specific, use
= instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_memset"&gt;memset&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;memset()&lt;/CODE&gt; is C-specific, use x
instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_mkdir"&gt;mkdir&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:mkdir|mkdir] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_mkfifo"&gt;mkfifo&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is similar to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;mkfifo()&lt;/CODE&gt;.

&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_mktime"&gt;mktime&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Convert date/time info to a calendar time.

&lt;P&gt;
Synopsis:

&lt;P&gt;
&lt;PRE&gt;        mktime(sec, min, hour, mday, mon, year, wday = 0, yday = 0, isdst = 0)
&lt;/PRE&gt;
&lt;P&gt;
The month (&lt;CODE&gt;mon&lt;/CODE&gt;), weekday (&lt;CODE&gt;wday&lt;/CODE&gt;), and yearday (&lt;CODE&gt;yday&lt;/CODE&gt;) begin at zero. I.e. January is 0, not 1; Sunday is 0, not 1; January 1st
is 0, not 1. The year (&lt;CODE&gt;year&lt;/CODE&gt;) is given in years since 1900. I.e. The year 1995 is 95; the year 2001 is
101. Consult your system's &lt;CODE&gt;mktime()&lt;/CODE&gt; manpage for details about these and the other arguments.

&lt;P&gt;
Calendar time for December 12, 1995, at 10:30 am.

&lt;P&gt;
&lt;PRE&gt;        $time_t = POSIX::mktime( 0, 30, 10, 12, 11, 95 );
        print &amp;quot;Date = &amp;quot;, POSIX::ctime($time_t);
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_modf"&gt;modf&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Return the integral and fractional parts of a floating-point number.

&lt;P&gt;
&lt;PRE&gt;        ($fractional, $integral) = POSIX::modf( 3.14 );
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_nice"&gt;nice&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is similar to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;nice()&lt;/CODE&gt;.

&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_offsetof"&gt;offsetof&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;offsetof()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_open"&gt;open&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Open a file for reading for writing. This returns file descriptors, not
Perl filehandles. Use &lt;CODE&gt;POSIX::close&lt;/CODE&gt; to close the file.

&lt;P&gt;
Open a file read-only with mode 0666.

&lt;P&gt;
&lt;PRE&gt;        $fd = POSIX::open( &amp;quot;foo&amp;quot; );
&lt;/PRE&gt;
&lt;P&gt;
Open a file for read and write.

&lt;P&gt;
&lt;PRE&gt;        $fd = POSIX::open( &amp;quot;foo&amp;quot;, &amp;amp;POSIX::O_RDWR );
&lt;/PRE&gt;
&lt;P&gt;
Open a file for write, with truncation.

&lt;P&gt;
&lt;PRE&gt;        $fd = POSIX::open( &amp;quot;foo&amp;quot;, &amp;amp;POSIX::O_WRONLY | &amp;amp;POSIX::O_TRUNC );
&lt;/PRE&gt;
&lt;P&gt;
Create a new file with mode 0640. Set up the file for writing.

&lt;P&gt;
&lt;PRE&gt;        $fd = POSIX::open( &amp;quot;foo&amp;quot;, &amp;amp;POSIX::O_CREAT | &amp;amp;POSIX::O_WRONLY, 0640 );
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_opendir"&gt;opendir&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Open a directory for reading.

&lt;P&gt;
&lt;PRE&gt;        $dir = POSIX::opendir( &amp;quot;/tmp&amp;quot; );
        @files = POSIX::readdir( $dir );
        POSIX::closedir( $dir );
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_pathconf"&gt;pathconf&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Retrieves the value of a configurable limit on a file or directory.

&lt;P&gt;
The following will determine the maximum length of the longest allowable
pathname on the filesystem which holds &lt;CODE&gt;/tmp&lt;/CODE&gt;.

&lt;P&gt;
&lt;PRE&gt;        $path_max = POSIX::pathconf( &amp;quot;/tmp&amp;quot;, &amp;amp;POSIX::_PC_PATH_MAX );
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_pause"&gt;pause&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is similar to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;pause()&lt;/CODE&gt;.

&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_perror"&gt;perror&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;perror()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_pipe"&gt;pipe&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Create an interprocess channel. This returns file descriptors like those
returned by &lt;CODE&gt;POSIX::open&lt;/CODE&gt;.

&lt;P&gt;
&lt;PRE&gt;        ($fd0, $fd1) = POSIX::pipe();
        POSIX::write( $fd0, &amp;quot;hello&amp;quot;, 5 );
        POSIX::read( $fd1, $buf, 5 );
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_pow"&gt;pow&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Computes &lt;CODE&gt;$x&lt;/CODE&gt; raised to the power $exponent.

&lt;P&gt;
&lt;PRE&gt;        $ret = POSIX::pow( $x, $exponent );
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_printf"&gt;printf&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Prints the specified arguments to 
&lt;FONT SIZE=-1&gt;STDOUT.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_putc"&gt;putc&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;putc()&lt;/CODE&gt; is C-specific--use print
instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_putchar"&gt;putchar&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;putchar()&lt;/CODE&gt; is C-specific--use
print instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_puts"&gt;puts&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;puts()&lt;/CODE&gt; is C-specific--use print
instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_qsort"&gt;qsort&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;qsort()&lt;/CODE&gt; is C-specific, use
sort instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_raise"&gt;raise&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Sends the specified signal to the current process.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_rand"&gt;rand&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;rand()&lt;/CODE&gt; is non-portable, use
Perl's rand instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_read"&gt;read&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Read from a file. This uses file descriptors such as those obtained by
calling &lt;CODE&gt;POSIX::open&lt;/CODE&gt;. If the buffer &lt;CODE&gt;$buf&lt;/CODE&gt; is not large enough for the read then Perl will extend it to make room for
the request.

&lt;P&gt;
&lt;PRE&gt;        $fd = POSIX::open( &amp;quot;foo&amp;quot;, &amp;amp;POSIX::O_RDONLY );
        $bytes = POSIX::read( $fd, $buf, 3 );
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_readdir"&gt;readdir&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:readdir|readdir] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_realloc"&gt;realloc&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;realloc()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_remove"&gt;remove&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:unlink|unlink] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_rename"&gt;rename&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:rename|rename] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_rewind"&gt;rewind&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Seeks to the beginning of the file.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_rewinddir"&gt;rewinddir&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:rewinddir|rewinddir] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_rmdir"&gt;rmdir&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:rmdir|rmdir] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_scanf"&gt;scanf&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;scanf()&lt;/CODE&gt; is C-specific--use
&amp;lt;&amp;gt; and regular expressions instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_setgid"&gt;setgid&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Sets the real group id for this process.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_setjmp"&gt;setjmp&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;setjmp()&lt;/CODE&gt; is C-specific: use
eval {} instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_setlocale"&gt;setlocale&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Modifies and queries program's locale.

&lt;P&gt;
The following will set the traditional 
&lt;FONT SIZE=-1&gt;UNIX&lt;/FONT&gt; system locale behavior (the second argument [perlman:perlop|perlop]).

&lt;P&gt;
&lt;PRE&gt;        $loc = POSIX::setlocale( &amp;amp;POSIX::LC_ALL, &amp;quot;C&amp;quot; );
&lt;/PRE&gt;
&lt;P&gt;
The following will query (the missing second argument) the current 
&lt;FONT SIZE=-1&gt;LC_CTYPE&lt;/FONT&gt; category.

&lt;P&gt;
&lt;PRE&gt;        $loc = POSIX::setlocale( &amp;amp;POSIX::LC_CTYPE);
&lt;/PRE&gt;
&lt;P&gt;
The following will set the 
&lt;FONT SIZE=-1&gt;LC_CTYPE&lt;/FONT&gt; behaviour according to the locale environment
variables (the second argument &lt;CODE&gt;&amp;quot;&amp;quot;&lt;/CODE&gt;). Please see your systems &lt;EM&gt;setlocale(3)&lt;/EM&gt; documentation for the locale environment variables' meaning or consult [perlman:perllocale|perllocale].

&lt;P&gt;
&lt;PRE&gt;        $loc = POSIX::setlocale( &amp;amp;POSIX::LC_CTYPE, &amp;quot;&amp;quot;);
&lt;/PRE&gt;
&lt;P&gt;
The following will set the 
&lt;FONT SIZE=-1&gt;LC_COLLATE&lt;/FONT&gt; behaviour to Argentinian Spanish. &lt;STRONG&gt;NOTE&lt;/STRONG&gt;: The naming and availability of locales depends on your operating system.
Please consult [perlman:perllocale|perllocale] for how to find out which locales are available in your system.

&lt;P&gt;
&lt;PRE&gt;        $loc = POSIX::setlocale( &amp;amp;POSIX::LC_ALL, &amp;quot;es_AR.ISO8859-1&amp;quot; );
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_setpgid"&gt;setpgid&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is similar to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;setpgid()&lt;/CODE&gt;.

&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_setsid"&gt;setsid&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;setsid()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_setuid"&gt;setuid&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Sets the real user id for this process.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sigaction"&gt;sigaction&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Detailed signal management. This uses &lt;CODE&gt;POSIX::SigAction&lt;/CODE&gt; objects for the
&lt;CODE&gt;action&lt;/CODE&gt; and &lt;CODE&gt;oldaction&lt;/CODE&gt; arguments. Consult your system's &lt;CODE&gt;sigaction&lt;/CODE&gt;
manpage for details.

&lt;P&gt;
Synopsis:

&lt;P&gt;
&lt;PRE&gt;        sigaction(sig, action, oldaction = 0)
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_siglongjmp"&gt;siglongjmp&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;siglongjmp()&lt;/CODE&gt; is
C-specific: use die instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sigpending"&gt;sigpending&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Examine signals that are blocked and pending. This uses &lt;CODE&gt;POSIX::SigSet&lt;/CODE&gt;
objects for the &lt;CODE&gt;sigset&lt;/CODE&gt; argument. Consult your system's &lt;CODE&gt;sigpending&lt;/CODE&gt;
manpage for details.

&lt;P&gt;
Synopsis:

&lt;P&gt;
&lt;PRE&gt;        sigpending(sigset)
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sigprocmask"&gt;sigprocmask&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Change and/or examine calling process's signal mask. This uses
&lt;CODE&gt;POSIX::SigSet&lt;/CODE&gt; objects for the &lt;CODE&gt;sigset&lt;/CODE&gt; and &lt;CODE&gt;oldsigset&lt;/CODE&gt; arguments. Consult your system's &lt;CODE&gt;sigprocmask&lt;/CODE&gt; manpage for details.

&lt;P&gt;
Synopsis:

&lt;P&gt;
&lt;PRE&gt;        sigprocmask(how, sigset, oldsigset = 0)
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sigsetjmp"&gt;sigsetjmp&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;sigsetjmp()&lt;/CODE&gt; is C-specific:
use eval {} instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sigsuspend"&gt;sigsuspend&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Install a signal mask and suspend process until signal arrives. This uses
&lt;CODE&gt;POSIX::SigSet&lt;/CODE&gt; objects for the &lt;CODE&gt;signal_mask&lt;/CODE&gt; argument. Consult your system's &lt;CODE&gt;sigsuspend&lt;/CODE&gt; manpage for details.

&lt;P&gt;
Synopsis:

&lt;P&gt;
&lt;PRE&gt;        sigsuspend(signal_mask)
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sin"&gt;sin&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:sin|sin] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sinh"&gt;sinh&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;sinh()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sleep"&gt;sleep&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:sleep|sleep] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sprintf"&gt;sprintf&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:sprintf|sprintf] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sqrt"&gt;sqrt&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:sqrt|sqrt] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_srand"&gt;srand&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;srand().&lt;/CODE&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sscanf"&gt;sscanf&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;sscanf()&lt;/CODE&gt; is C-specific--use
regular expressions instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_stat"&gt;stat&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:stat|stat] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strcat"&gt;strcat&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;strcat()&lt;/CODE&gt; is C-specific, use
.= instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strchr"&gt;strchr&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;strchr()&lt;/CODE&gt; is C-specific, use 
&lt;CODE&gt;index()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strcmp"&gt;strcmp&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;strcmp()&lt;/CODE&gt; is C-specific, use
eq instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strcoll"&gt;strcoll&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;strcoll()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strcpy"&gt;strcpy&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;strcpy()&lt;/CODE&gt; is C-specific, use =
instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strcspn"&gt;strcspn&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;strcspn()&lt;/CODE&gt; is C-specific, use
regular expressions instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strerror"&gt;strerror&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the error string for the specified errno.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strftime"&gt;strftime&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Convert date and time information to string. Returns the string.

&lt;P&gt;
Synopsis:

&lt;P&gt;
&lt;PRE&gt;        strftime(fmt, sec, min, hour, mday, mon, year, wday = 0, yday = 0, isdst = 0)
&lt;/PRE&gt;
&lt;P&gt;
The month (&lt;CODE&gt;mon&lt;/CODE&gt;), weekday (&lt;CODE&gt;wday&lt;/CODE&gt;), and yearday (&lt;CODE&gt;yday&lt;/CODE&gt;) begin at zero. I.e. January is 0, not 1; Sunday is 0, not 1; January 1st
is 0, not 1. The year (&lt;CODE&gt;year&lt;/CODE&gt;) is given in years since 1900. I.e. The year 1995 is 95; the year 2001 is
101. Consult your system's &lt;CODE&gt;strftime()&lt;/CODE&gt; manpage for details about these and the other arguments.

&lt;P&gt;
The string for Tuesday, December 12, 1995.

&lt;P&gt;
&lt;PRE&gt;        $str = POSIX::strftime( &amp;quot;%A, %B %d, %Y&amp;quot;, 0, 0, 0, 12, 11, 95, 2 );
        print &amp;quot;$str\n&amp;quot;;
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strlen"&gt;strlen&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;strlen()&lt;/CODE&gt; is C-specific, use
length instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strncat"&gt;strncat&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;strncat()&lt;/CODE&gt; is C-specific, use
.= instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strncmp"&gt;strncmp&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;strncmp()&lt;/CODE&gt; is C-specific, use
eq instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strncpy"&gt;strncpy&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;strncpy()&lt;/CODE&gt; is C-specific, use
= instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_stroul"&gt;stroul&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;stroul()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strpbrk"&gt;strpbrk&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;strpbrk()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strrchr"&gt;strrchr&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;strrchr()&lt;/CODE&gt; is C-specific, use 
&lt;CODE&gt;rindex()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strspn"&gt;strspn&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;strspn()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strstr"&gt;strstr&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:index|index] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strtod"&gt;strtod&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
String to double translation. Returns the parsed number and the number of characters in the unparsed portion of the string. Truly POSIX-compliant systems set $! 
&lt;FONT SIZE=-1&gt;($ERRNO)&lt;/FONT&gt; to indicate a translation error, so clear $! before calling strtod. However, non-POSIX systems may not check for overflow, and therefore will never set $!.

&lt;P&gt;
strtod should respect any 
&lt;FONT SIZE=-1&gt;POSIX&lt;/FONT&gt; &lt;EM&gt;setlocale()&lt;/EM&gt; settings.

&lt;P&gt;
To parse a string &lt;CODE&gt;$str&lt;/CODE&gt; as a floating point number use

&lt;P&gt;
&lt;PRE&gt;    $! = 0;
    ($num, $n_unparsed) = POSIX::strtod($str);
&lt;/PRE&gt;
&lt;P&gt;
The second returned item and $! can be used to check for valid input:

&lt;P&gt;
&lt;PRE&gt;    if (($str eq '') || ($n_unparsed != 0) || !$!) {
        die &amp;quot;Non-numeric input $str&amp;quot; . $! ? &amp;quot;: $!\n&amp;quot; : &amp;quot;\n&amp;quot;;
    }
&lt;/PRE&gt;
&lt;P&gt;
When called in a scalar context strtod returns the parsed number.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strtok"&gt;strtok&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;strtok()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strtol"&gt;strtol&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
String to (long) integer translation. Returns the parsed number and the number of characters in the unparsed portion of the string. Truly POSIX-compliant systems set $! 
&lt;FONT SIZE=-1&gt;($ERRNO)&lt;/FONT&gt; to indicate a translation error, so clear $! before calling strtol. However, non-POSIX systems may not check for overflow, and therefore will never set $!.

&lt;P&gt;
strtol should respect any 
&lt;FONT SIZE=-1&gt;POSIX&lt;/FONT&gt; &lt;EM&gt;setlocale()&lt;/EM&gt; settings.

&lt;P&gt;
To parse a string &lt;CODE&gt;$str&lt;/CODE&gt; as a number in some base
&lt;CODE&gt;$base&lt;/CODE&gt; use

&lt;P&gt;
&lt;PRE&gt;    $! = 0;
    ($num, $n_unparsed) = POSIX::strtol($str, $base);
&lt;/PRE&gt;
&lt;P&gt;
The base should be zero or between 2 and 36, inclusive. When the base is zero or omitted strtol will use the string itself to determine the base: a leading ``0x'' or 
&lt;FONT SIZE=-1&gt;``0X''&lt;/FONT&gt; means hexadecimal; a leading ``0'' means octal; any other leading characters mean decimal. Thus, ``1234'' is parsed as a decimal number, ``01234'' as an octal number, and ``0x1234'' as a hexadecimal number.

&lt;P&gt;
The second returned item and $! can be used to check for valid input:

&lt;P&gt;
&lt;PRE&gt;    if (($str eq '') || ($n_unparsed != 0) || !$!) {
        die &amp;quot;Non-numeric input $str&amp;quot; . $! ? &amp;quot;: $!\n&amp;quot; : &amp;quot;\n&amp;quot;;
    }
&lt;/PRE&gt;
&lt;P&gt;
When called in a scalar context strtol returns the parsed number.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strtoul"&gt;strtoul&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
String to unsigned (long) integer translation. strtoul is identical to
strtol except that strtoul only parses unsigned integers. See
&lt;EM&gt;strtol&lt;/EM&gt; for details.

&lt;P&gt;
Note: Some vendors supply strtod and strtol but not strtoul. Other vendors
that do suply strtoul parse ``-1'' as a valid value.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_strxfrm"&gt;strxfrm&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
String transformation. Returns the transformed string.

&lt;P&gt;
&lt;PRE&gt;        $dst = POSIX::strxfrm( $src );
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sysconf"&gt;sysconf&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Retrieves values of system configurable variables.

&lt;P&gt;
The following will get the machine's clock speed.

&lt;P&gt;
&lt;PRE&gt;        $clock_ticks = POSIX::sysconf( &amp;amp;POSIX::_SC_CLK_TCK );
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_system"&gt;system&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:system|system] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tan"&gt;tan&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;tan()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tanh"&gt;tanh&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;tanh()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tcdrain"&gt;tcdrain&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is similar to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;tcdrain()&lt;/CODE&gt;.

&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tcflow"&gt;tcflow&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is similar to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;tcflow()&lt;/CODE&gt;.

&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tcflush"&gt;tcflush&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is similar to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;tcflush()&lt;/CODE&gt;.

&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tcgetpgrp"&gt;tcgetpgrp&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;tcgetpgrp()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tcsendbreak"&gt;tcsendbreak&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is similar to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;tcsendbreak()&lt;/CODE&gt;.

&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tcsetpgrp"&gt;tcsetpgrp&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is similar to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;tcsetpgrp()&lt;/CODE&gt;.

&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_time"&gt;time&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:time|time] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_times"&gt;times&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
The 
&lt;CODE&gt;times()&lt;/CODE&gt; function returns
elapsed realtime since some point in the past (such as system startup),
user and system times for this process, and user and system times used by
child processes. All times are returned in clock ticks.

&lt;P&gt;
&lt;PRE&gt;    ($realtime, $user, $system, $cuser, $csystem) = POSIX::times();
&lt;/PRE&gt;
&lt;P&gt;
Note: Perl's builtin [perlfunc:times|times] function returns four values, measured in seconds.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tmpfile"&gt;tmpfile&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::File::new_tmpfile()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tmpnam"&gt;tmpnam&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns a name for a temporary file.

&lt;P&gt;
&lt;PRE&gt;        $tmpfile = POSIX::tmpnam();
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tolower"&gt;tolower&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:lc|lc] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_toupper"&gt;toupper&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:uc|uc] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ttyname"&gt;ttyname&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;ttyname()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tzname"&gt;tzname&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Retrieves the time conversion information from the &lt;CODE&gt;tzname&lt;/CODE&gt; variable.

&lt;P&gt;
&lt;PRE&gt;        POSIX::tzset();
        ($std, $dst) = POSIX::tzname();
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tzset"&gt;tzset&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;tzset()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_umask"&gt;umask&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:umask|umask] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_uname"&gt;uname&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Get name of current operating system.

&lt;P&gt;
&lt;PRE&gt;        ($sysname, $nodename, $release, $version, $machine ) = POSIX::uname();
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ungetc"&gt;ungetc&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Use method &lt;CODE&gt;IO::Handle::ungetc()&lt;/CODE&gt; instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_unlink"&gt;unlink&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:unlink|unlink] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_utime"&gt;utime&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:utime|utime] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_vfprintf"&gt;vfprintf&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;vfprintf()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_vprintf"&gt;vprintf&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;vprintf()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_vsprintf"&gt;vsprintf&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;CODE&gt;vsprintf()&lt;/CODE&gt; is C-specific.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_wait"&gt;wait&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to Perl's builtin [perlfunc:wait|wait] function.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_waitpid"&gt;waitpid&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Wait for a child process to change state. This is identical to Perl's
builtin [perlfunc:waitpid|waitpid] function.

&lt;P&gt;
&lt;PRE&gt;        $pid = POSIX::waitpid( -1, &amp;amp;POSIX::WNOHANG );
        print &amp;quot;status = &amp;quot;, ($? / 256), &amp;quot;\n&amp;quot;;
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_wcstombs"&gt;wcstombs&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;wcstombs()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_wctomb"&gt;wctomb&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is identical to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function &lt;CODE&gt;wctomb()&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_write"&gt;write&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Write to a file. This uses file descriptors such as those obtained by
calling &lt;CODE&gt;POSIX::open&lt;/CODE&gt;.

&lt;P&gt;
&lt;PRE&gt;        $fd = POSIX::open( &amp;quot;foo&amp;quot;, &amp;amp;POSIX::O_WRONLY );
        $buf = &amp;quot;hello&amp;quot;;
        $bytes = POSIX::write( $b, $buf, 5 );
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="CLASSES"&gt;CLASSES&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="POSIX_SigAction"&gt;POSIX::SigAction&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_new"&gt;new&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Creates a new &lt;CODE&gt;POSIX::SigAction&lt;/CODE&gt; object which corresponds to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt;
&lt;CODE&gt;struct sigaction&lt;/CODE&gt;. This object will be destroyed automatically when it is no longer needed.
The first parameter is the fully-qualified name of a sub which is a
signal-handler. The second parameter is a &lt;CODE&gt;POSIX::SigSet&lt;/CODE&gt;
object, it defaults to the empty set. The third parameter contains the
&lt;CODE&gt;sa_flags&lt;/CODE&gt;, it defaults to 0.

&lt;P&gt;
&lt;PRE&gt;        $sigset = POSIX::SigSet-&amp;gt;new(SIGINT, SIGQUIT);
        $sigaction = POSIX::SigAction-&amp;gt;new( 'main::handler', $sigset, &amp;amp;POSIX::SA_NOCLDSTOP );
&lt;/PRE&gt;
&lt;P&gt;
This &lt;CODE&gt;POSIX::SigAction&lt;/CODE&gt; object should be used with the &lt;CODE&gt;POSIX::sigaction()&lt;/CODE&gt;
function.

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="POSIX_SigSet"&gt;POSIX::SigSet&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;new&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Create a new SigSet object. This object will be destroyed automatically
when it is no longer needed. Arguments may be supplied to initialize the
set.

&lt;P&gt;
Create an empty set.

&lt;P&gt;
&lt;PRE&gt;        $sigset = POSIX::SigSet-&amp;gt;new;
&lt;/PRE&gt;
&lt;P&gt;
Create a set with 
&lt;FONT SIZE=-1&gt;SIGUSR1.&lt;/FONT&gt;

&lt;P&gt;
&lt;PRE&gt;        $sigset = POSIX::SigSet-&amp;gt;new( &amp;amp;POSIX::SIGUSR1 );
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_addset"&gt;addset&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Add a signal to a SigSet object.

&lt;P&gt;
&lt;PRE&gt;        $sigset-&amp;gt;addset( &amp;amp;POSIX::SIGUSR2 );
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_delset"&gt;delset&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Remove a signal from the SigSet object.

&lt;P&gt;
&lt;PRE&gt;        $sigset-&amp;gt;delset( &amp;amp;POSIX::SIGUSR2 );
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_emptyset"&gt;emptyset&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Initialize the SigSet object to be empty.

&lt;P&gt;
&lt;PRE&gt;        $sigset-&amp;gt;emptyset();
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fillset"&gt;fillset&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Initialize the SigSet object to include all signals.

&lt;P&gt;
&lt;PRE&gt;        $sigset-&amp;gt;fillset();
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ismember"&gt;ismember&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Tests the SigSet object to see if it contains a specific signal.

&lt;P&gt;
&lt;PRE&gt;        if( $sigset-&amp;gt;ismember( &amp;amp;POSIX::SIGUSR1 ) ){
                print &amp;quot;contains SIGUSR1\n&amp;quot;;
        }
&lt;/PRE&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="POSIX_Termios"&gt;POSIX::Termios&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;new&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Create a new Termios object. This object will be destroyed automatically when it is no longer needed. 
&lt;FONT SIZE=-1&gt;A&lt;/FONT&gt; Termios object corresponds to the termios 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; struct. 
&lt;CODE&gt;new()&lt;/CODE&gt; mallocs a new one, 
&lt;CODE&gt;getattr()&lt;/CODE&gt; fills it from a file descriptor, and 
&lt;CODE&gt;setattr()&lt;/CODE&gt; sets a file descriptor's parameters to match Termios' contents.

&lt;P&gt;
&lt;PRE&gt;        $termios = POSIX::Termios-&amp;gt;new;
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getattr"&gt;getattr&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Get terminal control attributes.

&lt;P&gt;
Obtain the attributes for stdin.

&lt;P&gt;
&lt;PRE&gt;        $termios-&amp;gt;getattr()
&lt;/PRE&gt;
&lt;P&gt;
Obtain the attributes for stdout.

&lt;P&gt;
&lt;PRE&gt;        $termios-&amp;gt;getattr( 1 )
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getcc"&gt;getcc&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Retrieve a value from the c_cc field of a termios object. The c_cc field is
an array so an index must be specified.

&lt;P&gt;
&lt;PRE&gt;        $c_cc&amp;#091;1&amp;#093; = $termios-&amp;gt;getcc(1);
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getcflag"&gt;getcflag&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Retrieve the c_cflag field of a termios object.

&lt;P&gt;
&lt;PRE&gt;        $c_cflag = $termios-&amp;gt;getcflag;
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getiflag"&gt;getiflag&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Retrieve the c_iflag field of a termios object.

&lt;P&gt;
&lt;PRE&gt;        $c_iflag = $termios-&amp;gt;getiflag;
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getispeed"&gt;getispeed&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Retrieve the input baud rate.

&lt;P&gt;
&lt;PRE&gt;        $ispeed = $termios-&amp;gt;getispeed;
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getlflag"&gt;getlflag&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Retrieve the c_lflag field of a termios object.

&lt;P&gt;
&lt;PRE&gt;        $c_lflag = $termios-&amp;gt;getlflag;
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getoflag"&gt;getoflag&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Retrieve the c_oflag field of a termios object.

&lt;P&gt;
&lt;PRE&gt;        $c_oflag = $termios-&amp;gt;getoflag;
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_getospeed"&gt;getospeed&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Retrieve the output baud rate.

&lt;P&gt;
&lt;PRE&gt;        $ospeed = $termios-&amp;gt;getospeed;
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_setattr"&gt;setattr&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Set terminal control attributes.

&lt;P&gt;
Set attributes immediately for stdout.

&lt;P&gt;
&lt;PRE&gt;        $termios-&amp;gt;setattr( 1, &amp;amp;POSIX::TCSANOW );
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_setcc"&gt;setcc&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Set a value in the c_cc field of a termios object. The c_cc field is an
array so an index must be specified.

&lt;P&gt;
&lt;PRE&gt;        $termios-&amp;gt;setcc( &amp;amp;POSIX::VEOF, 1 );
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_setcflag"&gt;setcflag&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Set the c_cflag field of a termios object.

&lt;P&gt;
&lt;PRE&gt;        $termios-&amp;gt;setcflag( $c_cflag | &amp;amp;POSIX::CLOCAL );
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_setiflag"&gt;setiflag&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Set the c_iflag field of a termios object.

&lt;P&gt;
&lt;PRE&gt;        $termios-&amp;gt;setiflag( $c_iflag | &amp;amp;POSIX::BRKINT );
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_setispeed"&gt;setispeed&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Set the input baud rate.

&lt;P&gt;
&lt;PRE&gt;        $termios-&amp;gt;setispeed( &amp;amp;POSIX::B9600 );
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_setlflag"&gt;setlflag&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Set the c_lflag field of a termios object.

&lt;P&gt;
&lt;PRE&gt;        $termios-&amp;gt;setlflag( $c_lflag | &amp;amp;POSIX::ECHO );
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_setoflag"&gt;setoflag&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Set the c_oflag field of a termios object.

&lt;P&gt;
&lt;PRE&gt;        $termios-&amp;gt;setoflag( $c_oflag | &amp;amp;POSIX::OPOST );
&lt;/PRE&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_setospeed"&gt;setospeed&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Set the output baud rate.

&lt;P&gt;
&lt;PRE&gt;        $termios-&amp;gt;setospeed( &amp;amp;POSIX::B9600 );
&lt;/PRE&gt;
&lt;P&gt;
Returns [perlfunc:undef|undef] on failure.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_Baud"&gt;Baud rate values&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;B38400&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B75&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B200&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B134&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B300&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B1800&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B150&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B0&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B19200&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B1200&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B9600&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B600&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B4800&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B50&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B2400&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B110&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_Terminal"&gt;Terminal interface values&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;TCSADRAIN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;TCSANOW&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;TCOON&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;TCIOFLUSH&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;TCOFLUSH&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;TCION&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;TCIFLUSH&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;TCSAFLUSH&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;TCIOFF&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;TCOOFF&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_c_cc"&gt;c_cc field values&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;VEOF&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;VEOL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;VERASE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;VINTR&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;VKILL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;VQUIT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;VSUSP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;VSTART&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;VSTOP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;VMIN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;VTIME&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;NCCS&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_c_cflag"&gt;c_cflag field values&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;CLOCAL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CREAD&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CSIZE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CS5&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CS6&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CS7&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CS8&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CSTOPB&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;HUPCL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PARENB&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PARODD&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_c_iflag"&gt;c_iflag field values&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;BRKINT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ICRNL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;IGNBRK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;IGNCR&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;IGNPAR&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;INLCR&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;INPCK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ISTRIP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;IXOFF&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;IXON&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PARMRK&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_c_lflag"&gt;c_lflag field values&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;ECHO&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ECHOE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ECHOK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ECHONL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ICANON&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;IEXTEN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ISIG&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;NOFLSH&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;TOSTOP&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_c_oflag"&gt;c_oflag field values&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;OPOST&lt;/FONT&gt;

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="PATHNAME_CONSTANTS"&gt;PATHNAME CONSTANTS&lt;/A&gt;&lt;/H1&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_Constants"&gt;Constants&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;_PC_CHOWN_RESTRICTED&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_PC_LINK_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_PC_MAX_CANON&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_PC_MAX_INPUT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_PC_NAME_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_PC_NO_TRUNC&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_PC_PATH_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_PC_PIPE_BUF&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_PC_VDISABLE&lt;/FONT&gt;

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="POSIX_CONSTANTS"&gt;POSIX CONSTANTS&lt;/A&gt;&lt;/H1&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;Constants&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;_POSIX_ARG_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_CHILD_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_CHOWN_RESTRICTED&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_JOB_CONTROL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_LINK_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_MAX_CANON&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_MAX_INPUT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_NAME_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_NGROUPS_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_NO_TRUNC&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_OPEN_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_PATH_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_PIPE_BUF&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_SAVED_IDS&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_SSIZE_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_STREAM_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_TZNAME_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_VDISABLE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_POSIX_VERSION&lt;/FONT&gt;

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="SYSTEM_CONFIGURATION"&gt;SYSTEM CONFIGURATION&lt;/A&gt;&lt;/H1&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;Constants&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;_SC_ARG_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_SC_CHILD_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_SC_CLK_TCK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_SC_JOB_CONTROL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_SC_NGROUPS_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_SC_OPEN_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_SC_SAVED_IDS&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_SC_STREAM_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_SC_TZNAME_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;_SC_VERSION&lt;/FONT&gt;

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="ERRNO"&gt;ERRNO&lt;/A&gt;&lt;/H1&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;Constants&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;E2BIG&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EACCES&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EADDRINUSE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EADDRNOTAVAIL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EAFNOSUPPORT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EAGAIN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EALREADY&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EBADF&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EBUSY&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ECHILD&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ECONNABORTED&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ECONNREFUSED&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ECONNRESET&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EDEADLK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EDESTADDRREQ&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EDOM&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EDQUOT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EEXIST&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EFAULT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EFBIG&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EHOSTDOWN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EHOSTUNREACH&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EINPROGRESS&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EINTR&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EINVAL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EIO&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EISCONN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EISDIR&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ELOOP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EMFILE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EMLINK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EMSGSIZE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENAMETOOLONG&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENETDOWN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENETRESET&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENETUNREACH&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENFILE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENOBUFS&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENODEV&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENOENT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENOEXEC&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENOLCK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENOMEM&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENOPROTOOPT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENOSPC&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENOSYS&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENOTBLK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENOTCONN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENOTDIR&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENOTEMPTY&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENOTSOCK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENOTTY&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ENXIO&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EOPNOTSUPP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EPERM&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EPFNOSUPPORT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EPIPE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EPROCLIM&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EPROTONOSUPPORT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EPROTOTYPE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ERANGE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EREMOTE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ERESTART&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EROFS&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ESHUTDOWN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ESOCKTNOSUPPORT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ESPIPE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ESRCH&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ESTALE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ETIMEDOUT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ETOOMANYREFS&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ETXTBSY&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EUSERS&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EWOULDBLOCK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EXDEV&lt;/FONT&gt;

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="FCNTL"&gt;FCNTL&lt;/A&gt;&lt;/H1&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;Constants&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;FD_CLOEXEC&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;F_DUPFD&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;F_GETFD&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;F_GETFL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;F_GETLK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;F_OK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;F_RDLCK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;F_SETFD&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;F_SETFL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;F_SETLK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;F_SETLKW&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;F_UNLCK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;F_WRLCK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;O_ACCMODE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;O_APPEND&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;O_CREAT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;O_EXCL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;O_NOCTTY&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;O_NONBLOCK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;O_RDONLY&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;O_RDWR&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;O_TRUNC&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;O_WRONLY&lt;/FONT&gt;

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="FLOAT"&gt;FLOAT&lt;/A&gt;&lt;/H1&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;Constants&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;DBL_DIG&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;DBL_EPSILON&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;DBL_MANT_DIG&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;DBL_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;DBL_MAX_10_EXP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;DBL_MAX_EXP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;DBL_MIN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;DBL_MIN_10_EXP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;DBL_MIN_EXP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;FLT_DIG&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;FLT_EPSILON&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;FLT_MANT_DIG&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;FLT_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;FLT_MAX_10_EXP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;FLT_MAX_EXP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;FLT_MIN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;FLT_MIN_10_EXP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;FLT_MIN_EXP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;FLT_RADIX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;FLT_ROUNDS&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LDBL_DIG&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LDBL_EPSILON&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LDBL_MANT_DIG&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LDBL_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LDBL_MAX_10_EXP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LDBL_MAX_EXP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LDBL_MIN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LDBL_MIN_10_EXP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LDBL_MIN_EXP&lt;/FONT&gt;

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="LIMITS"&gt;LIMITS&lt;/A&gt;&lt;/H1&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;Constants&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;ARG_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CHAR_BIT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CHAR_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CHAR_MIN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CHILD_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;INT_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;INT_MIN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LINK_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LONG_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LONG_MIN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;MAX_CANON&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;MAX_INPUT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;MB_LEN_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;NAME_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;NGROUPS_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;OPEN_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PATH_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PIPE_BUF&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SCHAR_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SCHAR_MIN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SHRT_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SHRT_MIN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SSIZE_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;STREAM_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;TZNAME_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;UCHAR_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;UINT_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ULONG_MAX&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;USHRT_MAX&lt;/FONT&gt;

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="LOCALE"&gt;LOCALE&lt;/A&gt;&lt;/H1&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;Constants&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;LC_ALL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LC_COLLATE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LC_CTYPE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LC_MONETARY&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LC_NUMERIC&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LC_TIME&lt;/FONT&gt;

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="MATH"&gt;MATH&lt;/A&gt;&lt;/H1&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;Constants&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;HUGE_VAL&lt;/FONT&gt;

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="SIGNAL"&gt;SIGNAL&lt;/A&gt;&lt;/H1&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;Constants&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;

&lt;FONT SIZE=-1&gt;SA_NOCLDSTOP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SA_NOCLDWAIT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SA_NODEFER&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SA_ONSTACK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SA_RESETHAND&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SA_RESTART&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SA_SIGINFO&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGABRT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGALRM&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGCHLD&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGCONT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGFPE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGHUP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGILL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGINT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGKILL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGPIPE&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGQUIT&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGSEGV&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGSTOP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGTERM&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGTSTP&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGTTIN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGTTOU&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGUSR1&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIGUSR2&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIG_BLOCK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIG_DFL&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIG_ERR&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIG_IGN&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIG_SETMASK&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SIG_UNBLOCK&lt;/FONT&gt;

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="STAT</field>
</data>
</node>
