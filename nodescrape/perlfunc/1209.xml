<?xml version="1.0" encoding="windows-1252"?>
<node id="1209" title="perlman:File::stat" created="1999-12-22 19:51:49" updated="2005-08-15 07:54:27">
<type id="119">
perlfunc</type>
<author id="113">
root</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;
File::stat - by-name interface to Perl's built-in 
&lt;CODE&gt;stat()&lt;/CODE&gt; functions

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
&lt;PRE&gt; use &lt;A HREF="File::stat"&gt;File::stat&lt;/A&gt;;
 $st = stat($file) or die &amp;quot;No $file: $!&amp;quot;;
 if ( ($st-&amp;gt;mode &amp;amp; 0111) &amp;amp;&amp;amp; $st-&amp;gt;nlink &amp;gt; 1) ) {
     print &amp;quot;$file is executable with lotsa links\n&amp;quot;;
 } 
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE</field>
<field name="description">

&lt;P&gt;
This module's default exports override the core 
&lt;CODE&gt;stat()&lt;/CODE&gt; and 
&lt;CODE&gt;lstat()&lt;/CODE&gt; functions, replacing them with versions that return ``File::stat'' objects. This object has methods that return the similarly named structure field name from the 
&lt;CODE&gt;stat(2)&lt;/CODE&gt; function; namely, dev, ino, mode, nlink, uid, gid, rdev, size, atime, mtime, ctime, blksize, and blocks.
  

&lt;P&gt;
You may also import all the structure fields directly into your namespace as regular variables using the 
&lt;FONT SIZE=-1&gt;:FIELDS&lt;/FONT&gt; import tag. (Note that this still overrides your 
&lt;CODE&gt;stat()&lt;/CODE&gt; and 
&lt;CODE&gt;lstat()&lt;/CODE&gt; functions.) Access these fields as variables named with a preceding
 &lt;CODE&gt;st_&lt;/CODE&gt; in front their method names. Thus, &lt;CODE&gt;$stat_obj-&amp;gt;dev()&lt;/CODE&gt; corresponds to &lt;CODE&gt;$st_dev&lt;/CODE&gt; if you import the fields.

&lt;P&gt;
To access this functionality without the core overrides, pass the [perlfunc:use|use] an empty import list, and then access function functions with their full
qualified names. On the other hand, the built-ins are still available via
the &lt;CODE&gt;CORE::&lt;/CODE&gt; pseudo-package.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="NOTE"&gt;NOTE&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
While this class is currently implemented using the Class::Struct module to
build a struct-like class, you shouldn't rely upon this.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="AUTHOR"&gt;AUTHOR&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Tom Christiansen
&lt;HR&gt;
</field>
</data>
</node>
