<?xml version="1.0" encoding="windows-1252"?>
<node id="1186" title="perlman:ExtUtils::MM_Unix" created="1999-12-22 19:51:43" updated="2005-08-12 23:43:37">
<type id="119">
perlfunc</type>
<author id="113">
root</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;
ExtUtils::MM_Unix - methods used by ExtUtils::MakeMaker

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
&lt;CODE&gt;require ExtUtils::MM_Unix;&lt;/CODE&gt;

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="description">

&lt;P&gt;
The methods provided by this package are designed to be used in conjunction
with ExtUtils::MakeMaker. When MakeMaker writes a Makefile, it creates one
or more objects that inherit their methods from a package &lt;CODE&gt;MM&lt;/CODE&gt;. 
&lt;FONT SIZE=-1&gt;MM&lt;/FONT&gt; itself doesn't provide any methods, but it 
&lt;FONT SIZE=-1&gt;ISA&lt;/FONT&gt; ExtUtils::MM_Unix class. The inheritance tree of 
&lt;FONT SIZE=-1&gt;MM&lt;/FONT&gt; lets operating specific packages take the responsibility for all the methods provided by MM_Unix. We are trying to reduce the number of the necessary overrides by defining rather primitive operations within ExtUtils::MM_Unix.

&lt;P&gt;
If you are going to write a platform specific 
&lt;FONT SIZE=-1&gt;MM&lt;/FONT&gt; package, please try to limit the necessary
overrides to primitive methods, and if it is not possible to do so, let's
work out how to achieve that gain.

&lt;P&gt;
If you are overriding any of these methods in your Makefile.PL (in the 
&lt;FONT SIZE=-1&gt;MY&lt;/FONT&gt; class), please report that to the makemaker mailing list. We are trying to minimize the necessary method overrides and switch to data driven Makefile.PLs wherever possible. In the long run less methods will be overridable via the 
&lt;FONT SIZE=-1&gt;MY&lt;/FONT&gt; class.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="METHODS"&gt;METHODS&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
The following description of methods is still under development. Please
refer to the code for not suitably documented sections and complain loudly
to the makemaker mailing list.

&lt;P&gt;
Not all of the methods below are overridable in a Makefile.PL. Overridable
methods are marked as (o). All methods are overridable by a platform
specific MM_*.pm file (See
[perlman:ExtUtils::MM_VMS|MM_VMS]) and [perlman:ExtUtils::MM_OS2|MM_OS2]).

&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="Preloaded_methods"&gt;Preloaded methods&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_canonpath"&gt;canonpath&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
No physical check on the filesystem, but a logical cleanup of a path. On 
&lt;FONT SIZE=-1&gt;UNIX&lt;/FONT&gt; eliminated successive slashes and successive
``/.''.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_catdir"&gt;catdir&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Concatenate two or more directory names to form a complete path ending with a directory. But remove the trailing slash from the resulting string, because it doesn't look good, isn't necessary and confuses 
&lt;FONT SIZE=-1&gt;OS2.&lt;/FONT&gt; Of course, if this is the root directory, don't cut off the trailing slash :-)

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_catfile"&gt;catfile&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Concatenate one or more directory names and a filename to form a complete
path ending with a filename

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_curdir"&gt;curdir&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns a string representing of the current directory. ``.'' on 
&lt;FONT SIZE=-1&gt;UNIX.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_rootdir"&gt;rootdir&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns a string representing of the root directory. ``/'' on 
&lt;FONT SIZE=-1&gt;UNIX.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_updir"&gt;updir&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns a string representing of the parent directory. ``..'' on 
&lt;FONT SIZE=-1&gt;UNIX.&lt;/FONT&gt;

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="SelfLoaded_methods"&gt;SelfLoaded methods&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_c_o"&gt;c_o (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines the suffix rules to compile different flavors of 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; files to object files.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_cflags"&gt;cflags (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Does very much the same as the cflags script in the perl distribution. It doesn't return the whole compiler command line, but initializes all of its parts. The const_cccmd method then actually returns the definition of the 
&lt;FONT SIZE=-1&gt;CCCMD&lt;/FONT&gt; macro which uses these parts.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_clean"&gt;clean (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines the clean target.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_const_cccmd"&gt;const_cccmd (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the full compiler call for 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; programs and stores the definition in 
&lt;FONT SIZE=-1&gt;CONST_CCCMD.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_const_config"&gt;const_config (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines a couple of constants in the Makefile that are imported from
%Config.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_const_loadlibs"&gt;const_loadlibs (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines 
&lt;FONT SIZE=-1&gt;EXTRALIBS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LDLOADLIBS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;BSLOADLIBS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LD_RUN_PATH.&lt;/FONT&gt; See

[perlman:ExtUtils::Liblist|Liblist] for details.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_constants"&gt;constants (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Initializes lots of constants and 
&lt;FONT SIZE=-1&gt;.SUFFIXES&lt;/FONT&gt; and 
&lt;FONT SIZE=-1&gt;.PHONY&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_depend"&gt;depend (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Same as macro for the depend attribute.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dir_target"&gt;dir_target (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Takes an array of directories that need to exist and returns a Makefile entry for a .exists file in these directories. Returns nothing, if the entry has already been processed. We're helpless though, if the same directory comes as 
&lt;FONT SIZE=-1&gt;$(FOO)&lt;/FONT&gt; _and_ as ``bar''. Both of them get an entry, that's why we use ``::''.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dist"&gt;dist (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines a lot of macros for distribution support.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dist_basics"&gt;dist_basics (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines the targets distclean, distcheck, skipcheck, manifest.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dist_ci"&gt;dist_ci (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines a check in target for 
&lt;FONT SIZE=-1&gt;RCS.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dist_core"&gt;dist_core (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defeines the targets dist, tardist, zipdist, uutardist, shdist

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dist_dir"&gt;dist_dir (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines the scratch directory target that will hold the distribution before
tar-ing (or shar-ing).

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dist_test"&gt;dist_test (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines a target that produces the distribution in the scratchdirectory,
and runs 'perl Makefile.PL; make ;make test' in that subdirectory.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dlsyms"&gt;dlsyms (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Used by 
&lt;FONT SIZE=-1&gt;AIX&lt;/FONT&gt; and 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; to define 
&lt;FONT SIZE=-1&gt;DL_FUNCS&lt;/FONT&gt; and 
&lt;FONT SIZE=-1&gt;DL_VARS&lt;/FONT&gt; and write the *.exp files.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dynamic"&gt;dynamic (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines the dynamic target.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dynamic_bs"&gt;dynamic_bs (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines targets for bootstrap files.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_dynamic_lib"&gt;dynamic_lib (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines how to produce the *.so (or equivalent) files.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_exescan"&gt;exescan&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Deprecated method. Use libscan instead.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_extliblist"&gt;extliblist&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Called by init_others, and calls ext ExtUtils::Liblist. See
[perlman:ExtUtils::Liblist|Liblist] for details.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_file_name_is_absolute"&gt;file_name_is_absolute&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Takes as argument a path and returns true, if it is an absolute path.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_find_perl"&gt;find_perl&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Finds the executables 
&lt;FONT SIZE=-1&gt;PERL&lt;/FONT&gt; and 
&lt;FONT SIZE=-1&gt;FULLPERL&lt;/FONT&gt;

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="Methods_to_actually_produce_chun"&gt;Methods to actually produce chunks of text for the Makefile&lt;/A&gt;&lt;/H2&gt;
&lt;P&gt;
The methods here are called for each MakeMaker object in the order
specified by @ExtUtils::MakeMaker::MM_Sections.

&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_fixin"&gt;fixin&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Inserts the sharpbang or equivalent magic number to a script

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_force"&gt;force (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Just writes 
&lt;FONT SIZE=-1&gt;FORCE:&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_guess_name"&gt;guess_name&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Guess the name of this package by examining the working directory's name. MakeMaker calls this only if the developer has not supplied a 
&lt;FONT SIZE=-1&gt;NAME&lt;/FONT&gt; attribute.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_has_link_code"&gt;has_link_code&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns true if 
&lt;FONT SIZE=-1&gt;C,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;XS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;MYEXTLIB&lt;/FONT&gt; or similar objects exist within this object that need a compiler. Does not descend into subdirectories as 
&lt;CODE&gt;needs_linking()&lt;/CODE&gt; does.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_init_dirscan"&gt;init_dirscan&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Initializes 
&lt;FONT SIZE=-1&gt;DIR,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;XS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PM,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;C,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;O_FILES,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;H,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PL_FILES,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;MAN*PODS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EXE_FILES.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_init_main"&gt;init_main&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Initializes 
&lt;FONT SIZE=-1&gt;NAME,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;FULLEXT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;BASEEXT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PARENT_NAME,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;DLBASE,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PERL_SRC,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PERL_LIB,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PERL_ARCHLIB,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PERL_INC,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;INSTALLDIRS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;INST_*,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;INSTALL*,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PREFIX,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CONFIG,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;AR,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;AR_STATIC_ARGS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LD,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;OBJ_EXT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LIB_EXT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EXE_EXT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;MAP_TARGET,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LIBPERL_A,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;VERSION_FROM,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;VERSION,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;DISTNAME,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;VERSION_SYM.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_init_others"&gt;init_others&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Initializes 
&lt;FONT SIZE=-1&gt;EXTRALIBS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;BSLOADLIBS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LDLOADLIBS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LIBS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LD_RUN_PATH,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;OBJECT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;BOOTDEP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PERLMAINCC,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LDFROM,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LINKTYPE,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;NOOP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;FIRST_MAKEFILE,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;MAKEFILE,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;NOECHO,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;RM_F,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;RM_RF,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;TEST_F,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;TOUCH,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;MV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CHMOD,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;UMASK_NULL&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_install"&gt;install (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines the install target.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_installbin"&gt;installbin (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines targets to install 
&lt;FONT SIZE=-1&gt;EXE_FILES.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_libscan"&gt;libscan (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Takes a path to a file that is found by init_dirscan and returns false if we don't want to include this file in the library. Mainly used to exclude 
&lt;FONT SIZE=-1&gt;RCS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CVS,&lt;/FONT&gt; and 
&lt;FONT SIZE=-1&gt;SCCS&lt;/FONT&gt; directories from installation.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_linkext"&gt;linkext (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines the linkext target which in turn defines the 
&lt;FONT SIZE=-1&gt;LINKTYPE.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_lsdir"&gt;lsdir&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Takes as arguments a directory name and a regular expression. Returns all
entries in the directory that match the regular expression.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_macro"&gt;macro (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Simple subroutine to insert the macros defined by the macro attribute into
the Makefile.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_makeaperl"&gt;makeaperl (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Called by staticmake. Defines how to write the Makefile to produce a static
new perl.

&lt;P&gt;
By default the Makefile produced includes all the static extensions in the
perl library. (Purified versions of library files, e.g.,
DynaLoader_pure_p1_c0_032.a are automatically ignored to avoid link
errors.)

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_makefile"&gt;makefile (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines how to rewrite the Makefile.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_manifypods"&gt;manifypods (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines targets and routines to translate the pods into manpages and put them into the 
&lt;FONT SIZE=-1&gt;INST_*&lt;/FONT&gt; directories.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_maybe_command"&gt;maybe_command&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns true, if the argument is likely to be a command.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_maybe_command_in_dirs"&gt;maybe_command_in_dirs&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
method under development. Not yet used. Ask Ilya :-)

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_needs_linking"&gt;needs_linking (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Does this module need linking? Looks into subdirectory objects (see also 
&lt;CODE&gt;has_link_code())&lt;/CODE&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_nicetext"&gt;nicetext&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
misnamed method (will have to be changed). The MM_Unix method just returns
the argument without further processing.

&lt;P&gt;
On 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; used to insure that colons marking targets are preceded by space - most Unix Makes don't need this, but it's necessary under 
&lt;FONT SIZE=-1&gt;VMS&lt;/FONT&gt; to distinguish the target delimiter from a colon appearing as part of a filespec.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_parse_version"&gt;parse_version&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
parse a file and return what you think is &lt;CODE&gt;$VERSION&lt;/CODE&gt; in this
file set to

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_parse_abstract"&gt;parse_abstract&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
parse a file and return what you think is the 
&lt;FONT SIZE=-1&gt;ABSTRACT&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_pasthru"&gt;pasthru (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines the string that is passed to recursive make calls in
subdirectories.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_path"&gt;path&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Takes no argument, returns the environment variable 
&lt;FONT SIZE=-1&gt;PATH&lt;/FONT&gt; as an array.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_perl_script"&gt;perl_script&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Takes one argument, a file name, and returns the file name, if the argument
is likely to be a perl script. On MM_Unix this is true for any ordinary,
readable file.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_perldepend"&gt;perldepend (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines the dependency from all *.h files that come with the perl
distribution.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ppd"&gt;ppd&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines target that creates a 
&lt;FONT SIZE=-1&gt;PPD&lt;/FONT&gt; (Perl Package Description) file for a binary
distribution.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_perm_rw"&gt;perm_rw (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the attribute &lt;CODE&gt;PERM_RW&lt;/CODE&gt; or the string &lt;CODE&gt;644&lt;/CODE&gt;. Used as the string that is passed to the [perlfunc:chmod|chmod] command to set the permissions for read/writeable files. MakeMaker chooses &lt;CODE&gt;644&lt;/CODE&gt; because it has turned out in the past that relying on the umask provokes
hard-to-track bugreports. When the return value is used by the perl
function [perlfunc:chmod|chmod], it is interpreted as an octal value.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_perm_rwx"&gt;perm_rwx (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the attribute &lt;CODE&gt;PERM_RWX&lt;/CODE&gt; or the string &lt;CODE&gt;755&lt;/CODE&gt;, i.e. the string that is passed to the [perlfunc:chmod|chmod] command to set the permissions for executable files. See also perl_rw.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_pm_to_blib"&gt;pm_to_blib&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines target that copies all files in the hash 
&lt;FONT SIZE=-1&gt;PM&lt;/FONT&gt; to their destination and autosplits them. See [perlman:ExtUtils::Install_DESCRIPTION|Install_DESCRIPTION]

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_post_constants"&gt;post_constants (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns an empty string per default. Dedicated to overrides from within
Makefile.PL after all constants have been defined.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_post_initialize"&gt;post_initialize (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns an empty string per default. Used in Makefile.PLs to add some chunk
of text to the Makefile after the object is initialized.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_postamble"&gt;postamble (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns an empty string. Can be used in Makefile.PLs to write some text to
the Makefile at the end.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_prefixify"&gt;prefixify&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Check a path variable in &lt;CODE&gt;$self&lt;/CODE&gt; from %Config, if it contains a
prefix, and replace it with another one.

&lt;P&gt;
Takes as arguments an attribute name, a search prefix and a replacement
prefix. Changes the attribute in the object.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_processPL"&gt;processPL (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines targets to run 
&lt;FONT SIZE=-1&gt;*.PL&lt;/FONT&gt; files.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_realclean"&gt;realclean (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines the realclean target.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_replace_manpage_separator"&gt;replace_manpage_separator&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Takes the name of a package, which may be a nested package, in the form
Foo/Bar and replaces the slash with &lt;CODE&gt;::&lt;/CODE&gt;. Returns the replacement.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_static"&gt;static (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines the static target.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_static_lib"&gt;static_lib (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines how to produce the *.a (or equivalent) files.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_staticmake"&gt;staticmake (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Calls makeaperl.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_subdir_x"&gt;subdir_x (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Helper subroutine for subdirs

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_subdirs"&gt;subdirs (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines targets to process subdirectories.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_test"&gt;test (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines the test targets.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_test_via_harness"&gt;test_via_harness (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Helper method to write the test targets

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_test_via_script"&gt;test_via_script (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Other helper method for test.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tool_autosplit"&gt;tool_autosplit (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines a simple perl call that runs autosplit. May be deprecated by
pm_to_blib soon.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tools_other"&gt;tools_other (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines 
&lt;FONT SIZE=-1&gt;SHELL,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LD,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;TOUCH,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;MV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;RM_F,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;RM_RF,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;CHMOD,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;UMASK_NULL&lt;/FONT&gt; in the Makefile. Also defines the perl programs 
&lt;FONT SIZE=-1&gt;MKPATH,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;WARN_IF_OLD_PACKLIST,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;MOD_INSTALL.&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;DOC_INSTALL,&lt;/FONT&gt; and 
&lt;FONT SIZE=-1&gt;UNINSTALL.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_tool_xsubpp"&gt;tool_xsubpp (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Determines typemaps, xsubpp version, prototype behaviour.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_top_targets"&gt;top_targets (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines the targets all, subdirs, config, and 
&lt;FONT SIZE=-1&gt;O_FILES&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_writedoc"&gt;writedoc&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Obsolete, depecated method. Not used since Version 5.21.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_xs_c"&gt;xs_c (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines the suffix rules to compile 
&lt;FONT SIZE=-1&gt;XS&lt;/FONT&gt; files to 
&lt;FONT SIZE=-1&gt;C.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_xs_o"&gt;xs_o (o)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Defines suffix rules to go from 
&lt;FONT SIZE=-1&gt;XS&lt;/FONT&gt; to object files directly. This is only intended for
broken make implementations.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_perl_archive"&gt;perl_archive&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is internal method that returns path to libperl.a equivalent to be linked to dynamic extensions. 
&lt;FONT SIZE=-1&gt;UNIX&lt;/FONT&gt; does not have one but 
&lt;FONT SIZE=-1&gt;OS2&lt;/FONT&gt; and Win32 do.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_export_list"&gt;export_list&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This is internal method that returns name of a file that is passed to linker to define symbols to be exported. 
&lt;FONT SIZE=-1&gt;UNIX&lt;/FONT&gt; does not have one but 
&lt;FONT SIZE=-1&gt;OS2&lt;/FONT&gt; and Win32 do.

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="SEE_ALSO"&gt;SEE ALSO&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
[perlman:ExtUtils::MakeMaker|MakeMaker]

&lt;HR&gt;
</field>
</data>
</node>
