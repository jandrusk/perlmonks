<?xml version="1.0" encoding="windows-1252"?>
<node id="1096" title="perlman:lib:B" created="1999-12-22 19:49:23" updated="2005-08-14 19:18:18">
<type id="119">
perlfunc</type>
<author id="113">
root</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;

&lt;FONT SIZE=-1&gt;B&lt;/FONT&gt; - The Perl Compiler

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
&lt;PRE&gt;        use B;
&lt;/PRE&gt;
&lt;P&gt;
&lt;HR&gt;
</field>
<field name="description">

&lt;P&gt;
The &lt;CODE&gt;B&lt;/CODE&gt; module supplies classes which allow a Perl program to delve into its own
innards. It is the module used to implement the ``backends'' of the Perl
compiler. Usage of the compiler does not require knowledge of this module:
see the &lt;EM&gt;O&lt;/EM&gt; module for the user-visible part. The &lt;CODE&gt;B&lt;/CODE&gt; module is of use to those who want to write new compiler backends. This
documentation assumes that the reader knows a fair amount about perl's
internals including such things as SVs, OPs and the internal symbol table
and syntax tree of a program.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="OVERVIEW_OF_CLASSES"&gt;OVERVIEW OF CLASSES&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
The 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; structures used by Perl's internals to hold 
&lt;FONT SIZE=-1&gt;SV&lt;/FONT&gt; and 
&lt;FONT SIZE=-1&gt;OP&lt;/FONT&gt; information 
&lt;FONT SIZE=-1&gt;(PVIV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;AV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;HV,&lt;/FONT&gt; ..., 
&lt;FONT SIZE=-1&gt;OP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SVOP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;UNOP,&lt;/FONT&gt; ...) are modelled on a class hierarchy and the
 &lt;CODE&gt;B&lt;/CODE&gt; module gives access to them via a true object hierarchy. Structure fields which point to other objects (whether types of 
&lt;FONT SIZE=-1&gt;SV&lt;/FONT&gt; or types of 
&lt;FONT SIZE=-1&gt;OP)&lt;/FONT&gt; are represented by the
 &lt;CODE&gt;B&lt;/CODE&gt;
module as Perl objects of the appropriate class. The bulk of the &lt;CODE&gt;B&lt;/CODE&gt;
module is the methods for accessing fields of these structures. Note that
all access is read-only: you cannot modify the internals by using this
module.

&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="SV_RELATED_CLASSES"&gt;SV-RELATED CLASSES&lt;/A&gt;&lt;/H2&gt;
&lt;P&gt;

&lt;FONT SIZE=-1&gt;B::IV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::NV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::RV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::PV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::PVIV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::PVNV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::PVMG,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::BM,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::PVLV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::AV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::HV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::CV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::GV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::FM,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::IO.&lt;/FONT&gt; These classes correspond in the obvious way to the underlying 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; structures of similar names. The inheritance hierarchy mimics the underlying 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; ``inheritance''. Access methods correspond to the underlying 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; macros for field access, usually with the leading ``class indication'' prefix removed (Sv, Av, Hv, ...). The leading prefix is only left in cases where its removal would cause a clash in method name. For example,
 &lt;CODE&gt;GvREFCNT&lt;/CODE&gt; stays as-is since its abbreviation would clash with the ``superclass''
method
&lt;CODE&gt;REFCNT&lt;/CODE&gt; (corresponding to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function [perlman:perlguts|perlguts]).

&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_SV_METHODS"&gt;B::SV METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_REFCNT"&gt;REFCNT&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_FLAGS"&gt;FLAGS&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_IV_METHODS"&gt;B::IV METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_IV"&gt;IV&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_IVX"&gt;IVX&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_needs64bits"&gt;needs64bits&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_packiv"&gt;packiv&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_NV_METHODS"&gt;B::NV METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_NV"&gt;NV&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_NVX"&gt;NVX&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_RV_METHODS"&gt;B::RV METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_RV"&gt;RV&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_PV_METHODS"&gt;B::PV METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_PV"&gt;PV&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_PVMG_METHODS"&gt;B::PVMG METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_MAGIC"&gt;MAGIC&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_SvSTASH"&gt;SvSTASH&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_MAGIC_METHODS"&gt;B::MAGIC METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_MOREMAGIC"&gt;MOREMAGIC&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_PRIVATE"&gt;PRIVATE&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_TYPE"&gt;TYPE&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;FLAGS&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_OBJ"&gt;OBJ&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_PTR"&gt;PTR&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_PVLV_METHODS"&gt;B::PVLV METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_TARGOFF"&gt;TARGOFF&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_TARGLEN"&gt;TARGLEN&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;TYPE&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_TARG"&gt;TARG&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_BM_METHODS"&gt;B::BM METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_USEFUL"&gt;USEFUL&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_PREVIOUS"&gt;PREVIOUS&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_RARE"&gt;RARE&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_TABLE"&gt;TABLE&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_GV_METHODS"&gt;B::GV METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_NAME"&gt;NAME&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_STASH"&gt;STASH&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_SV"&gt;SV&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_IO"&gt;IO&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_FORM"&gt;FORM&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_AV"&gt;AV&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_HV"&gt;HV&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_EGV"&gt;EGV&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_CV"&gt;CV&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_CVGEN"&gt;CVGEN&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_LINE"&gt;LINE&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_FILEGV"&gt;FILEGV&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_GvREFCNT"&gt;GvREFCNT&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;FLAGS&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_IO_METHODS"&gt;B::IO METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_LINES"&gt;LINES&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_PAGE"&gt;PAGE&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_PAGE_LEN"&gt;PAGE_LEN&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_LINES_LEFT"&gt;LINES_LEFT&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_TOP_NAME"&gt;TOP_NAME&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_TOP_GV"&gt;TOP_GV&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_FMT_NAME"&gt;FMT_NAME&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_FMT_GV"&gt;FMT_GV&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_BOTTOM_NAME"&gt;BOTTOM_NAME&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_BOTTOM_GV"&gt;BOTTOM_GV&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_SUBPROCESS"&gt;SUBPROCESS&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_IoTYPE"&gt;IoTYPE&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_IoFLAGS"&gt;IoFLAGS&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_AV_METHODS"&gt;B::AV METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_FILL"&gt;FILL&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_MAX"&gt;MAX&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_OFF"&gt;OFF&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ARRAY"&gt;ARRAY&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_AvFLAGS"&gt;AvFLAGS&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_CV_METHODS"&gt;B::CV METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;STASH&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_START"&gt;START&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ROOT"&gt;ROOT&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_GV"&gt;GV&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;FILEGV&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_DEPTH"&gt;DEPTH&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_PADLIST"&gt;PADLIST&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_OUTSIDE"&gt;OUTSIDE&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_XSUB"&gt;XSUB&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_XSUBANY"&gt;XSUBANY&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_HV_METHODS"&gt;B::HV METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;FILL&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;MAX&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_KEYS"&gt;KEYS&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_RITER"&gt;RITER&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;NAME&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_PMROOT"&gt;PMROOT&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;ARRAY&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="OP_RELATED_CLASSES"&gt;OP-RELATED CLASSES&lt;/A&gt;&lt;/H2&gt;
&lt;P&gt;

&lt;FONT SIZE=-1&gt;B::OP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::UNOP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::BINOP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::LOGOP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::CONDOP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::LISTOP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::PMOP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::SVOP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::GVOP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::PVOP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::CVOP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::LOOP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;B::COP.&lt;/FONT&gt; These classes correspond in the obvious way to the underlying 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; structures of similar names. The inheritance hierarchy mimics the underlying 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; ``inheritance''. Access methods correspond to the underlying 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; structre field names, with the leading ``class indication'' prefix removed (op_).

&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_OP_METHODS"&gt;B::OP METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_next"&gt;next&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sibling"&gt;sibling&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ppaddr"&gt;ppaddr&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This returns the function name as a string (e.g. pp_add, pp_rv2av).

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_desc"&gt;desc&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This returns the op description from the global 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; op_desc array (e.g. ``addition'' ``array deref'').

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_targ"&gt;targ&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_type"&gt;type&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_seq"&gt;seq&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_flags"&gt;flags&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_private"&gt;private&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_UNOP_METHOD"&gt;B::UNOP METHOD&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_first"&gt;first&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_BINOP_METHOD"&gt;B::BINOP METHOD&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_last"&gt;last&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_LOGOP_METHOD"&gt;B::LOGOP METHOD&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_other"&gt;other&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_CONDOP_METHODS"&gt;B::CONDOP METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_true"&gt;true&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_false"&gt;false&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_LISTOP_METHOD"&gt;B::LISTOP METHOD&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_children"&gt;children&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_PMOP_METHODS"&gt;B::PMOP METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_pmreplroot"&gt;pmreplroot&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_pmreplstart"&gt;pmreplstart&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_pmnext"&gt;pmnext&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_pmregexp"&gt;pmregexp&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_pmflags"&gt;pmflags&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_pmpermflags"&gt;pmpermflags&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_precomp"&gt;precomp&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_SVOP_METHOD"&gt;B::SVOP METHOD&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sv"&gt;sv&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_GVOP_METHOD"&gt;B::GVOP METHOD&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_gv"&gt;gv&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_PVOP_METHOD"&gt;B::PVOP METHOD&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_pv"&gt;pv&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_LOOP_METHODS"&gt;B::LOOP METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_redoop"&gt;redoop&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_nextop"&gt;nextop&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_lastop"&gt;lastop&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME="B_COP_METHODS"&gt;B::COP METHODS&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_label"&gt;label&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_stash"&gt;stash&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_filegv"&gt;filegv&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_cop_seq"&gt;cop_seq&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_arybase"&gt;arybase&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_line"&gt;line&lt;/A&gt;&lt;/STRONG&gt;&lt;DD&gt;
&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="FUNCTIONS_EXPORTED_BY_C_B_"&gt;FUNCTIONS EXPORTED BY &lt;CODE&gt;B&lt;/CODE&gt;&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
The &lt;CODE&gt;B&lt;/CODE&gt; module exports a variety of functions: some are simple utility functions,
others provide a Perl program with a way to get an initial ``handle'' on an
internal object.

&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_main_cv"&gt;main_cv&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Return the (faked) 
&lt;FONT SIZE=-1&gt;CV&lt;/FONT&gt; corresponding to the main part of the Perl program.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_main_root"&gt;main_root&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the root op (i.e. an object in the appropriate B::OP-derived class)
of the main part of the Perl program.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_main_start"&gt;main_start&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the starting op of the main part of the Perl program.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_comppadlist"&gt;comppadlist&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the 
&lt;FONT SIZE=-1&gt;AV&lt;/FONT&gt; object (i.e. in class 
&lt;FONT SIZE=-1&gt;B::AV)&lt;/FONT&gt; of the global comppadlist.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sv_undef"&gt;sv_undef&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the 
&lt;FONT SIZE=-1&gt;SV&lt;/FONT&gt; object corresponding to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; variable
 &lt;CODE&gt;sv_undef&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sv_yes"&gt;sv_yes&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the 
&lt;FONT SIZE=-1&gt;SV&lt;/FONT&gt; object corresponding to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; variable
 &lt;CODE&gt;sv_yes&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_sv_no"&gt;sv_no&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the 
&lt;FONT SIZE=-1&gt;SV&lt;/FONT&gt; object corresponding to the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; variable
 &lt;CODE&gt;sv_no&lt;/CODE&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_walkoptree"&gt;walkoptree(OP, METHOD)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Does a tree-walk of the syntax tree based at 
&lt;FONT SIZE=-1&gt;OP&lt;/FONT&gt; and calls 
&lt;FONT SIZE=-1&gt;METHOD&lt;/FONT&gt; on each op it visits. Each node is visited before its children. If

&lt;CODE&gt;walkoptree_debug&lt;/CODE&gt; (q.v.) has been called to turn debugging on then the method &lt;CODE&gt;walkoptree_debug&lt;/CODE&gt; is called on each op before 
&lt;FONT SIZE=-1&gt;METHOD&lt;/FONT&gt; is called.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_walkoptree_debug"&gt;walkoptree_debug(DEBUG)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the current debugging flag for &lt;CODE&gt;walkoptree&lt;/CODE&gt;. If the optional 
&lt;FONT SIZE=-1&gt;DEBUG&lt;/FONT&gt; argument is non-zero, it sets the debugging flag
to that. See the description of &lt;CODE&gt;walkoptree&lt;/CODE&gt; above for what the debugging flag does.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_walksymtable"&gt;walksymtable(SYMREF, METHOD, RECURSE)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Walk the symbol table starting at 
&lt;FONT SIZE=-1&gt;SYMREF&lt;/FONT&gt; and call 
&lt;FONT SIZE=-1&gt;METHOD&lt;/FONT&gt; on each symbol visited. When the walk reached package symbols ``Foo::'' it invokes 
&lt;FONT SIZE=-1&gt;RECURSE&lt;/FONT&gt; and only recurses into the package if that sub returns true.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_svref_2object"&gt;svref_2object(SV)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Takes any Perl variable and turns it into an object in the appropriate
B::OP-derived or B::SV-derived class. Apart from functions such as &lt;CODE&gt;main_root&lt;/CODE&gt;, this is the primary way to get an initial ``handle'' on a internal perl
data structure which can then be followed with the other access methods.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_ppname"&gt;ppname(OPNUM)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Return the 
&lt;FONT SIZE=-1&gt;PP&lt;/FONT&gt; function name (e.g. ``pp_add'') of op number 
&lt;FONT SIZE=-1&gt;OPNUM.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_hash"&gt;hash(STR)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns a string in the form ``0x...'' representing the value of the internal hash function used by perl on string 
&lt;FONT SIZE=-1&gt;STR.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_cast_I32"&gt;cast_I32(I)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Casts 
&lt;FONT SIZE=-1&gt;I&lt;/FONT&gt; to the internal 
&lt;FONT SIZE=-1&gt;I32&lt;/FONT&gt; type used by that perl.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_minus_c"&gt;minus_c&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Does the equivalent of the &lt;CODE&gt;-c&lt;/CODE&gt; command-line option. Obviously, this is only useful in a 
&lt;FONT SIZE=-1&gt;BEGIN&lt;/FONT&gt; block or else the flag is set too late.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_cstring"&gt;cstring(STR)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns a double-quote-surrounded escaped version of 
&lt;FONT SIZE=-1&gt;STR&lt;/FONT&gt; which can be used as a string in 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; source code.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_class"&gt;class(OBJ)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Returns the class of an object without the part of the classname preceding the first ``::''. This is used to turn 
&lt;FONT SIZE=-1&gt;``B::UNOP''&lt;/FONT&gt; into 
&lt;FONT SIZE=-1&gt;``UNOP''&lt;/FONT&gt; for example.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_threadsv_names"&gt;threadsv_names&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
In a perl compiled for threads, this returns a list of the special
per-thread threadsv variables.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_byteload_fh"&gt;byteload_fh(FILEHANDLE)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Load the contents of 
&lt;FONT SIZE=-1&gt;FILEHANDLE&lt;/FONT&gt; as bytecode. See documentation for the &lt;STRONG&gt;Bytecode&lt;/STRONG&gt; module in &lt;EM&gt;B::Backend&lt;/EM&gt; for how to generate bytecode.

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME="AUTHOR"&gt;AUTHOR&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Malcolm Beattie, &lt;CODE&gt;mbeattie@sable.ox.ac.uk&lt;/CODE&gt;

&lt;HR&gt;
</field>
</data>
</node>
