<?xml version="1.0" encoding="windows-1252"?>
<node id="271" title="perlfunc:undef" created="1999-08-24 18:42:45" updated="2005-08-12 22:42:31">
<type id="119">
perlfunc</type>
<author id="114">
gods</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;
undef - remove a variable or function definition

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
undef 
&lt;FONT SIZE=-1&gt;EXPR&lt;/FONT&gt;

&lt;P&gt;
undef

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="description">

&lt;P&gt;
Undefines the value of 
&lt;FONT SIZE=-1&gt;EXPR,&lt;/FONT&gt; which must be an lvalue. Use only on a scalar
value, an array (using ``&lt;CODE&gt;@&lt;/CODE&gt;''), a hash (using ``&lt;CODE&gt;%&lt;/CODE&gt;''), a subroutine (using ``&lt;CODE&gt;&amp;amp;&lt;/CODE&gt;''), or a typeglob (using ``&amp;lt;*&amp;gt;''). (Saying &lt;CODE&gt;undef $hash{$key}&lt;/CODE&gt;
will probably not do what you expect on most predefined variables or 
&lt;FONT SIZE=-1&gt;DBM&lt;/FONT&gt; list values, so don't do that; see [perlfunc:delete|the delete manpage].) Always returns the undefined value. You can omit the 
&lt;FONT SIZE=-1&gt;EXPR,&lt;/FONT&gt; in which case nothing is undefined, but you
still get an undefined value that you could, for instance, return from a
subroutine, assign to a variable or pass as a parameter. Examples:

&lt;P&gt;
&lt;PRE&gt;    undef $foo;
    undef $bar{'blurfl'};      # Compare to: delete $bar{'blurfl'};
    undef @ary;
    undef %hash;
    undef &amp;amp;mysub;
    undef *xyz;       # destroys $xyz, @xyz, %xyz, &amp;amp;xyz, etc.
    return (wantarray ? (undef, $errmsg) : undef) if $they_blew_it;
    select undef, undef, undef, 0.25;
    ($a, $b, undef, $c) = &amp;amp;foo;       # Ignore third value returned
&lt;/PRE&gt;
&lt;P&gt;
Note that this is a unary operator, not a list operator.

&lt;HR&gt;
</field>
</data>
</node>
