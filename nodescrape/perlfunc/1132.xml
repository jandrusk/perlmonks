<?xml version="1.0" encoding="windows-1252"?>
<node id="1132" title="perlman:lib:attrs" created="1999-12-22 19:49:29" updated="2005-08-10 16:38:59">
<type id="119">
perlfunc</type>
<author id="113">
root</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;
attrs - set/get attributes of a subroutine

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
&lt;PRE&gt;    sub foo {
        use attrs qw(locked method);
        ...
    }
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    @a = attrs::get(\&amp;amp;foo);
&lt;/PRE&gt;
&lt;P&gt;
&lt;HR&gt;
</field>
<field name="description">

&lt;P&gt;
This module lets you set and get attributes for subroutines. Setting
attributes takes place at compile time; trying to set invalid attribute
names causes a compile-time error. Calling
&lt;CODE&gt;attr::get&lt;/CODE&gt; on a subroutine reference or name returns its list of attribute names.
Notice that &lt;CODE&gt;attr::get&lt;/CODE&gt; is not exported. Valid attributes are as follows.

&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_method"&gt;method&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Indicates that the invoking subroutine is a method.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME="item_locked"&gt;locked&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Setting this attribute is only meaningful when the subroutine or method is
to be called by multiple threads. When set on a method subroutine (i.e. one
marked with the &lt;STRONG&gt;method&lt;/STRONG&gt; attribute above), perl ensures that any invocation of it implicitly locks
its first argument before execution. When set on a non-method subroutine,
perl ensures that a lock is taken on the subroutine itself before
execution. The semantics of the lock are exactly those of one explicitly
taken with the &lt;CODE&gt;lock&lt;/CODE&gt; operator immediately after the subroutine is entered.

&lt;/DL&gt;
&lt;HR&gt;
</field>
</data>
</node>
