<?xml version="1.0" encoding="windows-1252"?>
<node id="310" title="perlfunc:delete" created="1999-08-24 18:43:09" updated="2005-08-14 10:27:20">
<type id="119">
perlfunc</type>
<author id="114">
gods</author>
<data>
<field name="doctext">
</field>
<field name="name">

&lt;P&gt;
delete - deletes a value from a hash

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="synopsis">

&lt;P&gt;
delete 
&lt;FONT SIZE=-1&gt;EXPR&lt;/FONT&gt;

&lt;P&gt;
&lt;HR&gt;
</field>
<field name="description">

&lt;P&gt;
Deletes the specified 
&lt;CODE&gt;key(s)&lt;/CODE&gt; and their associated
values from a hash. For each key, returns the deleted value associated with
that key, or the undefined value if there was no such key. Deleting from &lt;CODE&gt;$ENV{}&lt;/CODE&gt;
modifies the environment. Deleting from a hash tied to a 
&lt;FONT SIZE=-1&gt;DBM&lt;/FONT&gt; file deletes the entry from the 
&lt;FONT SIZE=-1&gt;DBM&lt;/FONT&gt; file. (But deleting from a
 [perlfunc:tie|tie()]d hash doesn't necessarily return anything.)

&lt;P&gt;
The following deletes all the values of a hash:

&lt;P&gt;
&lt;PRE&gt;    foreach $key (keys %HASH) {
        delete $HASH{$key};
    }
&lt;/PRE&gt;
&lt;P&gt;
And so does this:

&lt;P&gt;
&lt;PRE&gt;    delete @HASH{keys %HASH}
&lt;/PRE&gt;
&lt;P&gt;
(But both of these are slower than just assigning the empty list, or using [perlfunc:undef|undef()].) Note that the 
&lt;FONT SIZE=-1&gt;EXPR&lt;/FONT&gt; can be arbitrarily complicated as long as the
final operation is a hash element lookup or hash slice:

&lt;P&gt;
&lt;PRE&gt;    delete $ref-&amp;gt;&amp;#091;$x&amp;#093;&amp;#091;$y&amp;#093;{$key};
    delete @{$ref-&amp;gt;&amp;#091;$x&amp;#093;&amp;#091;$y&amp;#093;}{$key1, $key2, @morekeys};
&lt;/PRE&gt;
&lt;HR&gt;
</field>
</data>
</node>
