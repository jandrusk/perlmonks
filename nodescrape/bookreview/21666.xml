<?xml version="1.0" encoding="windows-1252"?>
<node id="21666" title="Object Oriented Perl" created="2000-07-08 20:19:28" updated="2005-08-13 18:23:26">
<type id="31670">
bookreview</type>
<author id="20906">
splinky</author>
<data>
<field name="doctext">
&lt;em&gt;&lt;a href=http://www.manning.com/conway&gt;
Object Oriented Perl&lt;/a&gt;&lt;/em&gt; by Damian Conway&lt;br&gt;
ISBN 1884777791&lt;br&gt;
Copyright 1999 &lt;a href=http://www.manning.com&gt;
Manning Publications Co.&lt;/a&gt;
&lt;p&gt;
&lt;strong&gt;Capsule Review&lt;/strong&gt;
&lt;p&gt;
Excellent book.  5 stars out of 5.
&lt;p&gt;
Who should be interested in this book?
&lt;ul&gt;
&lt;li&gt;Anyone interested in object oriented programming in Perl&lt;/li&gt;
&lt;li&gt;Anyone who has a good grip on Perl and is looking to
expand their knowledge&lt;/li&gt;
&lt;li&gt;Anyone who is interested in Perl's Tie mechanism&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;strong&gt;Full Review&lt;/strong&gt;
&lt;p&gt;
I picked up &lt;em&gt;Object Oriented Perl&lt;/em&gt; at the 1999 Perl Conference and
immediately fell in love with it.
&lt;p&gt;
Damian Conway, a lecturer at Monash University in Australia, brought all
his formidable teaching skills to bear when writing this book.  It's
probably the most entertaining and readable technical book I've ever come across.
&lt;p&gt;
And, better yet, the technical content is excellent.  The book starts with
a gentle introduction to object oriented programming in general, and
quickly progresses to objects in Perl, where you learn that any Perl 
datatype can be used as an object.  Even regular expressions,
filehandles, or entire typeglobs!  Inheritance and polymorphism are then
explained with a clarity that should be the goal of OOP authors everywhere..
&lt;p&gt;
After covering the basics, Dr. Conway progresses into more advanced
subjects, such as operator overloading, the tie mechanism, multiple
dispatch, and object persistence.  Given that my exposure to OOP had been
minimal up to buying this book, I really expected to get lost in the more
advanced material, but the presentation was so clear and the examples so
good that I hardly even had to reread any of the advanced material.  The
information just made sense.
&lt;p&gt;
Finally, as icing on the cake, Dr. Conway includes an appendix titled,
"What you may know instead".  In these pages, readers familiar with Java,
C++, Smalltalk, or Eiffel will find a conversion chart of sorts to
translate their terms into Perl terms.
&lt;p&gt;
Of course, the real test of any technical book is the quality
of the example code.  I am happy to say that the examples in
Object Oriented Perl are as clear and correct as you could
hope for in any book.  And, to his great credit, Dr. Conway
broke with tradition by providing examples that DON'T deal 
with Person, Employee, and Manager classes.  Dr. Conway
chose instead to use an example near and dear to the hearts
of all civilized people -- organizing his CD collection.
&lt;p&gt;
In summary, if you're already comfortable with Perl and are looking to
stretch your wings, you should pick up a copy of &lt;em&gt;Object Oriented Perl&lt;/em&gt;.
Excellent information presented by a natural teacher.
&lt;p&gt;
&lt;a href="/index.pl?node=splinky&amp;lastnode_id=1072"&gt;*Woof*&lt;/a&gt;
</field>
<field name="itemdescription">
</field>
<field name="usercomment">
</field>
<field name="identifier">
1884777791</field>
</data>
</node>
