<?xml version="1.0" encoding="windows-1252"?>
<node id="32681" title="Effective Perl Programming" created="2000-09-15 15:22:45" updated="2005-08-10 16:41:01">
<type id="31670">
bookreview</type>
<author id="23317">
arturo</author>
<data>
<field name="doctext">
&lt;p&gt;Authors: Joseph N. Hall and Randal L. Schwartz
&lt;br&gt;Paper: 288pp.
&lt;br&gt;Published by : Addison-Wesley

&lt;p style="font-weight: bold'&gt;Note : this review has been modified from its original form,
not in terms of content but to remove redundancies.&lt;/p&gt;

&lt;h5&gt;Summary&lt;/h5&gt;
This book seems designed for the beginning to intermediate Perl programmer 
who wants to expand his or her bag of Perl tricks.  The book is well named, 
once you master the material inside you will be an effective Perl hacker.
&lt;p&gt;My favorite Perl book &lt;i&gt;not&lt;/i&gt; from O'Reilly =)
&lt;h5&gt;The good&lt;/h5&gt;
The authors keep their focus on getting the job done, but they also exemplify
the 'TMTOWTDI' aspect of Perl culture.  It's not a telephone-directory
sized book, but it packs in enough useful knowledge to make you a better hacker.
Hall's "PEGS" system, in particular, is particularly helpful in explaining how data structures work in Perl,
and I learned more from this book about constructing complex data structures in Perl than I did from any other.
&lt;h5&gt;The bad&lt;/h5&gt;
Just to have something to say here, don't get this book if you're looking for a 
Perl reference (that ain't what it's about!) Just to be &lt;i&gt;absoutely clear&lt;/i&gt; I can't think of anything bad about this book =)
&lt;h5&gt;Structure of the Book&lt;/h5&gt;
Apart from chapters on wide-ranging topics (e.g. regexes), each chapter is subdivided into 'tips', each of which focuses on the use of a function or group of related functions.  For example, one tip concerns
the &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;grep&lt;/code&gt; functions, what they do, and when it's appropriate to use one rather than the other.  
The chapter on regular expressions has a nice balance of the theory behind DFAs and NFAs (different kind of regular expression engines).  The structure is thus somewhat like
that of the [Perl Cookbook] but the individual tips focus more on giving you general knowledge that will allow you to solve a range of problems
rather than (as the Cookbook does) showing you how to solve particular problems. (that said, ++ to 'the Ram' as well =)
&lt;h5&gt;Who Should Buy It&lt;/h5&gt;
Preferably, you would go to a brick-and-mortar establishment and flip through a copy to make the decision to 
buy this book or not, but for those of you too lazy to do that
or who just want to see what my take is on it, here goes: this book is somewhat more advanced than
[Learning Perl], but also intentionally less advanced than [Advanced Perl Programming].  This book would be
appropriate for those who have a good Perl reference handy, 
but a little difficulty in putting the information contained therein
into practice.
</field>
<field name="itemdescription">
see the title ...</field>
<field name="usercomment">
A useful book for the beginner-intermediate Perl hacker</field>
<field name="identifier">
0201419750</field>
</data>
</node>
