<?xml version="1.0" encoding="windows-1252"?>
<node id="213023" title="XML and Perl" created="2002-11-14 16:30:02" updated="2005-08-10 15:49:08">
<type id="31670">
bookreview</type>
<author id="57126">
hsmyers</author>
<data>
<field name="doctext">
&lt;h2&gt;Summation&lt;/h2&gt;
&lt;b&gt;&lt;em&gt;XML and Perl&lt;/em&gt;&lt;/b&gt; by Mark Riehl and Ilya Sterin from New Riders, is the second book to deal with this combination. The first, &lt;b&gt;&lt;em&gt;Perl &amp;amp; XML&lt;/em&gt;&lt;/b&gt; by Erik T. Ray and Jason McIntosh from O'Reilly predates it by a little less than 6 months. Not a stampede by any means, but enough of a buzz to indicate an interest. The latest addition weighs in at 376 pages of reasonably dense text. Of the two books, &lt;b&gt;&lt;em&gt;XML and Perl&lt;/em&gt;&lt;/b&gt; is both longer (by 174 pages) and more detailed. The more cautious reader will buy both, the cheaper will buy just this one. As always, there is no substitute for hands-on, under-the-hood experience, but even so, this book will be a useful part of the boot-strap process for those coming up to speed in this area.
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Recommended.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Audience: intermediate to advanced.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The Details&lt;/h2&gt;
With 5 sections and 10 chapters, &lt;b&gt;&lt;em&gt;XML and Perl&lt;/em&gt;&lt;/b&gt; is the most detailed survey of the field yet published. Is it detailed enough? Hard to say, for some probably yes, for the rest probably not. It all depends on needs and expectations. This isn't a silver platter, but it is a pretty good brunch. Despite the two appendices to the contrary, this book isn't an introduction. The authors clearly state: &lt;blockquote&gt;&amp;ldquo;This book is not intended to be your first book on programming, and it is not going to teach you Perl or XML. We assume that the reader has a basic programming knowledge of Perl and an understanding of XML. Our task is to show you how to use these two technologies together.
&amp;rdquo;&lt;/blockquote&gt;
&lt;p&gt;Perhaps someone a bit more picky than I would have suggested that if the authors were serious about the 'basic knowledge and understanding' thing then they should have skipped chapter 1---since it is a brief survey of both Perl and XML. I just look at it as being thorough! That said, the real meat doesn't get served until chapter 2. Even better, it starts at the right end of the table! With what amounts to something on par with 'C's '&lt;tt&gt;hello world\n&lt;/tt&gt;', they begin with a simple model and use &lt;tt&gt;XML::Simple&lt;/tt&gt; and &lt;tt&gt;Data::Dumper&lt;/tt&gt; to make a solid but still approachable beginning. One of my pet peeves in the world of 'how-tos' and other surveys is that they mostly don't make a reasonable assumption about where to start. Either they begin in the deep end by handing you an anchor and shouting 'SWIM!' or they bore you to death with endless beginner material. &lt;b&gt;&lt;em&gt;XML and Perl&lt;/em&gt;&lt;/b&gt; makes a pleasant exception to that trend.&lt;/p&gt;
&lt;p&gt;Chapter 3 introduces the continental divide of XML, &lt;b&gt;DOM&lt;/b&gt; versus &lt;b&gt;SAX&lt;/b&gt;. Or more accurately the Document Object Model versus the Simple API for XML. Access by structure or access by event, both have their advantages and disadvantages, as discussed by the authors. Since this is the kind of material that leads rapidly to internecine programmer warfare, they wisely avoid siding with one or the other, making for an even handed introduction to both. One shouldn't take the fact that most of the chapter is about SAX and SAX2 based approaches as an indicator---chapter 4 is devoted to tree-based modules.&lt;/p&gt;
&lt;p&gt;Section III goes into some detail on generating XML (useful, having shown you in section II what to do with it) and Section IV is the typical (but still valuable) advanced stuff section. A kind of what's next view of the more complex XML based concepts. I don't mean to blow off the second half of the book---rather think of it as avoiding the 'spoiler' problem inherent in a review! Besides if I'm tired of writing it follows that you should be tired of reading...&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;Other&lt;/h2&gt;
&lt;h3&gt;Modules Mentioned&lt;sup&gt;&lt;small&gt;1&lt;/small&gt;&lt;/sup&gt;&lt;/h3&gt;
&lt;blockquote&gt;&lt;tt&gt;
	&lt;ul&gt;
		&lt;li&gt;Data::Dumper&lt;/li&gt;
		&lt;li&gt;DBD::CSV&lt;/li&gt;
		&lt;li&gt;DBD::MySQL&lt;/li&gt;
		&lt;li&gt;DBI&lt;/li&gt;
		&lt;li&gt;Frontier::RPC&lt;/li&gt;
		&lt;li&gt;SOAP::Lite&lt;/li&gt;
		&lt;li&gt;XML::DBMS&gt;&lt;/li&gt;
		&lt;li&gt;XML::DOM&lt;/li&gt;
		&lt;li&gt;XML::Generator::DBI&lt;/li&gt;
		&lt;li&gt;XML::Handler::YAWriter&lt;/li&gt;
		&lt;li&gt;XML::LibXML&lt;/li&gt;
		&lt;li&gt;XML::LibXSLT&lt;/li&gt;
		&lt;li&gt;XML::NameSpaceSupport&lt;/li&gt;
		&lt;li&gt;XML::Parser::PerlSAX&lt;/li&gt;
		&lt;li&gt;XML::Parser&lt;/li&gt;
		&lt;li&gt;XML::Sablotron&gt;&lt;/li&gt;
		&lt;li&gt;XML::SAX::Expat&lt;/li&gt;
		&lt;li&gt;XML::SAX::PurePerl&lt;/li&gt;
		&lt;li&gt;XML::SAX&lt;/li&gt;
		&lt;li&gt;XML::SAXDriver::CSV&lt;/li&gt;
		&lt;li&gt;XML::SAXDriver::Excel&lt;/li&gt;
		&lt;li&gt;XML::Simple&lt;/li&gt;
		&lt;li&gt;XML::Twig&lt;/li&gt;
		&lt;li&gt;XML::Writer&lt;/li&gt;
		&lt;li&gt;XML::Xerces&lt;/li&gt;
		&lt;li&gt;XML::Xpath&lt;/li&gt;
	&lt;/ul&gt;
&lt;/tt&gt;&lt;/blockquote&gt;
&lt;h3&gt;Table of Contents&lt;/h3&gt;
&lt;ol style="list-style-type:upper-roman"&gt;
&lt;li&gt;The Foundation&lt;/li&gt;
  &lt;ol&gt;
	&lt;li&gt;Basics of XML Processing in Perl&lt;/li&gt;
	&lt;li&gt;Now Let's Start Digging&lt;/li&gt;
  &lt;/ol&gt;
&lt;li&gt;Parsing XML Documents Using Perl&lt;/li&gt;
  &lt;ol start="3"&gt;
    &lt;li&gt;Event-Driven Parser Modules&lt;/li&gt;
	&lt;li&gt;Tree-Based Parser Modules&lt;/li&gt;
  &lt;/ol&gt;
&lt;li&gt;Generating XML Documents Using Perl Modules&lt;/li&gt;
  &lt;ol start="5"&gt;
    &lt;li&gt;Generating XML Documents from Text Files&lt;/li&gt;
	&lt;li&gt;Generating XML Documents from Databases&lt;/li&gt;
	&lt;li&gt;Transforming Miscellaneous Data Formats to XML (and Vice-Versa)&lt;/li&gt;
  &lt;/ol&gt;
&lt;li&gt;Advanced XML and Perl&lt;/li&gt;
  &lt;ol start="8"&gt;
    &lt;li&gt;XML Transformation and Filtering&lt;/li&gt;
	&lt;li&gt;AxKit&lt;/li&gt;
	&lt;li&gt;Perl and XML Web Services&lt;/li&gt;
  &lt;/ol&gt;
&lt;li&gt;Appendices&lt;/li&gt;
  &lt;ol style="list-style-type:upper-alpha"&gt;
    &lt;li&gt;What is XML?&lt;/li&gt;
	&lt;li&gt;Perl Essentials&lt;/li&gt;
  &lt;/ol&gt;
&lt;/ol&gt;
&lt;h3&gt;BibTeX Data&lt;/h3&gt;
&lt;pre&gt;
@book{Riehl+Sterin:1,
  author={Mark Riehl and Ilya Sterin},
  title={XML and Perl},
  publisher={New Riders},
  address={Indianapolis, IN},
  edition={1st},
  year={2002},
  ISBN={0735712891},
}
&lt;/pre&gt;
&lt;h3&gt;Links&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.perlxml.net"&gt;www.perlxml.net&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.newriders.com"&gt;www.newriders.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;www.xmlproj.com/xmlperl/errata.html&lt;sup&gt;&lt;small&gt;2&lt;/small&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;sup&gt;&lt;small&gt;1&lt;/small&gt;&lt;/sup&gt;Hardly exhaustive!&lt;br/&gt;
&lt;sup&gt;&lt;small&gt;2&lt;/small&gt;&lt;/sup&gt;At the time of this review (2002.11.11.13:50) this link was broken. &lt;i&gt;They don't call it errata for nothing!&lt;/i&gt;&lt;br/&gt;
</field>
<field name="itemdescription">
Intermediate introduction to XML using Perl modules.</field>
<field name="usercomment">
Solid new entry in the field.</field>
<field name="identifier">
0735712891</field>
</data>
</node>
