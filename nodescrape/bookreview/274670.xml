<?xml version="1.0" encoding="windows-1252"?>
<node id="274670" title="Learning Perl Objects, References and Modules" created="2003-07-15 23:20:53" updated="2005-08-10 16:17:20">
<type id="31670">
bookreview</type>
<author id="21156">
TStanley</author>
<data>
<field name="doctext">
Table of Contents&lt;BR&gt;
&lt;BR&gt;
&lt;B&gt;Foreword&lt;/B&gt;&lt;BR&gt;
&lt;BR&gt;
&lt;B&gt;Preface&lt;/B&gt;&lt;BR&gt;
&lt;OL&gt;
&lt;LI&gt;Introduction&lt;/LI&gt;
&lt;LI&gt;Building Larger Programs&lt;/LI&gt;
&lt;LI&gt;Introduction to References&lt;/LI&gt;
&lt;LI&gt;References and Scoping&lt;/LI&gt;
&lt;LI&gt;Manipulating Complex Data Structures&lt;/LI&gt;
&lt;LI&gt;Subroutine References&lt;/LI&gt;
&lt;LI&gt;Practical Reference Tricks&lt;/LI&gt;
&lt;LI&gt;Introduction to Objects&lt;/LI&gt;
&lt;LI&gt;Objects with Data&lt;/LI&gt;
&lt;LI&gt;Object Destruction&lt;/LI&gt;
&lt;LI&gt;Some Advanced Object Topics&lt;/LI&gt;
&lt;LI&gt;Using Modules&lt;/LI&gt;
&lt;LI&gt;Writing a Distribution&lt;/LI&gt;
&lt;LI&gt;Essential Testing&lt;/LI&gt;
&lt;LI&gt;Contributing to CPAN&lt;/LI&gt;
&lt;/OL&gt;
&lt;B&gt;Appendix.Answers to Exercises&lt;/B&gt;&lt;BR&gt;
&lt;B&gt;Index&lt;/B&gt;&lt;BR&gt;
&lt;BR&gt;
Once again [merlyn|Randal] and Tom Phoenix have teamed together to bring us the sequel to [Learning Perl], and manage to keep the material both interesting and entertaining as well. Overall this book is much lighter than one would expect (205 pages), which is slightly smaller than Learning Perl. Also provided at the end of each chapter are exercises (with the answers at the end of the book), to help reinforce what the chapter covered.&lt;BR&gt;
&lt;BR&gt;
Chapter One is a brief intro into the book, going over what the average person who reads the book should have an understanding of, as well as some notes for those who will be using the book to teach a class with.&lt;BR&gt;
&lt;BR&gt;
Chapter Two gets into the meat of the book, which how to write programs that are between 100 and 10,000 lines of code. Here, they cover items such as using &lt;I&gt;do&lt;/I&gt; and &lt;I&gt;require&lt;/I&gt;, packages and lexicals, and scope.&lt;BR&gt;
&lt;BR&gt;
Chapters Three through Seven take on references and show how to create references and then dereference them to get at the data that they represent. Scoping, manipulating complex data structures, reference counting, creating anonymous arrays and hashes, and autovivification are also covered quite thoroughly.&lt;BR&gt;
&lt;BR&gt;
Chapters Eight and Nine were taken word for word from &lt;I&gt;perlboot&lt;/I&gt;, which is ok, since the material is still quite relevant (and saved [merlyn] a bunch of time since he wrote perlboot). However, they did expand the material in perlboot, by covering faster methods of accessing and writing instance data within the object, as well as restricting methods to a class or an instance.&lt;BR&gt;
&lt;BR&gt;
Chapters Ten and Eleven go into object destruction and more advanced topics on objects. Mention is made of the Weaken module, as well as using AUTOLOAD to create accessors. Multiple inheritance and referencing file handles is also covered in these chapters.&lt;BR&gt;
&lt;BR&gt;
Chapter Twelve deals with using modules, such as [cpan://File::Basename], [cpan://File::Spec], and [cpan://Math::BigInt]. Randal uses these modules to show the differences between a function-oriented module, such as File::Basename, and object-oriented ones like File::Spec and Math::BigInt. He also goes into detail on using the Exporter module and creating custom import routines.&lt;BR&gt;
&lt;BR&gt;
Chapters Thirteen through Fifteen cover what is needed to create a distribution that will eventually find its way to the CPAN. Using h2xs, writing pod, alternate install locations, writing tests using [cpan://Test::Simple] and [cpan://Test::More], and how to prepare, upload, and announce your distribution are covered.&lt;BR&gt;
&lt;BR&gt;
For myself, I found the last three chapters to be very informative, and exactly what I was looking for when I wrote [id://80629|this node] two years ago. This book answered the few remaining question that I had not managed to answer by trial and error.&lt;BR&gt;
&lt;BR&gt;
Overall, this book was extremely well written, and I encourage all who have read Learning Perl to pick this book up, and add it to their library as a very useful reference guide and learning tool.&lt;BR&gt;
</field>
<field name="itemdescription">
Picks up where [Learning Perl] left off</field>
<field name="usercomment">
A worthy addition to any Perl programmers's library</field>
<field name="identifier">
0596004788</field>
</data>
</node>
