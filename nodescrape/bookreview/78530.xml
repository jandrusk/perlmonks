<?xml version="1.0" encoding="windows-1252"?>
<node id="78530" title="Programmation avancée en Perl" created="2001-05-07 15:23:02" updated="2005-08-12 05:33:28">
<type id="31670">
bookreview</type>
<author id="53200">
arhuman</author>
<data>
<field name="doctext">
&lt;!-- &amp;eacute;dit&amp;eacute; par Chipmunk: fix&amp;eacute; les balises CODE --&gt;

Programmation avancée en Perl&lt;br&gt;
Auteur : Sriram Srinivasan (Traduction Jean Zundel)&lt;br&gt;
Synopsys :&lt;br&gt;
ISBN: 2-84177-039-7&lt;br&gt;
&lt;br&gt;
As suggested by several monks I've produced a review in french of the french translation of 'Advanced Perl Programming'.&lt;br&gt;
Some people asked for an english's translation of this review, you'll find it below as a comment.&lt;br&gt;
&lt;br&gt;
Programmation avancée en Perl&lt;br&gt;
&lt;br&gt;
INTRODUCTION&lt;br&gt;
&lt;br&gt;
J'ai un avis assez mitigé au sujet de ce livre.&lt;br&gt;
Je recherchais un livre sur les structures internes de Perl, &lt;br&gt;
qui irait un peu plus loin que le [id://36169|Camel] et qui serait un peu plus abordable que les sources de Perl.&lt;br&gt;
Ce livre a partiellement répondu à mes attentes.&lt;br&gt;
J'ai trouvé un livre intéressant à plus d'un titre, d'un excellent niveau technique mais certains aspects (que je détaillerai plus bas) amoindrissent sensiblement l'attrait de ce livre.&lt;br&gt;
&lt;br&gt;
PRESENTATION&lt;br&gt;
&lt;br&gt;
Programmation avancée en Perl comporte 412 pages.&lt;br&gt;
Il se décompose en  20 chapitres :&lt;br&gt;
&lt;OL&gt;
&lt;LI&gt;Références de données et stockage anonyme
&lt;LI&gt;Implémentation de structures de données complexes
&lt;LI&gt;Typeglobs et table de symboles
&lt;LI&gt;Références de sous-programmes et fermetures
&lt;LI&gt;Eval
&lt;LI&gt;Modules
&lt;LI&gt;Programmation orientée objet
&lt;LI&gt;Orientation objet : les étapes suivantes
&lt;LI&gt;Tie
&lt;LI&gt;Persistence
&lt;LI&gt;Implémentation de la persistence objet
&lt;LI&gt;Réseaux et sockets
&lt;LI&gt;Réseaux  : implémentation des RPC
&lt;LI&gt;Interfaces utilisateur graphique avec Tk
&lt;LI&gt;Exemple d'interface graphique : Tetris
&lt;LI&gt;Exemple d'interface graphique : perlman
&lt;LI&gt;Génération de code par modèle
&lt;LI&gt;Extension de Perl : un premier cours
&lt;LI&gt;Intégration de Perl : la solution de facilité
&lt;LI&gt;Fonctionnement interne de Perl
&lt;/OL&gt;&lt;br&gt;
Et 2 annexes :&lt;br&gt;
&lt;ul&gt;
&lt;li&gt; A. Référence des widgets
&lt;li&gt; B. Résumé de la syntaxe
&lt;/ul&gt;
ANALYSE&lt;br&gt;
&lt;br&gt;
Ce découpage, dont la logique m'échappe, donne au livre un petit coté 'décousu'.&lt;br&gt;
Les chapitres sont, à mon avis, assez inégaux, certains sont excellents, d'autres le sont moins.&lt;br&gt;
Certains domaines sont TRES (trop?) détaillés, comme par exemple le chapitre 5 entier sur Eval, ou les 3 chapitres sur l'interface graphique.&lt;br&gt;
&lt;br&gt;
Plus que l'ordre de présentation des sujets abordés,
c'est leur intérêt(variable) et les raisons de leur choix qui me pose problème.&lt;br&gt;
L'auteur a beau justifier ses choix en disant que ces domaines ont été choisis car représentatifs de ce qu'un programmeur DEVRAIT connaître,&lt;br&gt;
le choix me semble arbitraire et pour le moins discutable.&lt;br&gt;
(Pas de chapitre sur la sécurité ? Sur le tri ? L'obfuscation ?...)&lt;br&gt;
&lt;br&gt;
En fait outre ce problème très subjectif, je reproche 4 choses a ce livre :&lt;br&gt;
&lt;ol&gt;
&lt;li&gt; Il n'est pas écrit par un programmeur Perl mais par quelqun qui connaît bien Perl.&lt;br&gt;
La nuance est de taille, je n'ai pas retrouvé de passion dans ce livre, avec au bout du compte un livre qui n'arrive pas a captiver...&lt;br&gt;
(Par opposition au Camel qui reste passionnant de bout en bout...)&lt;br&gt;&lt;br&gt;
&lt;li&gt;Plus embétant, certaines fautes de styles me semblent préjudiciables :&lt;br&gt;&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;Usage d'idiomes C/C++ a la place des idiomes Perl&lt;br&gt;
Comme par example l'utilisation des boucles 
&lt;code&gt;$lng2=@$rtableau2;
for($i;$i&lt;$$lng2;$i++) {...&lt;/code&gt;
ala place des boucles &lt;code&gt;foreach&lt;/code&gt;
(page 9)
&lt;li&gt;Pas de use strict (même pas d'incitation a l'utiliser)&lt;br&gt;et des constructions douteuse comme &lt;code&gt;$x{toto}&lt;/code&gt; au lieu &lt;code&gt;$x{'toto'}&lt;/code&gt; (page 44)&lt;br&gt;
&lt;li&gt;Pas de déclaration des variables locales (page 33,58,231...)&lt;br&gt;
&lt;li&gt;'Références douces' pas déconseillées comme [OeufMayo] me l'a justement fait remarquer&lt;br&gt; (lire les articles de [Dominus] sur ce sujet...)&lt;br&gt;

&lt;/ul&gt;&lt;br&gt;
&lt;li&gt;Un livre qui commence à dater (1998!)&lt;br&gt;
  Avec certaines informations sur les threads ou les refs incompletes par exemple...&lt;br&gt;&lt;br&gt;
&lt;li&gt;Une tendance de l'auteur à plus présenter ses modules que les modules
'standards'.&lt;br&gt;
&lt;/ol&gt;
&lt;br&gt;
Mais tout n'est pas a jeter dans ce livre.&lt;br&gt;
De positif, on retiendra :&lt;br&gt;
&lt;ul&gt;
&lt;li&gt; Le style est clair et efficace.&lt;br&gt;
&lt;li&gt; La comparaison entre Perl et d'autres langages (C++,Java,Tcl,Python) à la fin de chaque chapitre est intéressante et objective.&lt;br&gt;
&lt;li&gt; Le chapitre 20 qui répondra à toutes les questions que vous pourriez vous poser sur la structure interne de Perl&lt;br&gt;
(pour peu que vous ayez quelques bases en C).
&lt;li&gt; Les références vers d'autres sources d'informations en fin de chapitre, toujours utiles.&lt;br&gt;
&lt;li&gt; Le chapitre 3, sur les typeglobs et la table de symboles TRES enrichissant tout en restant clair. &lt;br&gt;
(Pour pouvoir, par exemple, comprendre pourquoi &lt;code&gt;my&lt;/code&gt; est plus rapide que &lt;code&gt;local&lt;/code&gt;)
&lt;li&gt; Le traitement de certains sujet généralement peu abordés et intéressants : La sérialization, les DIFFERENTS usages de &lt;code&gt;tie&lt;/code&gt;.&lt;br&gt;
&lt;li&gt; L'excellente qualité générale de l'ouvrage :&lt;br&gt;
Avec trés peu de typos et d'erreurs d'imprimerie (juste un renvoi a une note page suivante à la page 17),&lt;br&gt;
et une traduction excellente, c'est a dire qui se laisse oublier (je n'ai trouvé qu'une erreur de traduction dans les codes sources (page 271))&lt;br&gt;
&lt;/ul&gt;
&lt;br&gt;
CONCLUSION&lt;br&gt;
&lt;br&gt;
Ce livre reste un bon livre sur Perl, Moins passionant que le [id://36169|CamelBook], moins pratique que le [id://21664|CookBook], il
est quand même d'un excellent niveau, tout en restant clair et facile a lire.&lt;br&gt;
Toutefois je ne peux m'empécher d'imaginer ce que ce livre aurait été s'il avait été écrit par un PASSIONNE de Perl...&lt;br&gt;
Et de rêver...&lt;br&gt;
(A quand un livre ecrit par plusieurs Saints du monastère... ;-)&lt;br&gt;

&lt;p&gt;&lt;small&gt;&lt;b&gt;&amp;Eacute;ditent&lt;/b&gt; chipmunk 2001-05-07&lt;/small&gt;&lt;/p&gt;</field>
<field name="itemdescription">
French edition of : 'Advanced programming in Perl'</field>
<field name="usercomment">
</field>
<field name="identifier">
</field>
</data>
</node>
