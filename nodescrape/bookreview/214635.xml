<?xml version="1.0" encoding="windows-1252"?>
<node id="214635" title="Writing Perl Modules for CPAN" created="2002-11-20 16:41:09" updated="2005-08-10 15:35:50">
<type id="31670">
bookreview</type>
<author id="57126">
hsmyers</author>
<data>
<field name="doctext">
&lt;h2&gt;Summation&lt;/h2&gt;
&lt;b&gt;&lt;em&gt;Writing Perl Modules for CPAN&lt;/em&gt;&lt;/b&gt; by Sam Tregar from APress, is a meta-perl book. Not so much a book about writing perl code, but a book about the process of writing perl code. More importantly, a book about publishing perl code---and best of all written by someone who has &amp;ldquo;&lt;em&gt;been there, done that!&lt;/em&gt;&amp;rdquo; If you have ever thought to write the next great module this book represents the required minimum. If you did nothing else but use this as a check list you would be way ahead of the game.
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Recommended.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Audience: intermediate to advanced.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The Details&lt;/h2&gt;&lt;p&gt;My first reaction on seeing a reference to this book was an instant order without regard to content. Being a biblioholic---this is an admittedly normal reaction, but I was also reacting to the notion that &amp;ldquo;&lt;em&gt;it's about time! Someone must have written all of this stuff down somewhere, this must be it!!&lt;/em&gt;&amp;rdquo; As anyone who has survived the CPAN process can tell you, you need all of the help you can get. &lt;em&gt;Writing Perl Modules for CPAN&lt;/em&gt; has just become part of that &amp;ldquo;help&amp;rdquo;---save yourself some time, buy it and use it as a starting point. You will still need help, some from CPAN, some from various lists, some from here at PM, that won't change---you'll just need less!&lt;/p&gt;
&lt;p&gt;The book divides rather neatly into two parts; CPAN and module mechanics are the subject of the first half, inspiration and advanced topics, the subject of the second. The first six break down pretty much like this:
&lt;ol&gt;
&lt;li&gt;&lt;b&gt;CPAN&lt;/b&gt;&lt;/li&gt;&lt;p&gt;This chapter is a combination of history and physical (all right!--would you belive virtual?) layout. We constantly refer to CPAN, but now you can actually talk about it accurately! Here you learn about a number of useful things not all of which are that obvious. Take &lt;b&gt;DSLIP&lt;/b&gt; for instance. DSLIP stands for &lt;b&gt;D&lt;/b&gt;evelopment State, &lt;b&gt;S&lt;/b&gt;upport Level, &lt;b&gt;L&lt;/b&gt;anguage Used, &lt;b&gt;I&lt;/b&gt;nterface Style and &lt;b&gt;P&lt;/b&gt;ublic License. Every module has one! This is sort of like a de-coder ring you get in a box of Cracker-Jacks (do they still do that?) Can't find what (or who) you are looking for? Consider this:
&lt;blockquote&gt;
Upon entering the Modules By Author view, you see a directory listing with what appears to be a directory for every author on CPAN. This is misleading---the list you're seeding is a relic of the past. When CPAN started every author received an entry in this directory, but there's a limit to how many subdirectories a single directory can efficiently contain. These days there are far too many authors on CPAN to house them all in one directory, so CPAN switched to a multilevel hierarchy for storing author directories, which is used today.
&lt;/blockquote&gt;Knowing this probably won't get you an 'A' on Monday's test, but it sure beats wandering around looking for breadcrumbs!&lt;/p&gt;&lt;p&gt;
The material on installing CPAN Modules should probably be transcribed directly into PM's beginner's tutorial. It covers both of the two major 'assisted' methods, CPAN.pm and ppm as well as a blow-by-blow description of doing it the 'hard way'. Want to know about 'nmake'? Look here. 
&lt;/p&gt;
&lt;li&gt;&lt;b&gt;Perl Module Basics&lt;/b&gt;&lt;/li&gt;&lt;p&gt;This chapter on modules will start you from pretty much zero on the subject of modules. While I would assume that the intended audience of the book pretty much understands the concept, it never hurts to review. For that matter a clear picture of the basics is always a good thing&amp;trade; For instance, even though it has been mentioned in other books more than once, here is a clear explanation of &lt;code&gt;use&lt;/code&gt;:
&lt;blockquote&gt;
Since &lt;code&gt;use&lt;/code&gt; is just a way of doing a &lt;code&gt;require&lt;/code&gt; operation and an &lt;code&gt;import&lt;/code&gt; operation at compile time, &lt;code&gt;use&lt;/code&gt; can be defined in terms of &lt;code&gt;require&lt;/code&gt; using &lt;code&gt;BEGIN&lt;/code&gt;:
&lt;blockquote&gt;
&lt;code&gt;BEGIN { require File::Find; import File::Find; }&lt;/code&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;And frankly, the more people who understand &amp;ldquo;How Perl Finds Modules&amp;rdquo; the fewer answers will be needed on the support lists. Although the exigencies of ISPs wary of modules are enough to cause us all heartburn, after this portion of the chapter you should be able to continue without problem.
&lt;/p&gt;&lt;p&gt;
After getting some of this meta-module material out of the way this chapter really takes off. In the space of some 33 pages, the author takes you from the first use of the word &lt;code&gt;package&lt;/code&gt; through the ins and outs of tied-overloaded methods! Quite a journey no matter what the route!
&lt;/p&gt;
&lt;li&gt;&lt;b&gt;Module Design and Implementation&lt;/b&gt;&lt;/li&gt;
&lt;p&gt;
As you might expect from any chapter with the word 'Design' in the title, this chapter contains a good deal of what might be more generically called philosophy. Given that we are all victim to a vast number of things built without regard to any 'design', philosophical or not, any material directed to folks about to build things that covers design can't help but be a good thing. Besides how can you not like a chapter that has a section entitled &amp;ldquo;Check Your Slack&amp;rdquo;? Seriously though, the points raised and the methods suggested in this chapter are really quite solid. If you aren't doing it this way, make sure that you have a good reason! As a taste, here are the section titles:
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Check Your Slack&lt;/li&gt;
&lt;li&gt;Size Matters&lt;/li&gt;
&lt;li&gt;Document First&lt;/li&gt;
&lt;li&gt;Interface Design&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
Let me rant^H^H^Have for a minute about that last section. Here is another quote [italic emphasis mine...]:&lt;blockquote&gt;Design a good interface, and everything else is negotiable. If your first pass at the implementation is flawed, no big deal; you improve it, and your &lt;em&gt;users&lt;/em&gt; get a painless upgrade. Design a bad interface, and your module is doomed to uselessness. It doesn't matter how fantastic your implementation is---no one can figure out how to use it and no one will.
&lt;/blockquote&gt;
Yes indeedy, ladies and gentlemen, everything is an interface and we are all users! How many times have we all been burned by a library or a module or an API or--- well fill in the blank, you know what I mean. To see well written material on this problem does me a world of good. And covers some of the best advice in the book as well!
&lt;/p&gt;
&lt;li&gt;&lt;b&gt;CPAN Module Distributions&lt;/b&gt;&lt;/li&gt;
&lt;p&gt;
I would hope that most of the readers have installed a module before---doesn't matter, the author takes you through the process step by step with an real example from CPAN. It won't hurt you to read about it no matter what your level of experience is. He does this to make the point that the process is actually a minor miracle---it works, it works pretty much regardless of platform. No it is not 100%---little is! But for the most part, it works! This chapter then proceeds to explain just why this is possible. Again with the section titles:
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Module Installation&lt;/li&gt;
&lt;li&gt;Always Begin with h2xs&lt;/li&gt;
&lt;li&gt;Exploring the Distribution&lt;/li&gt;
&lt;li&gt;Portability&lt;/li&gt;
&lt;li&gt;Choosing a License&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/p&gt;
&lt;p&gt;
Regarding the second section, here is a quote within a quote:
&lt;blockquote&gt;
Always begin with h2xs.&lt;br&gt;
Always begin with h2xs!&lt;br&gt;
ALWAYS BEGIN WITH H2XS!&lt;br&gt;
&lt;/blockquote&gt;
The original is from the documentation that comes with &lt;code&gt;ExtUtils::MakeMaker&lt;/code&gt;, but you get the message! Better than that, he then explains why this is advice worth repeating.
&lt;/p&gt;
&lt;li&gt;&lt;b&gt;Submitting Your Module to CPAN&lt;/b&gt;&lt;/li&gt;&lt;p&gt;&amp;ldquo;&lt;i&gt;Ok--- fine! You've written the damn thing, now what?&lt;/i&gt;&amp;rdquo; This and similar questions are answered here.&lt;/p&gt;
&lt;li&gt;&lt;b&gt;Module Maintenance&lt;/b&gt;&lt;/li&gt;&lt;p&gt;---Can best be described as the point where the real fun begins.&lt;/p&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;hr&gt;&lt;h2&gt;Other&lt;/h2&gt;

&lt;h3&gt;Table of Contents&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;CPAN&lt;/li&gt; 
&lt;li&gt;Perl Module Basics&lt;/li&gt;
&lt;li&gt;Module Design and Implementation&lt;/li&gt;
&lt;li&gt;CPAN Module Distributions&lt;/li&gt;
&lt;li&gt;Submitting Your Module to CPAN&lt;/li&gt;
&lt;li&gt;Module Maintenance&lt;/li&gt;
&lt;li&gt;Great CPAN Modules&lt;/li&gt;
&lt;li&gt;Programming Perl in C&lt;/li&gt;
&lt;li&gt;Writing C Modules with XS&lt;/li&gt;
&lt;li&gt;Writing C Modules with Inline::C&lt;/li&gt;
&lt;li&gt;CGI Application Modules for CPAN&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;BibTeX Data&lt;/h3&gt;
&lt;pre&gt;
&lt;code&gt;
@BOOK{Tregar:,
  author       = {Sam Tregar},
  title        = {Writing Perl Modules for CPAN},
  publisher    = {APress},
  address      = {New York, NY},
  edition      = {1st}
  year         = 2002,
  isbn         = {159059018X},
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;h3&gt;Links&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.apress.com"&gt;www.apress.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://search.cpan.org/"&gt;http://search.cpan.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.cpan.org/"&gt;http://www.cpan.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</field>
<field name="itemdescription">
Guide to creating CPAN modules for us ALL</field>
<field name="usercomment">
</field>
<field name="identifier">
159059018X</field>
</data>
</node>
