<?xml version="1.0" encoding="windows-1252"?>
<node id="121577" title="Net::FTP backup remote machine" created="2001-10-26 00:07:17" updated="2005-07-21 07:25:17">
<type id="121">
perlcraft</type>
<author id="91846">
mandog</author>
<data>
<field name="doctext">
This very simple script is used to backup a 
remote directory of tarred and zipped files. 

I'd be curous about better ways to do this. 
In particular, I'm interested in a better 
way to test if a remote file is a directory 
or a file or a better way to determine if a file has already been copied&lt;P&gt;

#~/usr/local/bin/perl -w

use strict;
use Net::FTP;

my $host='myhost.org';
my $uname='backup';
my $pword='really_secure';

my $rdir='/backup';
my $ldir='D:/archives/brave-backup';


#########################################
#                                       #
# no user server servicable parts below #
#                                       #
#########################################

my $ftp = Net::FTP-&gt;new($host, Debug =&gt; 0,
			Passive =&gt;1, Hash=&gt;1) 
	or die("$@ couldn't construct ftp object");

print "logging on to $host\n";
$ftp-&gt;login($uname,$pword)
	or die("couldn't login to $host, as $uname\n");

$ftp-&gt;cwd($rdir)
	or die("couldn't cd to remote dir: $rdir\n");

my @r_files=$ftp-&gt;ls()
	or die("couldn't cd to list dir: $rdir\n");

chdir($ldir)
	or die("couldn't open to local dir: $ldir\n");

opendir(DH,'.')
	or die("couldn't cd to local dir: $ldir\n");

my @l_files=readdir(DH) 
	or die ("couldn't list local dir: $ldir\n");

closedir(DH) 
	or die("couldn't close local dir: $ldir");

my %backed_up_files;
foreach (@l_files){
	$backed_up_files{$_}=1;
}

$ftp-&gt;binary()
	or die("couldn't set mode to BINARY\n");
foreach(@r_files){
	
	if (!$backed_up_files{$_} &amp;&amp; !Is_Dir($_)){
		print "\tgetting $_\n";
		$ftp-&gt;get($_)
			or die("couldn't get remote file: $_");
	}
}

$ftp-&gt;quit;

sub Is_Dir($){
	my $maybe_dir=shift;
	my $result=$ftp-&gt;cwd($maybe_dir);
	$ftp-&gt;cwd($rdir); #return to our original dir
	return $result;
}</field>
</data>
</node>
