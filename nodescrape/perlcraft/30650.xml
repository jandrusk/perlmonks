<?xml version="1.0" encoding="windows-1252"?>
<node id="30650" title="scalarmap - some new perl syntax" created="2000-08-31 22:02:24" updated="2005-07-21 01:17:38">
<type id="121">
perlcraft</type>
<author id="19340">
ncw</author>
<data>
<field name="doctext">
# This function works like map, except it produces a single scalar
# output.  It hence maps an array into a scalar hence the (clumsy)
# name scalarmap
#
# It requires 3 parameters
# 1) A code block like map.  This will be passed $a and $b
#    $a will be the result and $b is the current element
#    it should return the new result
# 2)  An initial value
# 3) An array

sub scalarmap (&amp;$@)
{
    my $code = shift;
    local ($a, $b) = ( shift );
    foreach $b (@_)
    {
        $a = &amp;$code;
    }
    return $a;
}

# Here are some examples

my @array = 1..10;

my $sum = scalarmap {  $a + $b } 0, @array;

my $sum_of_even_numbers = scalarmap {  $b &amp; 1 ? $a : $a + $b } 0, @array;

my $factorial = scalarmap {  $a * $b } 1, @array;

my $fancy_join = scalarmap {  $a . $b } "", 'a'..'z';

# I don't suppose this will be actually useful in real life but it
# amused me to make a twist an the all powerful map!
#
# This was inspired by a reference kudra made to subroutines and man
# perlsub.</field>
</data>
</node>
