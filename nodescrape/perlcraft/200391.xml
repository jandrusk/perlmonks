<?xml version="1.0" encoding="windows-1252"?>
<node id="200391" title="&quot;animal&quot;" created="2002-09-24 11:20:07" updated="2005-07-30 06:48:53">
<type id="121">
perlcraft</type>
<author id="9073">
merlyn</author>
<data>
<field name="doctext">
#!/usr/bin/perl -w 
use strict; 
## I originally wrote this for a column,
## but haven't gotten around to using it yet.
## just think of an animal, and invoke it.
## It's an example of a self-learning game.
## When you choose not to continue, it'll dump out
## the data structure of knowledge it has accumulated.
 
use Data::Dumper; 
 
my $info = "dog"; 
 
{ 
  try($info); 
  redo if (yes("play again?")); 
} 
print "Bye!\n"; 
print Dumper($info); 
 
sub try { 
  my $this = $_[0]; 
  if (ref $this) { 
    return try($this-&gt;{yes($this-&gt;{Question}) ? 'Yes' : 'No' }); 
  } 
  if (yes("Is it a $this")) { 
    print "I got it!\n"; 
    return 1; 
  }; 
  print "no!?  What was it then? "; 
  chomp(my $new = &lt;STDIN&gt;); 
  print "And a question that distinguishes a $this from a $new would be? "; 
  chomp(my $question = &lt;STDIN&gt;); 
  my $yes = yes("And for a $new, the answer would be..."); 
  $_[0] = { 
           Question =&gt; $question, 
           Yes =&gt; $yes ? $new : $this, 
           No =&gt; $yes ? $this : $new, 
          }; 
  return 0; 
} 
 
sub yes { 
  print "@_ (yes/no)?"; 
  &lt;STDIN&gt; =~ /^y/i; 
} 
</field>
<field name="reputation">
184</field>
</data>
</node>
