<?xml version="1.0" encoding="windows-1252"?>
<node id="42965" title="file ext counter." created="2000-11-22 15:59:06" updated="2005-07-19 14:08:39">
<type id="121">
perlcraft</type>
<author id="24736">
boo_radley</author>
<data>
<field name="doctext">
This code came from my desire to use perl for something
besides CGI, which is my current perl-y focus.
I expected slightly different behavior from
File::Find::file, though this may be my Win background
shining through.
Put simply, this will traverse a filesystem, and determine
the # of files based on extention. Again, this was more to
keep the programming muscles limber; I plan on using this as a shell for more complex things. I do appreciate any
comments you have, however.
&lt;code&gt;
#use warnings;
use strict;
use File::Find;

my %hash;
my @temp;

File::Find::find (\&amp;wanted,"c:\\");
my @keys = keys (%hash);
@keys = sort_by_value (\%hash);


print "-"x20,"\n";
foreach my $key(@keys) {if ($key =~ /^$/) {print "no ext\t:\t"}else{  print "$key\t:\t"}; print $hash{$key},"\n"}

sub sort_by_value {
    my %hash = %{shift()};
    sort {$hash {$a} &lt;=&gt; $hash{$b}  } keys %hash;
}


sub wanted {
my @file ;
my $fname;
    #   don't attempt to read a directory.
    if (-d $_) {return};
    $fname = $File::Find::name;
    #   turn any '/' into a '\'
    #   then make sure that any '\\' get turned into '\'
    $fname =~ s#\/#\\#g;
    $fname =~ s#\\\\#\\#;
    @temp= split  /\./, $_;
    #   mmm. autovivification
    $hash{@temp[1]}++
}
&lt;/code&gt;</field>
</data>
</node>
