<node>
  <type_nodetype>4</type_nodetype>
  <node_id>342464</node_id>
  <author_user>357600</author_user>
  <title>add_re_to_title</title>
  <createtime>2004-04-04 09:28:54</createtime>
  <code># [add_re_to_title]
# see bottom for examples of behaviour

my ($title)=@_;

my $name_qr     =qr/\([^\)]*\)|[^\w\s()\[\]{}]|/;
my $mul_qr      =qr/\s*[*^]\s*\d+\s*/;

my $re_simple_qr=qr/\s*(?:&amp;\w*;\s*)?Re(?:$mul_qr:|\s*:$mul_qr|\s*:\s*)/xi;
my $re_qr       =qr/$re_simple_qr(?:\s*$name_qr\s*(?=$re_simple_qr))?/x;

return &quot;&quot; unless $title=~/\S/;
$title=&quot;Re: $title&quot;;


my @res;  # holds any Re:'s we encounter
my $name; # holds the name of the node.
while ($title=~/\G(?:($re_qr)\s*|(.+)$)/g) {
    if ($1) {
        push @res,$1;
    } else {
        $name=$2;
    }
}

my @parts;
my $count=0;
foreach my $re_str (@res) {
    my ($re,$parens,$cnt)=($re_str,'',1);
    # lose parens with numbers in them.
    $parens=$1 if $re=~s/($name_qr)//;
    # get the count if any.
    $cnt=$1    if $re=~m/(\d+)/;
    $count+=$cnt;
}
push @parts,&quot;Re&quot;.($count&gt;1 ? &quot;^$count&quot; : &quot;&quot;).&quot;:&quot;,$name;

return &quot;@parts&quot;;


# In : &amp;bull;Re: Bypassing strict refs
# Out: Re^2: Bypassing strict refs
#
# In : Re: &amp;bull;Re: Bypassing strict refs
# Out: Re^3: Bypassing strict refs
#
# In : Re: &amp;bull;Re: &#8226;Re: Bypassing strict refs
# Out: Re^4: Bypassing strict refs
#
# In : Re: (12345) Re: Re: &amp;bull;Re: &amp;bull;Re: Bypassing strict refs
# Out: Re^6: Bypassing strict refs
#
# In : Re: (12345) Re: Re:   &amp;bull;   Re: &amp;bull;Re: Bypassing strict refs
# Out: Re^6: Bypassing strict refs
#
# In : Re: (12345) Re: Foo Bar
# Out: Re^3: Foo Bar
#
# In : Re: Re^3: New code wrap options (in-line code CSS class)|
# Out: Re^5: New code wrap options (in-line code CSS class)|
#
# In : Re: (tye)Re: New code wrap options
# Out: Re^3: New code wrap options
#
# In : Re: Re: Re: Re: The ethics of humour
# Out: Re^5: The ethics of humour
#
# In : Re: Foo Bar
# Out: Re^2: Foo Bar
#
# In : Re: (demerphq) Re: Foo Bar
# Out: Re^3: Foo Bar
#
# In : Re: (tye) Re: (demerphq) Re: Foo Bar
# Out: Re^4: Foo Bar
#
# In : Re^2: (tye) Re: (demerphq) Re: Foo Bar
# Out: Re^5: Foo Bar
#
# In : Re^2: (tye) Re: Re^2: Re: (demerphq) Re: Foo Bar
# Out: Re^8: Foo Bar
#
</code>
  <nodeupdated>2004-08-15 12:12:48</nodeupdated>
</node>
