<node>
  <type_nodetype>4</type_nodetype>
  <node_id>271348</node_id>
  <author_user>142755</author_user>
  <title>extractcode</title>
  <createtime>2003-07-03 21:10:36</createtime>
  <code>my( $field, $node ) = @_;
$node ||= $NODE;
my $text = $node-&gt;{$field};

my $nl = &quot;\n&quot;;
$nl = &quot;\r\n&quot;   if  $text =~ /\r/;

my @code;
while(  $text =~ m[&lt;(c(?:ode)?)&gt;(.*?)&lt;/\1&gt;]sig  ) {
   push @code, $2;
}
if (exists $VARS-&gt;{ignore_inline_dl_code}) {
    # this is stupid and its my fault 
    # it should be removed one day - demerphq 
    $VARS-&gt;{show_inline_dl_code}=
        not delete $VARS-&gt;{ignore_inline_dl_code};
}

@code = grep { /\n/ } @code
   if  !$VARS-&gt;{show_inline_dl_code} 
   and !$q-&gt;param('abspart');

if ($q-&gt;param('part')) {
    my @toshow = map { s/\D//g; $_ ? $_-1 : () } $q-&gt;param('part');
    @code = @code[@toshow];
} 

for my $code (@code) {
    if(  $code !~ /\n/  ) {
        $code = &quot;# $code[-1]$nl&quot;;
    } else {
        $code =~ s/^\r?\n//;
        $code .= $nl   if  $code[-1] !~ /\n$/;
    }
} 

@code = (&quot;# no code to download&quot;) 
    unless @code;

$HTMLVARS{http_header}{'Content-Disposition'} = &quot;inline; filename=$node-&gt;{node_id}.pl&quot;;
$HTMLVARS{http_header}{'Content-Type'} = &quot;text/plain&quot;;

# Will mess up (really sneaky) obfuscations.
# return &quot;# From [id://$node-&gt;{node_id}|$node-&gt;{title}] by [$node-&gt;{author_user}{title}]\n&quot; . 
  
return join &quot;$nl##&lt;/code&gt;&lt;code&gt;##$nl$nl&quot;, @code;
</code>
  <nodeupdated>2005-08-06 12:31:06</nodeupdated>
</node>
