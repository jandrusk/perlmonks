<node>
  <type_nodetype>4</type_nodetype>
  <node_id>1420</node_id>
  <author_user>929</author_user>
  <title>parsetimestamp</title>
  <createtime>1999-12-27 20:21:55</createtime>
  <code># [{parsetime:FIELD}]
# Parses out a datetime field into a more human-readable form
#


my ($timestamp,$houroffset)=@_;
my ($date, $time) = split / /,$timestamp;
$houroffset||=$$VARS{timezone};

my ($hrs, $min, $sec) = split /:/, $time;
my ($yy, $mm, $dd) = split /-/, $date;

return &quot;&lt;i&gt;never&lt;/i&gt;&quot; unless (int($yy) and int($mm) and int($dd));

use Time::Local;
use POSIX ();
my $epoch_secs=timelocal( $sec, $min, $hrs, $dd, $mm-1, $yy);
$epoch_secs+=3600*$houroffset;
my $nicedate = POSIX::strftime('%b %d, %Y at %H:%M', localtime($epoch_secs));

$nicedate;
=begin
# [{parsetimestamp:time}]
# Parses out a datetime field into a more human-readable form
#


my ($timestamp,$houroffset)=@_;
my ($date, $time) = split / /,$timestamp;
$houroffset||=$$VARS{timezone};
my ($hrs, $min, $sec) = split /:/, $time;
my ($yy, $mm, $dd) = split /-/, $date;

return &quot;&lt;i&gt;never&lt;/i&gt;&quot; unless (int($yy) and int($mm) and int($dd));

use Time::Local;
my $epoch_secs=timelocal( $sec, $min, $hrs, $dd, $mm-1, $yy);
$epoch_secs+=3600*$houroffset;
my $nicedate =localtime ($epoch_secs);

$nicedate =~ s/(\d\d):(\d\d):(\d\d).*$/$yy at $1:$2/;
$nicedate;
=end</code>
  <nodeupdated>2005-03-15 02:34:16</nodeupdated>
</node>
