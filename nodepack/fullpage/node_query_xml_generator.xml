<node>
  <doctext>[%
  my @nodes = grep !/\D/, split ',', $query-&gt;param('nodes');
  return &quot;&lt;error&gt;Error creatng fling object&lt;/error&gt;&quot;
     unless htmlcode('new_xml_fling','',\my($xml,@data,%xmlstyle),&quot;add_header&quot;);

  my $tag_info = $xmlstyle{clean} ? 'info' : 'INFO';
  my $tag_node = $xmlstyle{clean} ? 'node' : 'NODE';

  $xml-&gt;header(&quot;windows-1252&quot;)-&gt;
    start( $tag_info,
      site     =&gt; $HTMLVARS{site_url},
      sitename =&gt; $HTMLVARS{site_name},
      &quot;Rendered by the Node query XML Generator&quot;
    );

    foreach my $n ( grep ref $_, map getNodeById($_), @nodes ) {
      $n-&gt;{createtime} =~ s/\D//g;

      my @attrs = (
        node_id     =&gt; getId($n),
        author_user =&gt; $n-&gt;{author_user},
        createtime  =&gt; $n-&gt;{createtime},
        lastupdate  =&gt; $n-&gt;{lastupdate},
        nodetype    =&gt; $n-&gt;{type}{title}
      );

      my( $author_name )= $DB-&gt;sqlSelect('title', 'node', &quot;node_id = $n-&gt;{author_user}&quot;);
      if (defined $author_name) {
       push @attrs, author_name =&gt; $author_name;
      }

      if ( $n-&gt;{type}{title} eq 'note'  ||  $n-&gt;{type}{title} eq 'categorized answer' ) {
        push @attrs,
          parent_node =&gt; $n-&gt;{parent_node},
          root_node =&gt; $n-&gt;{root_node},
          root_type =&gt; getNodeById( $n-&gt;{root_node} )-&gt;{type}{title};
      }

      $xml-&gt;element( $tag_node, @attrs, $n-&gt;{title} );
    }

  $xml-&gt;end;

  my $data = join &quot;&quot;,@data;       
  htmlcode('postProcessXML','',\$data);
  return $data;
%]</doctext>
  <type_nodetype>122</type_nodetype>
  <node_id>37150</node_id>
  <author_user>979</author_user>
  <title>node query xml generator</title>
  <createtime>2000-08-29 17:26:47</createtime>
  <nodeupdated>2005-08-15 15:42:55</nodeupdated>
</node>
