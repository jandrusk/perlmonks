<node>
  <doctext></doctext>
  <type_nodetype>119</type_nodetype>
  <name>&lt;P&gt;
Time::localtime - by-name interface to Perl's built-in 
&lt;CODE&gt;localtime()&lt;/CODE&gt; function

&lt;P&gt;
&lt;HR&gt;
</name>
  <author_user>113</author_user>
  <description>&lt;P&gt;
This module's default exports override the core 
&lt;CODE&gt;localtime()&lt;/CODE&gt; function,
replacing it with a version that returns ``Time::tm'' objects. This object
has methods that return the similarly named structure field name from the
C's tm structure from &lt;EM&gt;time.h&lt;/EM&gt;; namely sec, min, hour, mday, mon, year, wday, yday, and isdst.

&lt;P&gt;
You may also import all the structure fields directly into your namespace as regular variables using the 
&lt;FONT SIZE=-1&gt;:FIELDS&lt;/FONT&gt; import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding
 &lt;CODE&gt;tm_&lt;/CODE&gt; in front their method names. Thus, &lt;CODE&gt;$tm_obj-&amp;gt;mday()&lt;/CODE&gt; corresponds to &lt;CODE&gt;$tm_mday&lt;/CODE&gt; if you import the fields.

&lt;P&gt;
The 
&lt;CODE&gt;ctime()&lt;/CODE&gt; funtion provides a way
of getting at the scalar sense of the original CORE::localtime() function.

&lt;P&gt;
To access this functionality without the core overrides, pass the [perlfunc:use|use] an empty import list, and then access function functions with their full
qualified names. On the other hand, the built-ins are still available via
the &lt;CODE&gt;CORE::&lt;/CODE&gt; pseudo-package.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;NOTE&quot;&gt;NOTE&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
While this class is currently implemented using the Class::Struct module to
build a struct-like class, you shouldn't rely upon this.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;AUTHOR&quot;&gt;AUTHOR&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Tom Christiansen
&lt;HR&gt;
</description>
  <createtime>1999-12-22 19:53:42</createtime>
  <node_id>1273</node_id>
  <synopsis>&lt;P&gt;
&lt;PRE&gt; use Time::localtime;
 printf &amp;quot;Year is %d\n&amp;quot;, localtime-&amp;gt;year() + 1900;
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt; $now = ctime();
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt; use Time::localtime;
 use &lt;A HREF=&quot;File::stat&quot;&gt;File::stat&lt;/A&gt;;
 $date_string = ctime(stat($file)-&amp;gt;mtime);
&lt;</synopsis>
  <title>perlman:Time::localtime</title>
  <nodeupdated>2005-08-10 16:25:06</nodeupdated>
</node>
