<node>
  <doctext></doctext>
  <type_nodetype>119</type_nodetype>
  <name>&lt;P&gt;
validate - run many filetest checks on a tree

&lt;P&gt;
&lt;HR&gt;
</name>
  <author_user>113</author_user>
  <description>&lt;P&gt;
The 
&lt;CODE&gt;validate()&lt;/CODE&gt; routine takes a
single multiline string consisting of lines containing a filename plus a
file test to try on it. (The file test may also be a ``cd'', causing
subsequent relative filenames to be interpreted relative to that
directory.) After the file test you may put [perlfunc:die|die] to make it a fatal error if the file test fails. The default is [perlman:perlguts|perlguts]. The file test may optionally have a ``!' prepended to test for the opposite condition. If you do a cd and then list some relative filenames, you may want to indent them slightly for readability. If you supply your own 
&lt;CODE&gt;die()&lt;/CODE&gt; or 
&lt;CODE&gt;warn()&lt;/CODE&gt; message, you can use &lt;CODE&gt;$file&lt;/CODE&gt; to interpolate the filename.

&lt;P&gt;
Filetests may be bunched: ``-rwx'' tests for all of &lt;CODE&gt;-r&lt;/CODE&gt;, &lt;CODE&gt;-w&lt;/CODE&gt;, and &lt;CODE&gt;-x&lt;/CODE&gt;. Only the first failed test of the bunch will produce a warning.

&lt;P&gt;
The routine returns the number of warnings issued.

&lt;HR&gt;
</description>
  <createtime>1999-12-22 19:51:48</createtime>
  <node_id>1203</node_id>
  <synopsis>&lt;P&gt;
&lt;PRE&gt;    use &lt;A HREF=&quot;File::CheckTree&quot;&gt;File::CheckTree&lt;/A&gt;;
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    $warnings += validate( q{
        /vmunix                 -e || die
        /boot                   -e || die
        /bin                    cd
            csh</synopsis>
  <title>perlman:File::CheckTree</title>
  <nodeupdated>2005-08-10 16:40:07</nodeupdated>
</node>
