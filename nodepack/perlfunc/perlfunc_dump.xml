<node>
  <doctext></doctext>
  <type_nodetype>119</type_nodetype>
  <name>&lt;P&gt;
dump - create an immediate core dump

&lt;P&gt;
&lt;HR&gt;
</name>
  <author_user>114</author_user>
  <description>&lt;P&gt;
This causes an immediate core dump. Primarily this is so that you can use
the &lt;STRONG&gt;undump&lt;/STRONG&gt; program to turn your core dump into an executable binary after having
initialized all your variables at the beginning of the program. When the
new binary is executed it will begin by executing a
&lt;CODE&gt;goto LABEL&lt;/CODE&gt; (with all the restrictions that [perlfunc:goto|goto] suffers). Think of it as a goto with an intervening core dump and
reincarnation. If &lt;CODE&gt;LABEL&lt;/CODE&gt;
is omitted, restarts the program from the top. 
&lt;FONT SIZE=-1&gt;WARNING:&lt;/FONT&gt; Any files opened at the time of the dump will 
&lt;FONT SIZE=-1&gt;NOT&lt;/FONT&gt; be open any more when the program is reincarnated, with possible resulting confusion on the part of Perl. See also
 &lt;STRONG&gt;-u&lt;/STRONG&gt; option in [perlman:perlrun|the perlrun manpage].

&lt;P&gt;
Example:

&lt;P&gt;
&lt;PRE&gt;    #!/usr/bin/perl
    require 'getopt.pl';
    require 'stat.pl';
    %days = (
        'Sun' =&amp;gt; 1,
        'Mon' =&amp;gt; 2,
        'Tue' =&amp;gt; 3,
        'Wed' =&amp;gt; 4,
        'Thu' =&amp;gt; 5,
        'Fri' =&amp;gt; 6,
        'Sat' =&amp;gt; 7,
    );
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    dump QUICKSTART if $ARGV&amp;#091;0&amp;#093; eq '-d';
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    QUICKSTART:
    Getopt('f');
&lt;/PRE&gt;
&lt;P&gt;
This operator is largely obsolete, partly because it's very hard to convert
a core file into an executable, and because the real perl-to-C compiler has
superseded it.

&lt;HR&gt;
</description>
  <createtime>1999-08-24 18:41:54</createtime>
  <node_id>186</node_id>
  <synopsis>&lt;P&gt;
dump 
&lt;FONT SIZE=-1&gt;LABEL&lt;/FONT&gt;

&lt;P&gt;
&lt;HR&gt;
</synopsis>
  <title>perlfunc:dump</title>
  <nodeupdated>2005-08-12 18:30:49</nodeupdated>
</node>
