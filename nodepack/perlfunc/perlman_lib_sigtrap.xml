<node>
  <doctext></doctext>
  <type_nodetype>119</type_nodetype>
  <name>&lt;P&gt;
sigtrap - Perl pragma to enable simple signal handling

&lt;P&gt;
&lt;HR&gt;
</name>
  <author_user>113</author_user>
  <description>&lt;P&gt;
The &lt;STRONG&gt;sigtrap&lt;/STRONG&gt; pragma is a simple interface to installing signal handlers. You can have it
install one of two handlers supplied by
&lt;STRONG&gt;sigtrap&lt;/STRONG&gt; itself (one which provides a Perl stack trace and one which simply [perlfunc:die|die]s), or alternately you can supply your own handler for it to install. It
can be told only to install a handler for signals which are either
untrapped or ignored. It has a couple of lists of signals to trap, plus you
can supply your own list of signals.

&lt;P&gt;
The arguments passed to the [perlfunc:use|use] statement which invokes &lt;STRONG&gt;sigtrap&lt;/STRONG&gt;
are processed in order. When a signal name or the name of one of
&lt;STRONG&gt;sigtrap&lt;/STRONG&gt;'s signal lists is encountered a handler is immediately installed, when an
option is encountered it affects subsequently installed handlers.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;OPTIONS&quot;&gt;OPTIONS&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME=&quot;SIGNAL_HANDLERS&quot;&gt;SIGNAL HANDLERS&lt;/A&gt;&lt;/H2&gt;
&lt;P&gt;
These options affect which handler will be used for subsequently installed
signals.

&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item_stack&quot;&gt;stack-trace&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
The handler used for subsequently installed signals outputs a Perl stack trace to 
&lt;FONT SIZE=-1&gt;STDERR&lt;/FONT&gt; and then tries to dump core. This is the default signal handler.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item_die&quot;&gt;die&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
The handler used for subsequently installed signals calls [perlfunc:die|die]
(actually [perlman:perlguts|perlguts]) with a message indicating which signal was caught.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item_handler&quot;&gt;handler your-handler&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
&lt;EM&gt;your-handler&lt;/EM&gt; will be used as the handler for subsequently installed signals.  &lt;EM&gt;your-handler&lt;/EM&gt; can be any value which is valid as an assignment to an element of &lt;CODE&gt;%SIG&lt;/CODE&gt;.

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME=&quot;SIGNAL_LISTS&quot;&gt;SIGNAL LISTS&lt;/A&gt;&lt;/H2&gt;
&lt;P&gt;
&lt;STRONG&gt;sigtrap&lt;/STRONG&gt; has a few built-in lists of signals to trap. They are:

&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item_normal&quot;&gt;normal-signals&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
These are the signals which a program might normally expect to encounter and which by default cause it to terminate. They are 
&lt;FONT SIZE=-1&gt;HUP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;INT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PIPE&lt;/FONT&gt; and 
&lt;FONT SIZE=-1&gt;TERM.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item_error&quot;&gt;error-signals&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
These signals usually indicate a serious problem with the Perl interpreter or with your script. They are 
&lt;FONT SIZE=-1&gt;ABRT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;BUS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EMT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;FPE,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ILL,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;QUIT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SEGV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SYS&lt;/FONT&gt; and 
&lt;FONT SIZE=-1&gt;TRAP.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item_old&quot;&gt;old-interface-signals&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
These are the signals which were trapped by default by the old
&lt;STRONG&gt;sigtrap&lt;/STRONG&gt; interface, they are 
&lt;FONT SIZE=-1&gt;ABRT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;BUS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;EMT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;FPE,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;ILL,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PIPE,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;QUIT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SEGV,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;SYS,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;TERM,&lt;/FONT&gt; and 
&lt;FONT SIZE=-1&gt;TRAP.&lt;/FONT&gt; If no signals or signals lists are passed to

&lt;STRONG&gt;sigtrap&lt;/STRONG&gt;, this list is used.

&lt;/DL&gt;
&lt;P&gt;
For each of these three lists, the collection of signals set to be trapped
is checked before trapping; if your architecture does not implement a
particular signal, it will not be trapped but rather silently ignored.

&lt;P&gt;
&lt;HR&gt;
&lt;H2&gt;&lt;A NAME=&quot;OTHER&quot;&gt;OTHER&lt;/A&gt;&lt;/H2&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item_untrapped&quot;&gt;untrapped&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This token tells &lt;STRONG&gt;sigtrap&lt;/STRONG&gt; to install handlers only for subsequently listed signals which aren't
already trapped or ignored.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item_any&quot;&gt;any&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This token tells &lt;STRONG&gt;sigtrap&lt;/STRONG&gt; to install handlers for all subsequently listed signals. This is the
default behavior.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item_signal&quot;&gt;signal&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Any argument which looks like a signal name (that is,
&lt;CODE&gt;/^&amp;#091;A-Z&amp;#093;&amp;#091;A-Z0-9&amp;#093;*$/&lt;/CODE&gt;) indicates that &lt;STRONG&gt;sigtrap&lt;/STRONG&gt; should install a handler for that name.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item_number&quot;&gt;number&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Require that at least version &lt;EM&gt;number&lt;/EM&gt; of &lt;STRONG&gt;sigtrap&lt;/STRONG&gt; is being used.

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;EXAMPLES&quot;&gt;EXAMPLES&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Provide a stack trace for the old-interface-signals:

&lt;P&gt;
&lt;PRE&gt;    use sigtrap;
&lt;/PRE&gt;
&lt;P&gt;
Ditto:

&lt;P&gt;
&lt;PRE&gt;    use sigtrap qw(stack-trace old-interface-signals);
&lt;/PRE&gt;
&lt;P&gt;
Provide a stack trace on the 4 listed signals only:

&lt;P&gt;
&lt;PRE&gt;    use sigtrap qw(BUS SEGV PIPE ABRT);
&lt;/PRE&gt;
&lt;P&gt;
Die on 
&lt;FONT SIZE=-1&gt;INT&lt;/FONT&gt; or 
&lt;FONT SIZE=-1&gt;QUIT:&lt;/FONT&gt;

&lt;P&gt;
&lt;PRE&gt;    use sigtrap qw(die INT QUIT);
&lt;/PRE&gt;
&lt;P&gt;
Die on 
&lt;FONT SIZE=-1&gt;HUP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;INT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PIPE&lt;/FONT&gt; or 
&lt;FONT SIZE=-1&gt;TERM:&lt;/FONT&gt;

&lt;P&gt;
&lt;PRE&gt;    use sigtrap qw(die normal-signals);
&lt;/PRE&gt;
&lt;P&gt;
Die on 
&lt;FONT SIZE=-1&gt;HUP,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;INT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;PIPE&lt;/FONT&gt; or 
&lt;FONT SIZE=-1&gt;TERM,&lt;/FONT&gt; except don't change the behavior for signals which are already trapped or ignored:

&lt;P&gt;
&lt;PRE&gt;    use sigtrap qw(die untrapped normal-signals);
&lt;/PRE&gt;
&lt;P&gt;
Die on receipt one of an of the &lt;STRONG&gt;normal-signals&lt;/STRONG&gt; which is currently
&lt;STRONG&gt;untrapped&lt;/STRONG&gt;, provide a stack trace on receipt of &lt;STRONG&gt;any&lt;/STRONG&gt; of the
&lt;STRONG&gt;error-signals&lt;/STRONG&gt;:

&lt;P&gt;
&lt;PRE&gt;    use sigtrap qw(die untrapped normal-signals
                    stack-trace any error-signals);
&lt;/PRE&gt;
&lt;P&gt;
Install 
&lt;CODE&gt;my_handler()&lt;/CODE&gt; as the
handler for the &lt;STRONG&gt;normal-signals&lt;/STRONG&gt;:

&lt;P&gt;
&lt;PRE&gt;    use sigtrap 'handler', \&amp;amp;my_handler, 'normal-signals';
&lt;/PRE&gt;
&lt;P&gt;
Install 
&lt;CODE&gt;my_handler()&lt;/CODE&gt; as the
handler for the normal-signals, provide a Perl stack trace on receipt of
one of the error-signals:

&lt;P&gt;
&lt;PRE&gt;    use sigtrap qw(handler my_handler normal-signals
                    stack-trace error-signals);
&lt;/PRE&gt;
&lt;HR&gt;
</description>
  <createtime>1999-12-22 19:49:32</createtime>
  <node_id>1147</node_id>
  <synopsis>&lt;P&gt;
&lt;PRE&gt;    use sigtrap;
    use sigtrap qw(stack-trace old-interface-signals);  # equivalent
    use sigtrap qw(BUS SEGV PIPE ABRT);
    use sigtrap qw(die INT QUIT);
    use sigtrap qw(die normal-signals);
    use sigtrap qw(die untrapped normal-signa</synopsis>
  <title>perlman:lib:sigtrap</title>
  <nodeupdated>2005-08-10 15:39:19</nodeupdated>
</node>
