<node>
  <doctext></doctext>
  <type_nodetype>119</type_nodetype>
  <name>&lt;P&gt;
getcwd - get pathname of current working directory

&lt;P&gt;
&lt;HR&gt;
</name>
  <author_user>113</author_user>
  <description>&lt;P&gt;
The 
&lt;CODE&gt;getcwd()&lt;/CODE&gt; function re-implements the 
&lt;CODE&gt;getcwd(3)&lt;/CODE&gt; (or 
&lt;CODE&gt;getwd(3))&lt;/CODE&gt; functions in Perl.

&lt;P&gt;
The 
&lt;CODE&gt;abs_path()&lt;/CODE&gt; function takes a single argument and returns the absolute pathname for that argument. It uses the same algoritm as 
&lt;CODE&gt;getcwd().&lt;/CODE&gt; (actually 
&lt;CODE&gt;getcwd()&lt;/CODE&gt; is 
&lt;CODE&gt;abs_path(``.''))&lt;/CODE&gt;

&lt;P&gt;
The 
&lt;CODE&gt;fastcwd()&lt;/CODE&gt; function looks the same as 
&lt;CODE&gt;getcwd(),&lt;/CODE&gt; but runs faster. It's also more dangerous because it might conceivably 
&lt;CODE&gt;chdir()&lt;/CODE&gt; you out of a directory that it can't 
&lt;CODE&gt;chdir()&lt;/CODE&gt; you back into. If fastcwd encounters a problem it will return undef but will probably leave you in a different directory. For a measure of extra security, if everything appears to have worked, the 
&lt;CODE&gt;fastcwd()&lt;/CODE&gt; function will check that it leaves you in the same directory that it started in. If it has changed it will
 [perlfunc:die|die] with the message ``Unstable directory path, current directory changed
unexpectedly''. That should never happen.

&lt;P&gt;
The 
&lt;CODE&gt;fast_abs_path()&lt;/CODE&gt; function looks the same as 
&lt;CODE&gt;abs_path(),&lt;/CODE&gt; but runs faster. And like 
&lt;CODE&gt;fastcwd()&lt;/CODE&gt; is more dangerous.

&lt;P&gt;
The 
&lt;CODE&gt;cwd()&lt;/CODE&gt; function looks the same as
getcwd and fastgetcwd but is implemented using the most natural and safe
form for the current architecture. For most systems it is identical to
`pwd` (but without the trailing line terminator).

&lt;P&gt;
It is recommended that cwd (or another *cwd() function) is used in
&lt;EM&gt;all&lt;/EM&gt; code to ensure portability.

&lt;P&gt;
If you ask to override your 
&lt;CODE&gt;chdir()&lt;/CODE&gt; built-in function, then your 
&lt;FONT SIZE=-1&gt;PWD&lt;/FONT&gt; environment variable will be kept up to date. (See

[perlman:perlsub|perlsub].) Note that it will only be kept up to date if all packages which use
chdir import it from Cwd.

&lt;HR&gt;
</description>
  <createtime>1999-12-22 19:49:25</createtime>
  <node_id>1102</node_id>
  <synopsis>&lt;P&gt;
&lt;PRE&gt;    use Cwd;
    $dir = cwd;
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    use Cwd;
    $dir = getcwd;
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    use Cwd;
    $dir = fastgetcwd;
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    use Cwd 'chdir';
    chdir &amp;quot;/tmp&amp;quot;;
    print $ENV{'PWD'};
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    use Cwd</synopsis>
  <title>perlman:lib:Cwd</title>
  <nodeupdated>2005-08-15 12:24:05</nodeupdated>
</node>
