<node>
  <doctext></doctext>
  <type_nodetype>119</type_nodetype>
  <name>&lt;P&gt;
Net::hostent - by-name interface to Perl's built-in gethost*() functions

&lt;P&gt;
&lt;HR&gt;
</name>
  <author_user>113</author_user>
  <description>&lt;P&gt;
This module's default exports override the core 
&lt;CODE&gt;gethostbyname()&lt;/CODE&gt; and 
&lt;CODE&gt;gethostbyaddr()&lt;/CODE&gt; functions, replacing them with versions that return ``Net::hostent'' objects. This object has methods that return the similarly named structure field name from the C's hostent structure from
 &lt;EM&gt;netdb.h&lt;/EM&gt;; namely name, aliases, addrtype, length, and addr_list. The aliases and
addr_list methods return array reference, the rest scalars. The addr method
is equivalent to the zeroth element in the addr_list array reference.

&lt;P&gt;
You may also import all the structure fields directly into your namespace as regular variables using the 
&lt;FONT SIZE=-1&gt;:FIELDS&lt;/FONT&gt; import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding
 &lt;CODE&gt;h_&lt;/CODE&gt;. Thus, &lt;CODE&gt;$host_obj-&amp;gt;name()&lt;/CODE&gt; corresponds to &lt;CODE&gt;$h_name&lt;/CODE&gt; if you import the fields. Array
references are available as regular array variables, so for example &lt;CODE&gt;@{ $host_obj-&amp;gt;aliases()
}&lt;/CODE&gt; would be simply @h_aliases.

&lt;P&gt;
The 
&lt;CODE&gt;gethost()&lt;/CODE&gt; funtion is a simple front-end that forwards a numeric argument to 
&lt;CODE&gt;gethostbyaddr()&lt;/CODE&gt; by way of Socket::inet_aton, and the rest to 
&lt;CODE&gt;gethostbyname().&lt;/CODE&gt;

&lt;P&gt;
To access this functionality without the core overrides, pass the [perlfunc:use|use] an empty import list, and then access function functions with their full
qualified names. On the other hand, the built-ins are still available via
the &lt;CODE&gt;CORE::&lt;/CODE&gt; pseudo-package.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;EXAMPLES&quot;&gt;EXAMPLES&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
&lt;PRE&gt; use Net::hostent;
 use Socket;
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt; @ARGV = ('netscape.com') unless @ARGV;
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt; for $host ( @ARGV ) {
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    unless ($h = gethost($host)) {
        warn &amp;quot;$0: no such host: $host\n&amp;quot;;
        next;
    }
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    printf &amp;quot;\n%s is %s%s\n&amp;quot;, 
            $host, 
            lc($h-&amp;gt;name) eq lc($host) ? &amp;quot;&amp;quot; : &amp;quot;*really* &amp;quot;,
            $h-&amp;gt;name;
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    print &amp;quot;\taliases are &amp;quot;, join(&amp;quot;, &amp;quot;, @{$h-&amp;gt;aliases}), &amp;quot;\n&amp;quot;
                if @{$h-&amp;gt;aliases};     
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    if ( @{$h-&amp;gt;addr_list} &amp;gt; 1 ) { 
        my $i;
        for $addr ( @{$h-&amp;gt;addr_list} ) {
            printf &amp;quot;\taddr #%d is &amp;#091;%s&amp;#093;\n&amp;quot;, $i++, inet_ntoa($addr);
        } 
    } else {
        printf &amp;quot;\taddress is &amp;#091;%s&amp;#093;\n&amp;quot;, inet_ntoa($h-&amp;gt;addr);
    } 
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    if ($h = gethostbyaddr($h-&amp;gt;addr)) {
        if (lc($h-&amp;gt;name) ne lc($host)) {
            printf &amp;quot;\tThat addr reverses to host %s!\n&amp;quot;, $h-&amp;gt;name;
            $host = $h-&amp;gt;name;
            redo;
        } 
    }
 }
&lt;/PRE&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;NOTE&quot;&gt;NOTE&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
While this class is currently implemented using the Class::Struct module to
build a struct-like class, you shouldn't rely upon this.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;AUTHOR&quot;&gt;AUTHOR&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Tom Christiansen
&lt;HR&gt;
</description>
  <createtime>1999-12-22 19:52:52</createtime>
  <node_id>1230</node_id>
  <synopsis>&lt;P&gt;
&lt;PRE&gt; use Net::hostnet;
&lt;/PRE&gt;
&lt;P&gt;
&lt;HR&gt;
</synopsis>
  <title>perlman:Net::hostent</title>
  <nodeupdated>2005-08-15 13:52:20</nodeupdated>
</node>
