<node>
  <doctext></doctext>
  <type_nodetype>119</type_nodetype>
  <name>&lt;P&gt;
redo - start this loop iteration over again

&lt;P&gt;
&lt;HR&gt;
</name>
  <author_user>114</author_user>
  <description>&lt;P&gt;
The [perlfunc:redo|redo] command restarts the loop block without evaluating the conditional again.
The [perlfunc:continue|continue] block, if any, is not executed. If the 
&lt;FONT SIZE=-1&gt;LABEL&lt;/FONT&gt; is omitted, the command refers to the innermost
enclosing loop. This command is normally used by programs that want to lie
to themselves about what was just input:

&lt;P&gt;
&lt;PRE&gt;    # a simpleminded Pascal comment stripper
    # (warning: assumes no { or } in strings)
    LINE: while (&amp;lt;STDIN&amp;gt;) {
        while (s|({.*}.*){.*}|$1 |) {}
        s|{.*}| |;
        if (s|{.*| |) {
            $front = $_;
            while (&amp;lt;STDIN&amp;gt;) {
                if (/}/) {      # end of comment?
                    s|^|$front\{|;
                    redo LINE;
                }
            }
        }
        print;
    }
&lt;/PRE&gt;
&lt;P&gt;
See also [perlfunc:continue|continue] for an illustration of how [perlfunc:last|last], [perlfunc:next|next], and
[perlfunc:redo|redo] work.

&lt;HR&gt;
</description>
  <createtime>1999-08-24 18:42:03</createtime>
  <node_id>201</node_id>
  <synopsis>&lt;P&gt;
redo 
&lt;FONT SIZE=-1&gt;LABEL&lt;/FONT&gt;

&lt;P&gt;
redo

&lt;P&gt;
&lt;HR&gt;
</synopsis>
  <title>perlfunc:redo</title>
  <nodeupdated>2005-08-15 08:04:39</nodeupdated>
</node>
