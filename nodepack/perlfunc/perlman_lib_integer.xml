<node>
  <doctext></doctext>
  <type_nodetype>119</type_nodetype>
  <name>&lt;P&gt;
integer - Perl pragma to compute arithmetic in integer instead of double

&lt;P&gt;
&lt;HR&gt;
</name>
  <author_user>113</author_user>
  <description>&lt;P&gt;
This tells the compiler to use integer operations from here to the end of the enclosing 
&lt;FONT SIZE=-1&gt;BLOCK.&lt;/FONT&gt; On many machines, this doesn't matter a great deal for most computations, but on those without floating point hardware, it can make a big difference.

&lt;P&gt;
Note that this affects the operations, not the numbers. If you run this
code

&lt;P&gt;
&lt;PRE&gt;    use integer;
    $x = 1.5;
    $y = $x + 1;
    $z = -1.5;
&lt;/PRE&gt;
&lt;P&gt;
you'll be left with &lt;CODE&gt;$x == 1.5&lt;/CODE&gt;, &lt;CODE&gt;$y == 2&lt;/CODE&gt; and &lt;CODE&gt;$z == -1&lt;/CODE&gt;. The &lt;CODE&gt;$z&lt;/CODE&gt; case happens because unary &lt;CODE&gt;-&lt;/CODE&gt; counts as an operation.

&lt;P&gt;
See [perlman:perlmod|perlmod].

&lt;HR&gt;
</description>
  <createtime>1999-12-22 19:49:31</createtime>
  <node_id>1140</node_id>
  <synopsis>&lt;P&gt;
&lt;PRE&gt;    use integer;
    $x = 10/3;
    # $x is now 3, not 3.33333333333333333
&lt;/PRE&gt;
&lt;P&gt;
&lt;HR&gt;
</synopsis>
  <title>perlman:lib:integer</title>
  <nodeupdated>2005-08-10 16:40:42</nodeupdated>
</node>
