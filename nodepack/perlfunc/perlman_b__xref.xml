<node>
  <doctext></doctext>
  <type_nodetype>119</type_nodetype>
  <name>&lt;P&gt;
B::Xref - Generates cross reference reports for Perl programs

&lt;P&gt;
&lt;HR&gt;
</name>
  <author_user>113</author_user>
  <description>&lt;P&gt;
The B::Xref module is used to generate a cross reference listing of all
definitions and uses of variables, subroutines and formats in a Perl
program. It is implemented as a backend for the Perl compiler.

&lt;P&gt;
The report generated is in the following format:

&lt;P&gt;
&lt;PRE&gt;    File filename1
      Subroutine subname1
        Package package1
          object1        C&amp;lt;line numbers&amp;gt;
          object2        C&amp;lt;line numbers&amp;gt;
          ...
        Package package2
        ...
&lt;/PRE&gt;
&lt;P&gt;
Each &lt;STRONG&gt;File&lt;/STRONG&gt; section reports on a single file. Each &lt;STRONG&gt;Subroutine&lt;/STRONG&gt; section reports on a single subroutine apart from the special cases
``(definitions)'' and ``(main)''. These report, respectively, on subroutine
definitions found by the initial symbol table walk and on the main part of
the program or module external to all subroutines.

&lt;P&gt;
The report is then grouped by the &lt;STRONG&gt;Package&lt;/STRONG&gt; of each variable, subroutine or format with the special case ``(lexicals)''
meaning lexical variables. Each &lt;STRONG&gt;object&lt;/STRONG&gt; name (implicitly qualified by its containing &lt;STRONG&gt;Package&lt;/STRONG&gt;) includes its type 
&lt;CODE&gt;character(s)&lt;/CODE&gt; at the
beginning where possible. Lexical variables are easier to track and even
included dereferencing information where possible.

&lt;P&gt;
The &lt;CODE&gt;line numbers&lt;/CODE&gt; are a comma separated list of line numbers (some preceded by code letters)
where that object is used in some way. Simple uses aren't preceded by a
code letter. Introductions (such as where a lexical is first defined with [perlfunc:my|my]) are indicated with the letter ``i''. Subroutine and method calls are
indicated by the character ``&amp;amp;''. Subroutine definitions are indicated
by ``s'' and format definitions by ``f''.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;OPTIONS&quot;&gt;OPTIONS&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Option words are separated by commas (not whitespace) and follow the usual
conventions of compiler backend options.

&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__oFILENAME&quot;&gt;-oFILENAME&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Directs output to &lt;CODE&gt;FILENAME&lt;/CODE&gt; instead of standard output.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__r&quot;&gt;-r&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Raw output. Instead of producing a human-readable report, outputs a line in
machine-readable form for each definition/use of a variable/sub/format.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__D_tO_&quot;&gt;-D&amp;#091;tO&amp;#093;&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
(Internal) debug options, probably only useful if &lt;CODE&gt;-r&lt;/CODE&gt; included. The &lt;CODE&gt;t&lt;/CODE&gt; option prints the object on the top of the stack as it's being tracked. The &lt;CODE&gt;O&lt;/CODE&gt; option prints each operator as it's being processed in the execution order
of the program.

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;BUGS&quot;&gt;BUGS&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Non-lexical variables are quite difficult to track through a program.
Sometimes the type of a non-lexical variable's use is impossible to
determine. Introductions of non-lexical non-scalars don't seem to be
reported properly.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;AUTHOR&quot;&gt;AUTHOR&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Malcolm Beattie, &lt;A
HREF=&quot;mailto:mbeattie@sable.ox.ac.uk.&quot;&gt;mbeattie@sable.ox.ac.uk.&lt;/A&gt;

&lt;HR&gt;
</description>
  <createtime>1999-12-22 19:50:10</createtime>
  <node_id>1164</node_id>
  <synopsis>&lt;P&gt;
perl -MO=Xref&amp;#091;,OPTIONS&amp;#093; foo.pl

&lt;P&gt;
&lt;HR&gt;
</synopsis>
  <title>perlman:B::Xref</title>
  <nodeupdated>2005-08-12 23:25:03</nodeupdated>
</node>
