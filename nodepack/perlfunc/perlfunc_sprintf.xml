<node>
  <doctext></doctext>
  <type_nodetype>119</type_nodetype>
  <name>&lt;P&gt;
sprintf - formatted print into a string	

&lt;P&gt;
&lt;HR&gt;
</name>
  <author_user>114</author_user>
  <description>&lt;P&gt;
Returns a string formatted by the usual [perlfunc:printf|printf()] conventions of the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; library function [perlfunc:sprintf|sprintf()]. See &lt;EM&gt;sprintf(3)&lt;/EM&gt; or &lt;EM&gt;printf(3)&lt;/EM&gt;
on your system for an explanation of the general principles.

&lt;P&gt;
Perl does its own [perlfunc:sprintf|sprintf()] formatting -- it emulates the 
&lt;FONT SIZE=-1&gt;C&lt;/FONT&gt; function [perlfunc:sprintf|sprintf()], but it doesn't use it (except for floating-point numbers, and even then
only the standard modifiers are allowed). As a result, any non-standard
extensions in your local [perlfunc:sprintf|sprintf()] are not available from Perl.

&lt;P&gt;
Perl's [perlfunc:sprintf|sprintf()] permits the following universally-known conversions:

&lt;P&gt;
&lt;PRE&gt;   %%   a percent sign
   %c   a character with the given number
   %s   a string
   %d   a signed integer, in decimal
   %u   an unsigned integer, in decimal
   %o   an unsigned integer, in octal
   %x   an unsigned integer, in hexadecimal
   %e   a floating-point number, in scientific notation
   %f   a floating-point number, in fixed decimal notation
   %g   a floating-point number, in %e or %f notation
&lt;/PRE&gt;
&lt;P&gt;
In addition, Perl permits the following widely-supported conversions:

&lt;P&gt;
&lt;PRE&gt;   %X   like %x, but using upper-case letters
   %E   like %e, but using an upper-case &amp;quot;E&amp;quot;
   %G   like %g, but with an upper-case &amp;quot;E&amp;quot; (if applicable)
   %p   a pointer (outputs the Perl value's address in hexadecimal)
   %n   special: *stores* the number of characters output so far
        into the next variable in the parameter list 
&lt;/PRE&gt;
&lt;P&gt;
Finally, for backward (and we do mean ``backward'') compatibility, Perl
permits these unnecessary but widely-supported conversions:

&lt;P&gt;
&lt;PRE&gt;   %i   a synonym for %d
   %D   a synonym for %ld
   %U   a synonym for %lu
   %O   a synonym for %lo
   %F   a synonym for %f
&lt;/PRE&gt;
&lt;P&gt;
Perl permits the following universally-known flags between the &lt;CODE&gt;%&lt;/CODE&gt;
and the conversion letter:

&lt;P&gt;
&lt;PRE&gt;   space   prefix positive number with a space
   +       prefix positive number with a plus sign
   -       left-justify within the field
   0       use zeros, not spaces, to right-justify
   #       prefix non-zero octal with &amp;quot;0&amp;quot;, non-zero hex with &amp;quot;0x&amp;quot;
   number  minimum field width
   .number &amp;quot;precision&amp;quot;: digits after decimal point for
           floating-point, max length for string, minimum length
           for integer
   l       interpret integer as C type &amp;quot;long&amp;quot; or &amp;quot;unsigned long&amp;quot;
   h       interpret integer as C type &amp;quot;short&amp;quot; or &amp;quot;unsigned short&amp;quot;
&lt;/PRE&gt;
&lt;P&gt;
There is also one Perl-specific flag:

&lt;P&gt;
&lt;PRE&gt;   V       interpret integer as Perl's standard integer type
&lt;/PRE&gt;
&lt;P&gt;
Where a number would appear in the flags, an asterisk (``&lt;CODE&gt;*&lt;/CODE&gt;'') may be used instead, in which case Perl uses the next item in the
parameter list as the given number (that is, as the field width or
precision). If a field width obtained through ``&lt;CODE&gt;*&lt;/CODE&gt;'' is negative, it has the same effect as the ``&lt;CODE&gt;-&lt;/CODE&gt;'' flag: left-justification.

&lt;P&gt;
If &lt;CODE&gt;use locale&lt;/CODE&gt; is in effect, the character used for the decimal point in formatted real numbers is affected by the 
&lt;FONT SIZE=-1&gt;LC_NUMERIC&lt;/FONT&gt; locale. See
 [perlman:perllocale|the perllocale manpage].

&lt;HR&gt;
</description>
  <createtime>1999-08-24 18:43:01</createtime>
  <node_id>297</node_id>
  <synopsis>&lt;P&gt;
sprintf 
&lt;FONT SIZE=-1&gt;FORMAT,&lt;/FONT&gt; 
&lt;FONT SIZE=-1&gt;LIST&lt;/FONT&gt;

&lt;P&gt;
&lt;HR&gt;
</synopsis>
  <title>perlfunc:sprintf</title>
  <nodeupdated>2005-08-15 16:42:46</nodeupdated>
</node>
