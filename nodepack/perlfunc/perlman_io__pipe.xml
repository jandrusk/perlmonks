<node>
  <doctext></doctext>
  <type_nodetype>119</type_nodetype>
  <name>&lt;P&gt;
IO::pipe - supply object methods for pipes

&lt;P&gt;
&lt;HR&gt;
</name>
  <author_user>113</author_user>
  <description>&lt;P&gt;
&lt;CODE&gt;IO::Pipe&lt;/CODE&gt; provides an interface to createing pipes between processes.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;CONSTRCUTOR&quot;&gt;CONSTRCUTOR&lt;/A&gt;&lt;/H1&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item_new&quot;&gt;new ( &amp;#091;READER, WRITER&amp;#093; )&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Creates a &lt;CODE&gt;IO::Pipe&lt;/CODE&gt;, which is a reference to a newly created symbol (see the &lt;CODE&gt;Symbol&lt;/CODE&gt; package). &lt;CODE&gt;IO::Pipe::new&lt;/CODE&gt; optionally takes two arguments, which should be objects blessed into &lt;CODE&gt;IO::Handle&lt;/CODE&gt;, or a subclass thereof. These two objects will be used for the system call
to [perlfunc:pipe|pipe]. If no arguments are given then method &lt;CODE&gt;handles&lt;/CODE&gt; is called on the new &lt;CODE&gt;IO::Pipe&lt;/CODE&gt; object.

&lt;P&gt;
These two handles are held in the array part of the 
&lt;FONT SIZE=-1&gt;GLOB&lt;/FONT&gt; until either
&lt;CODE&gt;reader&lt;/CODE&gt; or &lt;CODE&gt;writer&lt;/CODE&gt; is called.

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;METHODS&quot;&gt;METHODS&lt;/A&gt;&lt;/H1&gt;
&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item_reader&quot;&gt;reader (&amp;#091;ARGS&amp;#093;)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
The object is re-blessed into a sub-class of &lt;CODE&gt;IO::Handle&lt;/CODE&gt;, and becomes a handle at the reading end of the pipe. If &lt;CODE&gt;ARGS&lt;/CODE&gt; are given then [perlfunc:fork|fork]
is called and &lt;CODE&gt;ARGS&lt;/CODE&gt; are passed to exec.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item_writer&quot;&gt;writer (&amp;#091;ARGS&amp;#093;)&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
The object is re-blessed into a sub-class of &lt;CODE&gt;IO::Handle&lt;/CODE&gt;, and becomes a handle at the writing end of the pipe. If &lt;CODE&gt;ARGS&lt;/CODE&gt; are given then [perlfunc:fork|fork]
is called and &lt;CODE&gt;ARGS&lt;/CODE&gt; are passed to exec.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item_handles&quot;&gt;handles ()&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
This method is called during construction by &lt;CODE&gt;IO::Pipe::new&lt;/CODE&gt;
on the newly created &lt;CODE&gt;IO::Pipe&lt;/CODE&gt; object. It returns an array of two objects blessed into &lt;CODE&gt;IO::Pipe::End&lt;/CODE&gt;, or a subclass thereof.

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;SEE_ALSO&quot;&gt;SEE ALSO&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
[perlman:IO::Handle|Handle]

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;AUTHOR&quot;&gt;AUTHOR&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Graham Barr &amp;lt;&lt;A HREF=&quot;mailto:bodg@tiuk.ti.com&quot;&gt;bodg@tiuk.ti.com&lt;/A&gt;&amp;gt;

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;COPYRIGHT&quot;&gt;COPYRIGHT&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Copyright (c) 1996 Graham Barr. All rights reserved. This program is free
software; you can redistribute it and/or modify it under the same terms as
Perl itself.

&lt;HR&gt;
</description>
  <createtime>1999-12-22 19:52:13</createtime>
  <node_id>1220</node_id>
  <synopsis>&lt;P&gt;
&lt;PRE&gt;        use IO::Pipe;
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;        $pipe = new IO::Pipe;
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;        if($pid = fork()) { # Parent
            $pipe-&amp;gt;reader();
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;            while(&amp;lt;$pipe&amp;gt; {
                ....
            }
&lt;/PRE&gt;
</synopsis>
  <title>perlman:IO::Pipe</title>
  <nodeupdated>2005-08-13 00:47:45</nodeupdated>
</node>
