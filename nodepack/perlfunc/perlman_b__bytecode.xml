<node>
  <doctext></doctext>
  <type_nodetype>119</type_nodetype>
  <name>&lt;P&gt;
B::Bytecode - Perl compiler's bytecode backend

&lt;P&gt;
&lt;HR&gt;
</name>
  <author_user>113</author_user>
  <description>&lt;P&gt;
This compiler backend takes Perl source and generates a
platform-independent bytecode encapsulating code to load the internal
structures perl uses to run your program. When the generated bytecode is
loaded in, your program is ready to run, reducing the time which perl would
have taken to load and parse your program into its internal semi-compiled
form. That means that compiling with this backend will not help improve the
runtime execution speed of your program but may improve the start-up time.
Depending on the environment in which your program runs this may or may not
be a help.

&lt;P&gt;
The resulting bytecode can be run with a special byteperl executable or
(for non-main programs) be loaded via the &lt;CODE&gt;byteload_fh&lt;/CODE&gt; function in the &lt;EM&gt;B&lt;/EM&gt; module.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;OPTIONS&quot;&gt;OPTIONS&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
If there are any non-option arguments, they are taken to be names of
objects to be saved (probably doesn't work properly yet). Without extra
arguments, it saves the main program.

&lt;DL&gt;
&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__ofilename&quot;&gt;-ofilename&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Output to filename instead of 
&lt;FONT SIZE=-1&gt;STDOUT.&lt;/FONT&gt;

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__&quot;&gt;--&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Force end of options.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__f&quot;&gt;-f&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Force optimisations on or off one at a time. Each can be preceded by &lt;STRONG&gt;no-&lt;/STRONG&gt; to turn the option off (e.g. &lt;STRONG&gt;-fno-compress-nullops&lt;/STRONG&gt;).

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__fcompress_nullops&quot;&gt;-fcompress-nullops&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Only fills in the necessary fields of ops which have been optimised away by
perl's internal compiler.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__fomit_sequence_numbers&quot;&gt;-fomit-sequence-numbers&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Leaves out code to fill in the op_seq field of all ops which is only used
by perl's internal compiler.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__fbypass_nullops&quot;&gt;-fbypass-nullops&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
If op-&amp;gt;op_next ever points to a 
&lt;FONT SIZE=-1&gt;NULLOP,&lt;/FONT&gt; replaces the op_next field with the first
non-NULLOP in the path of execution.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__fstrip_syntax_tree&quot;&gt;-fstrip-syntax-tree&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Leaves out code to fill in the pointers which link the internal syntax tree
together. They're not needed at run-time but leaving them out will make it
impossible to recompile or disassemble the resulting program. It will also
stop &lt;CODE&gt;goto label&lt;/CODE&gt; statements from working.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__On&quot;&gt;-On&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Optimisation level (n = 0, 1, 2, ...). &lt;STRONG&gt;-O&lt;/STRONG&gt; means &lt;STRONG&gt;-O1&lt;/STRONG&gt;.
&lt;STRONG&gt;-O1&lt;/STRONG&gt; sets &lt;STRONG&gt;-fcompress-nullops&lt;/STRONG&gt;  &lt;STRONG&gt;-fomit-sequence numbers&lt;/STRONG&gt;.
&lt;STRONG&gt;-O6&lt;/STRONG&gt; adds &lt;STRONG&gt;-fstrip-syntax-tree&lt;/STRONG&gt;.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__D&quot;&gt;-D&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Debug options (concatenated or separate flags like &lt;CODE&gt;perl -D&lt;/CODE&gt;).

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__Do&quot;&gt;-Do&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Prints each 
&lt;FONT SIZE=-1&gt;OP&lt;/FONT&gt; as it's processed.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__Db&quot;&gt;-Db&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Print debugging information about bytecompiler progress.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__Da&quot;&gt;-Da&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Tells the (bytecode) assembler to include source assembler lines in its
output as bytecode comments.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__DC&quot;&gt;-DC&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Prints each 
&lt;FONT SIZE=-1&gt;CV&lt;/FONT&gt; taken from the final symbol tree walk.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__S&quot;&gt;-S&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Output (bytecode) assembler source rather than piping it through the
assembler and outputting bytecode.

&lt;P&gt;&lt;DT&gt;&lt;STRONG&gt;&lt;A NAME=&quot;item__m&quot;&gt;-m&lt;/A&gt;&lt;/STRONG&gt;&lt;P&gt;
&lt;DD&gt;
Compile as a module rather than a standalone program. Currently this just
means that the bytecodes for initialising &lt;CODE&gt;main_start&lt;/CODE&gt;,
&lt;CODE&gt;main_root&lt;/CODE&gt; and &lt;CODE&gt;curpad&lt;/CODE&gt; are omitted.

&lt;/DL&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;EXAMPLES&quot;&gt;EXAMPLES&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
&lt;PRE&gt;        perl -MO=Bytecode,-O6,-o,foo.plc foo.pl
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;        perl -MO=Bytecode,-S foo.pl &amp;gt; foo.S
        assemble foo.S &amp;gt; foo.plc
        byteperl foo.plc
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;        perl -MO=Bytecode,-m,-oFoo.pmc Foo.pm
&lt;/PRE&gt;
&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;BUGS&quot;&gt;BUGS&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Plenty. Current status: experimental.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;AUTHOR&quot;&gt;AUTHOR&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
Malcolm Beattie, &lt;CODE&gt;mbeattie@sable.ox.ac.uk&lt;/CODE&gt;

&lt;HR&gt;
</description>
  <createtime>1999-12-22 19:50:08</createtime>
  <node_id>1154</node_id>
  <synopsis>&lt;P&gt;
&lt;PRE&gt;        perl -MO=Bytecode&amp;#091;,OPTIONS&amp;#093; foo.pl
&lt;/PRE&gt;
&lt;P&gt;
&lt;HR&gt;
</synopsis>
  <title>perlman:B::Bytecode</title>
  <nodeupdated>2005-08-15 09:02:08</nodeupdated>
</node>
