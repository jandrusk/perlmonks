<node>
  <doctext></doctext>
  <type_nodetype>119</type_nodetype>
  <name>&lt;P&gt;
Fatal - replace functions with equivalents which succeed or die

&lt;P&gt;
&lt;HR&gt;
</name>
  <author_user>113</author_user>
  <description>&lt;P&gt;
&lt;CODE&gt;Fatal&lt;/CODE&gt; provides a way to conveniently replace functions which normally return a
false value when they fail with equivalents which halt execution if they
are not successful. This lets you use these functions without having to
test their return values explicitly on each call. Errors are reported via [perlfunc:die|die], so you can trap them using &lt;CODE&gt;$SIG{__DIE__}&lt;/CODE&gt; if you wish to take some action before the program exits.

&lt;P&gt;
The do-or-die equivalents are set up simply by calling Fatal's
[perlfunc:import|import] routine, passing it the names of the functions to be replaced. You may wrap both user-defined functions and overridable 
&lt;FONT SIZE=-1&gt;CORE&lt;/FONT&gt; operators (except
 [perlfunc:exec|exec], [perlfunc:system|system] which cannot be expressed via prototypes) in this way.

&lt;P&gt;
&lt;HR&gt;
&lt;H1&gt;&lt;A NAME=&quot;AUTHOR&quot;&gt;AUTHOR&lt;/A&gt;&lt;/H1&gt;
&lt;P&gt;
&lt;A HREF=&quot;mailto:Lionel.Cons@cern.ch&quot;&gt;Lionel.Cons@cern.ch&lt;/A&gt;

&lt;P&gt;
prototype updates by Ilya Zakharevich &lt;A
HREF=&quot;mailto:ilya@math.ohio-state.edu&quot;&gt;ilya@math.ohio-state.edu&lt;/A&gt;

&lt;HR&gt;
</description>
  <createtime>1999-12-22 19:49:26</createtime>
  <node_id>1110</node_id>
  <synopsis>&lt;P&gt;
&lt;PRE&gt;    use Fatal qw(open close);
&lt;/PRE&gt;
&lt;P&gt;
&lt;PRE&gt;    sub juggle { . . . }
    import Fatal 'juggle';
&lt;/PRE&gt;
&lt;P&gt;
&lt;HR&gt;
</synopsis>
  <title>perlman:lib:Fatal</title>
  <nodeupdated>2005-08-10 16:36:14</nodeupdated>
</node>
