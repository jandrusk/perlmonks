<node>
  <type_nodetype>3545</type_nodetype>
  <node_id>30061</node_id>
  <author_user>929</author_user>
  <title>randomnode</title>
  <createtime>2000-08-28 19:22:15</createtime>
  <code>my $min= 922168001; # Tue 1999-03-23 05:46:41 GMT
my $max= time();
my $randtime= $min + int(rand($max-$min));

my @users= split( /,/, $q-&gt;param('users') );
@users= ()
    if  20 &lt; @users;
my $users= join ',', grep $_, map {
    ! /\D/  ?  $_  :  getId( getNode($_,'user') );
} @users;
my @types= split( /,/, $q-&gt;param('types') );
@types= ()
    if  20 &lt; @types;
my $types= join ',', grep $_, map {
    ! /\D/  ?  $_  :  getId( getNode($_,'type') );
} @types;

my $sql= join ' ',
    &quot;select node_id from node&quot;,
    &quot;where createtime &lt; from_unixtime($randtime)&quot;,
    ! $types ? () : &quot;and type_nodetype in($types)&quot;,
    ! $users ? () : &quot;and author_user in($users)&quot;,
    &quot;order by createtime asc limit 20&quot;,
;
if(  $randtime &lt; ($min+$max)/2  ) {
    $sql =~ s/ &lt; / &gt; /;
    $sql =~ s/ asc / desc /;
}
Everything::printLog(&quot;randomnode: $sql&quot;);

my $ar= $DB-&gt;getDatabaseHandle()-&gt;selectall_arrayref($sql);
if(  @$ar  ) {
    $q-&gt;param( 'node_id', $ar-&gt;[rand @$ar]-&gt;[0] )
} else {
    $q-&gt;param( 'node_id', $HTMLVARS{notFound_node} );
}
</code>
  <nodeupdated>2004-02-07 09:56:16</nodeupdated>
</node>
