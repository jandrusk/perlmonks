<node>
  <type_nodetype>3545</type_nodetype>
  <node_id>81332</node_id>
  <author_user>929</author_user>
  <title>resurrect</title>
  <createtime>2001-05-17 18:42:15</createtime>
  <code>return &quot;deprectated. see &quot; . linkNode(244951);
return unless isGod($USER);

my $node_id=$query-&gt;param('olde2nodeid');
return unless $node_id;

Everything::printLog(&quot;resurrecting $node_id&quot;);
my $VAR1;
sub reinsertCorpse {
    my ($N) = @_;

    my @kids;
    if ($$N{group}) {
        foreach (@{ $$N{group} }) {
            my $KID = resurrectNode($_);
            push @kids, reinsertCorpse($KID);
        }
    }

    my $author = $$N{author_user};
    delete $$N{author_user};
    my $title = $$N{title};
    delete $$N{title};
    my $type = $$N{type_nodetype};
    delete $$N{type_nodetype};
    delete $$N{group} if exists $$N{group};

    my $A = getNodeById($author);
    $A = getNode('root','user') unless $A;
    my $id = insertNode($title, getType($type), $A, $N);
    insertIntoNodegroup($id, $author, \@kids) if @kids;
    #print &quot;sucessfully inserted \&quot;$title\&quot; as node_id $id\n&quot;;
    $id;

}


sub resurrectNode {
    my ($node_id) = @_;

    my $N = $DB-&gt;sqlSelectHashref(&quot;*&quot;, 'tomb', &quot;node_id=&quot;.$DB-&gt;getDatabaseHandle-&gt;quote($node_id));
    return unless $N;

    my $DATA = eval($$N{data});

    @$N{keys %$DATA} = values %$DATA;

    delete $$N{data};
    delete $$N{killa_user};
    delete $$N{node_id};

    $N;
}

my $N = resurrectNode($node_id);
foreach(keys %$N){
   Everything::printLog(&quot;resurrect: $_ =&gt; $$N{$_}&quot;);
}
return unless $N;
my $id = reinsertCorpse($N);
Everything::printLog(&quot;resurrect: new id: $id&quot;);
$query-&gt;param('node_id', $id);</code>
  <nodeupdated>2005-07-24 09:10:35</nodeupdated>
</node>
