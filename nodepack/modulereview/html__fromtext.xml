<node>
  <doctext>&lt;h3&gt;Summary:&lt;/h3&gt;

&lt;p&gt;[cpan://HTML::FromText] is a clever and handy module,
but it lacks flexibility.&lt;/p&gt;

&lt;h3&gt;Author:&lt;/h3&gt;

&lt;p&gt;[http://search.cpan.org/search?author=GDR|Gareth D. 
Rees].&lt;/p&gt;

&lt;h3&gt;Description:&lt;/h3&gt;

&lt;p&gt;HTML::FromText takes ascii text and marks it up into
web-friendly HTML based on a few fairly well-defined
conventions, including the familiar &lt;code&gt;*bold*&lt;/code&gt;
and &lt;code&gt;_underline_&lt;/code&gt; indicators you'll recognize
from Usenet and email.  It'll also escape HTML
metacharacters, preserve whitespace when sensical, and
even recognize and mark up tables.  This is excellent
news for those of us who absolutely despise writing raw
HTML, but are too macho to use WYSIWYG editors.&lt;/p&gt;

&lt;p&gt;Using HTML::FromText couldn't be simpler: there's only
one function you care about, and it has a nice clean
interface:&lt;/p&gt;

&lt;code&gt;
my $html_code = text2html($text, %args);
&lt;/code&gt;

&lt;p&gt;For a full description of the available options, I'll
refer you to the excellent [cpan://HTML::FromText]
documentation, but here are some examples of flags you
can set (or clear) in &lt;code&gt;%args&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;paras: treat text as paragraph-oriented&lt;/li&gt;
 &lt;li&gt;blockcode: mark up indented paragraphs as code&lt;/li&gt;
 &lt;li&gt;bullets: mark up bulleted paragraphs as an unordered
  list&lt;/li&gt;
 &lt;li&gt;tables: guess/recognize tables in the text and mark
  them up in proper HTML&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Better yet, HTML::FromText produces remarkably clean, if
not exactly elegant, HTML.&lt;/p&gt;

&lt;p&gt;What could be better?  Well....&lt;/p&gt;

&lt;p&gt;HTML::FromText isn't particularly flexible.  Want to
mark up &lt;code&gt;_foo_&lt;/code&gt; as &lt;code&gt;&lt;i&gt;foo&lt;/i&gt;&lt;/code&gt;?
Too bad, you're locked into underline tags.  Jealous of
Perl Monks' &lt;code&gt;[link]&lt;/code&gt; convention?  Sorry, you
can't easily build one on top of HTML::FromText -- it'll
only do two balanced delimiters.  Want to treat some
indented paragraphs as code and others as quotes in the
same document?  No can do, it's a global option.&lt;/p&gt;

&lt;p&gt;Since there are only a few different behaviours (mark
up *text*, mark up _text_, mark up indented paragraphs,
mark up lists, mark up tables), I'd have liked to see a
callback-oriented interface, with the existing behaviours
as defaults.  That way, I could replace the underscore
callback with my own (to do italicised text), rewrite the
&lt;code&gt;headings&lt;/code&gt; and &lt;code&gt;titles&lt;/code&gt; callbacks
to use somewhat less exuberant header tags, and hack
together a smarter callback for indented paragraphs that
tries to guess whether the text in question is code or a
quote, and do the right thing.&lt;/p&gt;

&lt;p&gt;This wouldn't be so big a deal if you could escape raw
HTML, but you can't.  It's either convert all HTML
metacharacters to their corresponding entities, or none.
This is an obnoxious omission: I like to be able to keep
&lt;code&gt;&lt;&lt;/code&gt;s and &lt;code&gt;&gt;&lt;/code&gt;s in my text without
having to escape them by hand, but if HTML::FromText isn't
going to do it for me, I'd like to be able to italicize
text, too.&lt;/p&gt;

&lt;p&gt;And would it really be &lt;i&gt;so&lt;/i&gt; hard to recognize a
line of more than, say, ten hyphens as a &lt;code&gt;&lt;hr&gt;&lt;/code&gt;?
That would &lt;i&gt;really&lt;/i&gt; come in handy.&lt;/p&gt;

&lt;p&gt;I've spent quite a bit of text ranting about its
shortcomings, but I really like HTML::FromText.  It's a
godsend to those of us who hate HTML, but love our text
editors.&lt;/p&gt;

&lt;h3&gt;Ups:&lt;/h3&gt;
&lt;ul&gt;
 &lt;li&gt;Does an excellent job of translating text to HTML&lt;/li&gt;
 &lt;li&gt;Table recognition is intuitive and seamless&lt;/li&gt;
 &lt;li&gt;Good documentation&lt;/li&gt;
 &lt;li&gt;Clean interface&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Downs:&lt;/h3&gt;
&lt;ul&gt;
 &lt;li&gt;Doesn't support some fairly obvious markups&lt;/li&gt;
 &lt;li&gt;Inflexible&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Conclusion:&lt;/h3&gt;

&lt;p&gt;Excellent for translating simple documents to HTML.
Don't use it to write your website, since it only does
bare-bones markup.  On second thought: &lt;i&gt;do&lt;/i&gt; use it
to write your website, since you'll end up with far less
bloat.&lt;tt&gt;:-)&lt;/tt&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Update:&lt;/b&gt; Added author information.  Thanks
[Juerd]!&lt;/p&gt;</doctext>
  <type_nodetype>31663</type_nodetype>
  <author_user>95145</author_user>
  <createtime>2002-05-22 23:38:38</createtime>
  <itemdescription>Mark up text as HTML</itemdescription>
  <identifier></identifier>
  <node_id>168646</node_id>
  <usercomment>[cpan://HTML::FromText] is a clever and handy module,but it lacks flexibility.</usercomment>
  <title>HTML::FromText</title>
  <nodeupdated>2005-07-27 11:49:31</nodeupdated>
</node>
