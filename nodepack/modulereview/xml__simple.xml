<node>
  <doctext>&lt;h3&gt;Description&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://theoryx5.uwinnipeg.ca/CPAN/data/XML-Simple/Simple.html&quot;&gt;
   XML::Simple&lt;/a&gt; - Trivial API for reading and writing XML
(esp config files)&lt;/p&gt;

&lt;p&gt;XML::Simple loads an XML file in memory, in a convenient
structure, that can be accessed and updated, then output 
back.&lt;br /&gt;
A number of options allow users to specify how the 
structure should be built. It can also be cached using
Data::Dumper&lt;/p&gt;


&lt;h3&gt;Why use XML::Simple?&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;XML configuration files, small table, 
    data-oriented XML&lt;/li&gt;
    &lt;li&gt;simple XML processing&lt;/li&gt;
    &lt;li&gt;you don't care much about XML but find it 
    convenient as a standard file format, to replace 
    csv or a home-brewed format&lt;/li&gt;
  &lt;/ul&gt;

&lt;h3&gt;Why NOT use XML::Simple?&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;your XML data is too complex for XML::Simple to 
    deal with:&lt;br /&gt;
      - it includes mixed content 
       (&amp;lt;elt&gt;th&amp;lt;is&gt;_&amp;lt;/is&gt;_ mixed content&amp;lt;/elt&gt;)&lt;br /&gt;
      - your documents are too big to fit in memory&lt;br /&gt;
      - you are dealing with XML documents&lt;/li&gt;
    &lt;li&gt;you want to use a standard-based module 
    (XML::DOM for example)&lt;/li&gt;
  &lt;/ul&gt;

&lt;h3&gt;Personal notes&lt;/h3&gt;
&lt;p&gt;I don't use XML::Simple in production but the module
seems quite mature, and very convenient for &quot;light&quot; XML:
config files, tables, generally data-oriented, shallow
XML (the XML tree is not really deep), as opposed to
document-oriented XML.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: make sure you read the documentation
   about the &lt;tt&gt;forcearray&lt;/tt&gt; option or you might get bitten
   by repeated elements being turned into an array (which is OK)
   _except_ when there is only one of them, in which case
   they become just a hash value (&lt;b&gt;bad!&lt;/b&gt;).&lt;br /&gt;
for example this document:
&lt;code&gt;&lt;config dir=&quot;/usr/local/etc&quot; log=&quot;/usr/local/log&quot;&gt;
  &lt;user id=&quot;user1&quot;&gt;
      &lt;group&gt;root&lt;/group&gt;
      &lt;group&gt;webadmin&lt;/group&gt;
  &lt;/user&gt;
  &lt;user id=&quot;user2&quot;&gt;
      &lt;group&gt;staff&lt;/group&gt;
  &lt;/user&gt;
&lt;/config&gt;
&lt;/code&gt;when loaded with XMLin and not &lt;tt&gt;forcearray&lt;/tt&gt; option becomes
&lt;code&gt;
{ 'dir' =&gt; '/usr/local/etc',
  'log' =&gt; '/usr/local/log',
  'user' =&gt; {'user1' =&gt; {'group' =&gt; ['root', 'webadmin']},
             'user2' =&gt; {'group' =&gt; 'staff'}
            }
};
&lt;/code&gt;
Note the 2 different ways the &lt;tt&gt;group&lt;/tt&gt; elements are processed.&lt;/p&gt;
&lt;p&gt;I also found that XML::Simple can be a little dangerous in that
   it leads to writing XML that is a little too simple. Often when
   using it I end up with an XML structure that's as shallow as I can
   possibly make it, which might not be really clean.&lt;/p&gt;</doctext>
  <type_nodetype>31663</type_nodetype>
  <author_user>9346</author_user>
  <createtime>2000-09-01 09:35:07</createtime>
  <itemdescription>A simple interface to XML documents</itemdescription>
  <identifier></identifier>
  <node_id>30695</node_id>
  <usercomment>Very convenient for config file and simple XML files</usercomment>
  <title>XML::Simple</title>
  <nodeupdated>2005-08-14 02:51:35</nodeupdated>
</node>
