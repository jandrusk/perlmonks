<node>
  <doctext>&amp;nbsp;&lt;p&gt;
&lt;font size=&quot;+1&quot;&gt;&lt;b&gt;Why use Proc::ProcessTable?&lt;/b&gt;&lt;/font&gt;&lt;p&gt;
&amp;nbsp;&lt;p&gt;
This module implements platform-independent methods for obtaining information on process execution on a system from the &lt;code&gt;/proc&lt;/code&gt; file system by filling a &lt;code&gt;procstat&lt;/code&gt; structure for the &lt;code&gt;/proc/XXX/stat&lt;/code&gt; file relating to a process.  This process execution information includes real and effective group and user IDs, parent and group process IDs, process priorities, CPU and memory utilisation and process TTYs.  The supported process attributes available via this module vary from platform to platform as a result of the changes in platform procstat structs - Supported attributes for each platform are described in the README file for each platform.&lt;p&gt;
The delivery of this process information by [cpan://Process::ProcessTable] allows you to do away with the ugly external shell calls to utilities such as &lt;code&gt;ps&lt;/code&gt;.&lt;p&gt;
&amp;nbsp;&lt;p&gt;
&lt;font size=&quot;+1&quot;&gt;&lt;b&gt;How to use Proc::ProcessTable?&lt;/b&gt;&lt;/font&gt;&lt;p&gt;
&amp;nbsp;&lt;p&gt;
The documentation for the [cpan://Proc::ProcessTable] module is excellent and usage of this module is very simple with only three methods exported by default - &lt;code&gt;new&lt;/code&gt; (create new ProcessTable object), &lt;code&gt;fields&lt;/code&gt; (returns a list of the field names/attributes supported by the module on the current architecture) and &lt;code&gt;table&lt;/code&gt; (reads the process table and returns an array of process information).&lt;p&gt;
Examples of the usage of [cpan://Proc::ProcessTable] module submitted previous by myself on this site can be seen [id://115098|here] and [id://121674|here].&lt;p&gt;
&amp;nbsp;&lt;p&gt;</doctext>
  <type_nodetype>31663</type_nodetype>
  <author_user>65703</author_user>
  <createtime>2001-11-02 12:41:19</createtime>
  <itemdescription>Framework for obtaining and extracting information on process execution</itemdescription>
  <identifier></identifier>
  <node_id>122800</node_id>
  <usercomment></usercomment>
  <title>Proc::ProcessTable</title>
  <nodeupdated>2005-07-30 14:19:53</nodeupdated>
</node>
