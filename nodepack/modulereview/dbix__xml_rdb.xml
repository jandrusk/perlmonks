<node>
  <doctext>&lt;h3&gt;Description&lt;/h3&gt;
  &lt;p&gt;&lt;a href=&quot;http://theoryx5.uwinnipeg.ca/CPAN/data/DBIx-XML_RDB/XML_RDB.html&quot;&gt;
     DBIx::XML_RDB&lt;/a&gt; - Perl extension for creating XML from existing DBI
     datasources. DBIx::XML_RDB comes with the &lt;tt&gt;sql2xml&lt;/tt&gt; tool which
     simply dumps a table in a database to an XML file.&lt;/p&gt; 

&lt;h3&gt;Why use DBIx::XML_RDB?&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;you want to export the data base data in XML&lt;/li&gt;
    &lt;li&gt;you prefer to process the data using XML tools rather than as a table&lt;/li&gt;
  &lt;/ul&gt;

&lt;h3&gt;Why NOT use DBIx::XML_RDB?&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;you are not using a DBI-supported data base!&lt;/li&gt;
    &lt;li&gt;you want to generate something more complex than
        just record oriented XML, with nested structures
        for sub-tables for example&lt;/li&gt;
  &lt;/ul&gt;

&lt;h3&gt;Example&lt;/h3&gt;
  &lt;pre&gt;use DBIx-XML_RDB;
my $xmlout = DBIx::XML_RDB-&gt;new($datasource,
              &quot;ODBC&quot;, $userid, $password, $dbname) || die &quot;Failed to make new xmlout&quot;;
$xmlout-&gt;DoSql(&quot;select * from MyTable&quot;);
print $xmlout-&gt;GetData;
&lt;/pre&gt;

&lt;h3&gt;Personal Notes&lt;/h3&gt;
&lt;p&gt;I haven't used DBIx-XML_RDB too often (the first script
   I wrote with DBI did exactly the same thing!) but it
   looks like the right tool to generate XML out of a 
   relational table&lt;/p&gt;
</doctext>
  <type_nodetype>31663</type_nodetype>
  <author_user>9346</author_user>
  <createtime>2000-09-01 12:20:05</createtime>
  <itemdescription>Exports data from a relational data base as XML</itemdescription>
  <identifier></identifier>
  <node_id>30705</node_id>
  <usercomment></usercomment>
  <title>DBIx::XML_RDB</title>
  <nodeupdated>2005-08-14 20:42:10</nodeupdated>
</node>
