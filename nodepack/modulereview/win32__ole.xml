<node>
  <doctext>&lt;h4&gt;Description&lt;/h4&gt; For win32 platforms only. Win32::OLE module gives you Automation
access to Windows applications such as Word, Excel, Access, Rational Rose,
Lotus Notes, and many others. Which means that your Perl scripts can harness
these applications' capabilities, data and methods. Other Win32 perl modules
build on this module (for example DBD::ADO, the DBI driver for Access data
base).
&lt;p&gt;The module lets you create perl objects that act as proxies for the
application and it's components in your script. In the example below, $word
is your perl proxy connected to a running instance of Word. You can call
Word's Automation methods as perl methods on this object, and access the
Word properties as hash elements in your perl object.
&lt;p&gt;Automation-friendly Win32 applications expose hierarchies of objects
and collections. The module ties these to Perl hashes and arrays for you.
Your script just has to navigate the hierarchy and invoke the methods and
properties as needed.
&lt;p&gt;How do you know what methods and properties these objects support? Well,
you RTFM that comes with the applications, and you use Object browsers
that display a minimal documentation extracted from objects themselves
(actually from their type libraries). The Win32::OLE module comes with
Browser.html, a client-side dynamic html page. The perl code embedded in
this page uses Win32::OLE to extract information from type libraries, and
displays it in the html browser (IE required).
&lt;p&gt;A short example will illustrate&lt;/p&gt;
&lt;code&gt;
    #! perl -w
    use strict;
    use Win32::OLE;
    use Win32::OLE::Const 'Microsoft Word';
    ### open Word application and add an empty document
    ### (will die if Word not installed on your machine)
    my $word = Win32::OLE-&gt;new('Word.Application', 'Quit') or die;
    $word-&gt;{Visible} = 1;
    my $doc = $word-&gt;Documents-&gt;Add();
    my $range = $doc-&gt;{Content};

    ### insert some text into the document
    $range-&gt;{Text} = 'Hello World from Monastery.';
    $range-&gt;InsertParagraphAfter();
    $range-&gt;InsertAfter('Bye for now.');

    ### read text from the document and print to the console
    my $paras = $doc-&gt;Paragraphs;
    foreach my $para (in $paras) {
        print &quot;&gt;&gt; &quot; . $para-&gt;Range-&gt;{Text};
    }

    ### close the document and the application
    $doc-&gt;SaveAs(FileName =&gt; &quot;c:\\temp\\temp.txt&quot;, FileFormat =&gt; wdFormatDocument);
    $doc-&gt;Close();
    $word-&gt;Quit();
&lt;/code&gt;

&lt;h4&gt;Why use Win32::OLE&lt;/h4&gt;
&lt;br&gt;You work on a win32 platform and you
want to tap into existing applications from your Perl scripts.
&lt;br&gt;You work on creating Automation components
and you want to use Perl to test them.
&lt;h4&gt;Why not use Win32::OLE&lt;/h4&gt;
&lt;br&gt;You don't work on a win32 platform
&lt;br&gt;You do, but you prefered scripting language is VBScript (just kidding ;-)
&lt;h4&gt;Where is the doc, tuts and code&lt;/h4&gt;
&lt;br&gt;The module and it's html doc are included in the ActiveState Perl installation. 
Look up the TPJ article by Jan Dubois, the module's coauthor, for
an extended example.
Doc is also found on CPAN &lt;a href=&quot;http://theoryx5.uwinnipeg.ca/CPAN/data/Win32-OLE/Win32/OLE.html&quot;&gt;mirrors&lt;/a&gt;
&lt;br&gt;If you want to study the module code, it is on &lt;a href=&quot;http://search.cpan.org/search?dist=Win32-OLE-0.1402&quot;&gt;CPAN&lt;/a&gt;
(6700+ lines in ole.xs and 2500+ lines of perl in several packages - good reading).
&lt;br&gt;For introductory tutorials, check the &lt;a href=&quot;http://www.roth.net/conference/perl/2000/Perl2000.ppt&quot;&gt;ppt
presentation&lt;/a&gt; and demos ( &lt;a href=&quot;http://www.roth.net/conference/perl/2000/WordTest.pl&quot;&gt;Word&lt;/a&gt;, 
&lt;a href=&quot;http://www.roth.net/conference/perl/2000/Chart.pl&quot;&gt;Excel&lt;/a&gt;)
&lt;br&gt;Not enough ? You can find more short tutorials &lt;a href=&quot;http://savage.net.au/Perl-tutorials/ole-xl-demo1.pl&quot;&gt;down
under&lt;/a&gt; ...
&lt;p&gt;
</doctext>
  <type_nodetype>31663</type_nodetype>
  <author_user>31739</author_user>
  <createtime>2000-09-28 00:41:51</createtime>
  <itemdescription>&quot;Where Perl magic meets Windows&quot;</itemdescription>
  <identifier></identifier>
  <node_id>34310</node_id>
  <usercomment>Win32::OLE brings you the ability to control many win32 applications</usercomment>
  <title>Win32::OLE</title>
  <nodeupdated>2005-08-14 03:10:15</nodeupdated>
</node>
