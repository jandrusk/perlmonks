<node>
  <doctext>&lt;P&gt;To use this module&lt;BR&gt;

&lt;code&gt;use Spreadsheet::WriteExcel;&lt;/code&gt;

&lt;P&gt;As stated above this module allows you to write excel files &lt;BR&gt;without that annoying popup asking you how your file is &lt;BR&gt;delimeted when you open the file. It works very well, &lt;BR&gt;the only problem i had was trying to convert one of our flat files&lt;BR&gt; that is over 70,000 records in length. But after&lt;BR&gt; i checked the problem is documented, it can only produce files&lt;BR&gt; &lt;~ 7.0 MB.  heres on little program I have created 
with it
&lt;code&gt;

#!/usr/bin/perl
use Spreadsheet::WriteExcel;
print &quot;Enter the path to the file(ie /home/): &quot;;
$path = &lt;&gt;;
chomp($path);
print &quot;Enter the filename(ie data): &quot;;
$fname = &lt;&gt;;
chomp($fname);
$file = &quot;$path$fname&quot;;
my $workbook = Spreadsheet::WriteExcel-&gt;new(&quot;/tmp/$fname.xls&quot;);
   $worksheet1   = $workbook-&gt;addworksheet(sheet1);
   $worksheet2   = $workbook-&gt;addworksheet(sheet2);
   $worksheet3   = $workbook-&gt;addworksheet(sheet3);
   $format      = $workbook-&gt;addformat();
   $format-&gt;set_bold();
   $format-&gt;set_color('black');
   $format-&gt;set_align('center');
   $format-&gt;set_size('10');
open input, &quot;$file&quot; || die &quot;Can't open that file&quot;;
$k=0;
for (&lt;input&gt;){
chomp($_);
@data = split(/\t/,$_);
for ($i=0; $i&lt;=@data; $i++){
    $worksheet1-&gt;write($k, $i, $data[$i], $format);
   	}
$k++;
 }
&lt;/code&gt;
Good Luck &lt;BR&gt;
Rob   </doctext>
  <type_nodetype>31663</type_nodetype>
  <author_user>39719</author_user>
  <createtime>2000-11-03 20:03:00</createtime>
  <itemdescription>To write a spreadsheet in native excel binary form</itemdescription>
  <identifier></identifier>
  <node_id>39908</node_id>
  <usercomment>Very Useful module for me anyway :-)</usercomment>
  <title>Spreadsheet::WriteExcel</title>
  <nodeupdated>2005-08-15 10:46:33</nodeupdated>
</node>
