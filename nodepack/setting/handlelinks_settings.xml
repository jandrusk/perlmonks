<node>
  <type_nodetype>871</type_nodetype>
  <node_id>43235</node_id>
  <vars>
    <value>acronym</value>
    <key>abbr</key>
  </vars>
  <vars>
    <value>$escsuffix ? &quot;http://www.acronymfinder.com/af-query.asp?String=exact&amp;Acronym=$escsuffix&amp;Find=Find&quot; : (&quot;http://www.acronymfinder.com/&quot;, 'Acronym Finder')</value>
    <key>acronym</key>
  </vars>
  <vars>
    <value>my %root = (
      A =&gt; &quot;http://dev.perl.org/perl6/doc/design/apo/&quot;,
      E =&gt; &quot;http://dev.perl.org/perl6/doc/design/exe/&quot;,
      S =&gt; &quot;http://perlcabal.org/syn/&quot;,
      # default; subtly different to indicate a parsing problem
      X =&gt; &quot;http://www.perlcabal.org/syn/&quot;,
);
if (! $escsuffix) {
   ($root{S}, &quot;Perl 6 Synopses&quot;)
} elsif ($escsuffix =~ m!^([aes])(\d\d?)(?:%(?:2f|3a)(.*))?$!i) {
   my $page = uc($1).sprintf(&quot;%.02d&quot;,$2);
   my $root = $root{uc($1)} || $root{X};
   my $esc = $3 || &quot;&quot;;
   $esc =~ s/^(\d+)\z/line_$1/; # only useful for synopses
   $esc =~ s/%20/_/g;
   my $display = $suffix;
   if ($suffix =~ m!^[aes]\d\d?[:/](.*\D.*)!i) {
       $display = $1;
   };
   (&quot;$root$page.html#$esc&quot;, &quot;$display&quot;)
} else {
   # error in spec, just pass it through with a prefix
   &quot;$root{X}$escsuffix&quot;
};</value>
    <key>aes</key>
  </vars>
  <vars>
    <value>wolframalpha</value>
    <key>alpha</key>
  </vars>
  <vars>
    <value>my $git = &quot;http://perl5.git.perl.org/perl.git&quot;;
!$suffix 
  ? ( $git, &quot;Perl Source Code (git)&quot; )
: $suffix =~ /^\d+$/
  ? ( $git.&quot;?a=search&amp;h=HEAD&amp;st=commit&amp;sr=1&amp;s=%2F%2Fdepot.*&quot;.$suffix, &quot;find $suffix in perl.git commits&quot; )
: $suffix =~ /^[0-9a-f]{6,}$/
  ? ( $git.&quot;/commit/&quot;.$suffix, &quot;commit $suffix in perl.git&quot; )
: ( $git.&quot;/blob/HEAD:/&quot;.$suffix, &quot;$suffix in perl.git&quot; )
</value>
    <key>apc</key>
  </vars>
  <vars>
    <value>my $user = getNode( $suffix||$AUTHOR-&gt;{title}, 'user' );
return unless $user;
$title ||= &quot;my writeups&quot; if !$suffix;
$title ||= $user-&gt;{title}.&quot;'s writeups&quot;;
return(
    urlGen( { node_id =&gt; 6364, user =&gt; $user-&gt;{title} }, 1 ),
    $title,
);
</value>
    <key>by</key>
  </vars>
  <vars>
    <value>my $title= join '', map ucfirst($_), split /\W+/, $suffix;
my $mode= $title =~ y/A-Z//;
$mode= 1==$mode ? 'search=' : '';
return( &quot;http://www.c2.com/cgi/wiki?$mode$title&quot;, $suffix || 'Wiki Wiki Web' );
</value>
    <key>c2</key>
  </vars>
  <vars>
    <value>my $mode= $VARS-&gt;{cpan_link_args} || 'mode=module';
return $escsuffix ? &quot;http://search.cpan.org/search?$mode&amp;query=$escsuffix&quot; : ( &quot;http://www.cpan.org/&quot;, 'CPAN' )</value>
    <key>cpan</key>
  </vars>
  <vars>
    <value>duckduckgo</value>
    <key>ddg</key>
  </vars>
  <vars>
    <value>$escsuffix ? &quot;http://www.dict.org/bin/Dict?Form=Dict2&amp;Database=*&amp;Query=$escsuffix&quot; : ( &quot;http://www.dict.org/&quot;, 'Dict.org' )</value>
    <key>dict</key>
  </vars>
  <vars>
    <value>return( &quot;http://search.cpan.org/&quot;, 'CPAN' ) unless $suffix;
for( my $copy= $suffix ) {
    tr#-:/ #-#s;
    return &quot;http://search.cpan.org/dist/$_&quot;;
}
</value>
    <key>dist</key>
  </vars>
  <vars>
    <value>return( &quot;http://perldoc.perl.org/&quot;, 'Perl documentation' ) unless $suffix;
my $func= getVars(getNode('perl keyword list setting','setting'));
if( $func-&gt;{$suffix} ) {
    &quot;http://perldoc.perl.org/functions/$escsuffix.html&quot;
}
elsif( $suffix =~ /^[\$\@%]/ ) {
    &quot;http://perldoc.perl.org/perlvar.html#$escsuffix&quot;
}
else {
    my ( $page, $anchor ) = split '#', $suffix, 2;
    my ( $uri, $title ) = ( &quot;http://perldoc.perl.org/&quot; );
    $uri .= join '/', map $q-&gt;escape( $_ ), split /::/, $page;
    $uri .= '.html';
    if( defined $anchor ) {
        $uri .= '#' . $q-&gt;escape( $anchor );
        ( $title = $q-&gt;escapeHTML( $q-&gt;unescape( $anchor ) ) ) =~ y/-/ /;
    }
    ( $uri, ( $title ) x!! defined $title );
}</value>
    <key>doc</key>
  </vars>
  <vars>
    <value>doc</value>
    <key>docs</key>
  </vars>
  <vars>
    <value>$escsuffix ? 'https://duckduckgo.com/html/?q='.$escsuffix : ( 'https://duckduckgo.com/html/', 'DuckDuckGo' )
</value>
    <key>duckduckgo</key>
  </vars>
  <vars>
    <value>!$suffix
  ? ( &quot;http://www.everything2.org/&quot;, 'Everything2' )
  : $suffix =~ /\D/
  ? &quot;http://www.everything2.org/?node=$escsuffix&quot;
  : &quot;http://www.everything2.org/?node_id=$suffix&quot;
</value>
    <key>e2</key>
  </vars>
  <vars>
    <value>http</value>
    <key>ftp</key>
  </vars>
  <vars>
    <value>my %repos= (
   git =&gt; &quot;http://git.kernel.org/?p=git/git.git&quot;,
   p5git =&gt; &quot;http://perl5.git.perl.org/perl.git&quot;,
   apc =&gt; 'p5git',
);
my $repo= $repos{ $prefix }
   or  return;
$repo= $repos{ $repo }
    while  $repos{ $repo };
return( $repo, &quot;$prefix://&quot; )
   if  ! $suffix;
my( $search, $isRe, $pattern );
my %desc;
if(  $suffix =~ s/(?:^|;)(([agdn])\w*([=~])(.*)\3$)//i  ) {
   my %type= qw( a author g grep d pickaxe n commit );
   ( $search, $isRe, $pattern )= ( $type{ lc $2 }, '~' eq $3, $4 );
   $desc{end}= $1;
}
my $commit= 'HEAD';
my( $patch, $file, $type );
for(  split /;/, $suffix  ) {
   if(  /^(?:p(?:atch)?=)?(\d{1,5})$/  ) {
       $desc{search}= &quot;patch=$1&quot;;
       $pattern= '//depot/[^ ]*@' . $1 . '([^0-9]|$)';
       $search= 'commit';
       $isRe= 1;
   } elsif(  /^[\da-f]{3,}$/i  ) {
       $desc{commit}= &quot;commit=$_&quot;;
       $commit= $_;
   } elsif(  /^c(?:ommit)?=(.*)$/i  ) {
       $desc{commit}= &quot;commit=$1&quot;;
       $commit= $1;
   } elsif(  /^n(?:otes?)?([=~])(.*)$/i  ) {
       $desc{search}= &quot;notes$1$2&quot;;
       ( $search, $isRe, $pattern ) = ( 'commit', '~' eq $1, $2 );
   } elsif(  /^a(?:uthor)?([=~])(.*)$/i  ) {
       $desc{search}= &quot;author$1$2&quot;;
       ( $search, $isRe, $pattern ) = ( 'author', '~' eq $1, $2 );
   } elsif(  /^g(?:rep)?([=~])(.*)$/i  ) {
       $desc{search}= &quot;grep$1$2&quot;;
       ( $search, $isRe, $pattern ) = ( 'grep', '~' eq $1, $2 );
   } elsif(  /^d(?:iff)?([=~])(.*)$/i  ) {
       $desc{search}= &quot;diff$1$2&quot;;
       ( $search, $isRe, $pattern ) = ( 'pickaxe', '~' eq $1, $2 );
   } else {
       $desc{file}= $_;
       if(  s-/$--  ) {
           $file= $_;  $type= 'tree';
       } elsif(  s-!$--  ) {
           $file= $_;  $type= 'blob_plain';
       } elsif(  s-\.$--  ) {
           $file= $_;  $type= 'blob';
       } else {
           $file= $_;  $type= 'history';
       }
   }
}
delete $desc{end}       # This gets parsed off first
   if  $desc{search};   # Only the last-parsed search gets used
my $desc= join ';', grep $_, @desc{ qw&lt; commit search file end &gt; };
my $url= $repo;
if(  $search  ) {
   return          # Can't mix search and file path
       if  $type;
   $url .= join '',
       $url =~ /\?/  ?  '&amp;'  :  '?',
       &quot;a=search&amp;h=$commit&amp;st=$search&amp;s=&quot;,
       $q-&gt;escape( $pattern ),
       $isRe ? '&amp;sr=1' : '';
} elsif(  $type  ) {
   $url .= join '',
       &quot;/$type/&quot;,
       $q-&gt;escape( $commit ),
       ':/',
       $file;
} else {
   $url .= join '',
       '/commit/',
       $q-&gt;escape( $commit );
}
return( $url, &quot;$prefix://$desc&quot; );
</value>
    <key>git</key>
  </vars>
  <vars>
    <value>$escsuffix ? &quot;http://www.google.com/search?q=$escsuffix&quot; : ( &quot;http://www.google.com/&quot;, 'Google' )</value>
    <key>google</key>
  </vars>
  <vars>
    <value>!$suffix ? ( '?node_id=43037#general', '[href://]' ) : $suffix =~ /^(javascript|about|mocha):/i ? '' : $suffix
</value>
    <key>href</key>
  </vars>
  <vars>
    <value>$suffix ? ( $linkspec, $q-&gt;escapeHTML($linkspec) ) : ( '?node_id=43037#web', &quot;[$prefix://]&quot; )</value>
    <key>http</key>
  </vars>
  <vars>
    <value>http</value>
    <key>https</key>
  </vars>
  <vars>
    <value>return if $suffix =~ /\D/;
if( !$suffix ) {
    $suffix= 17441;
    $title ||= '&amp;#91;id://&amp;#93;';
}
return linkNode( $suffix, '', {}, {asList=&gt;1} );</value>
    <key>id</key>
  </vars>
  <vars>
    <value>$escsuffix ? &quot;http://www.imdb.com/find?s=all&amp;q=$escsuffix&quot; : ( &quot;http://www.imdb.com/&quot;, 'IMDB' )</value>
    <key>imdb</key>
  </vars>
  <vars>
    <value>return('?node=Message+Inbox',$title||'Message Inbox') unless $suffix;
( '', htmlcode( 'toInbox', $suffix, $title, '(%d)' ) )</value>
    <key>inbox</key>
  </vars>
  <vars>
    <value>$suffix =~ tr/0-9Xx//cd;
( &quot;http://isbn.nu/$suffix&quot;, $q-&gt;escapeHTML(&quot;ISBN $suffix&quot;) )</value>
    <key>isbn</key>
  </vars>
  <vars>
    <value>$suffix ? &quot;http://www.dict.org/bin/Dict?Form=Dict2&amp;Database=jargon&amp;Query=$escsuffix&quot; : ( &quot;http://www.catb.org/~esr/jargon/html/&quot;, 'The Jargon File' )</value>
    <key>jargon</key>
  </vars>
  <vars>
    <value>$escsuffix =~ /^\d+$/ ? &quot;http://javajunkies.org/?node_id=$escsuffix&quot; : &quot;http://javajunkies.org/?node=$escsuffix&quot;</value>
    <key>jj</key>
  </vars>
  <vars>
    <value>kobes</value>
    <key>kobe</key>
  </vars>
  <vars>
    <value>$escsuffix ? &quot;http://cpan.uwinnipeg.ca/search?query=$escsuffix&amp;mode=module&quot; : ( &quot;http://cpan.uwinnipeg.ca/&quot;, 'Kobesearch' )</value>
    <key>kobes</key>
  </vars>
  <vars>
    <value>href</value>
    <key>link</key>
  </vars>
  <vars>
    <value>$suffix ? &quot;http://livejournal.com/users/$suffix&quot; : ( &quot;http://livejournal.com/&quot;, 'LiveJournal' )</value>
    <key>lj</key>
  </vars>
  <vars>
    <value>$suffix= &quot;&quot;  if $suffix =~ /^now$/i;
return( '', htmlcode( 'parseTimeInString','', $suffix, undef, 1 ) );</value>
    <key>localtime</key>
  </vars>
  <vars>
    <value>$escsuffix ? &quot;http://www.google.com/search?q=$escsuffix&amp;btnI=I&quot;  : ( &quot;http://www.google.com/&quot;, 'Google' )</value>
    <key>lucky</key>
  </vars>
  <vars>
    <value>my $l = 'http://www.freebsd.org/cgi/man.cgi';
my $t = 'UNIX Man Pages';
if(  $suffix  ) {
    my $p= '()/,;=|';
    my( $page, $sect, $os )= $suffix =~
        m{^([^$p]+)(?:[$p]+(\d+|n))?(?:[$p]+([^$p].*))?$};
    $os ||= 'suse';
    $os =~ s{^suse[\s+]*([\d.]*)$}{
        'SuSE+Linux/i386+' . ( $1 || '11.3' )
    }ie;
    $os =~ s{^(?:free)?bsd[\s+]*([\d.]*)$}{
        'FreeBSD+' . ( $1 || '8.0' ) . '-RELEASE'
    }ie;
    my @a;
    push @a, &quot;query=$page&quot;   if $page;
    push @a, &quot;sektion=$sect&quot; if $sect;
    push @a, &quot;manpath=$os&quot;   if $os;
    $l .= '?' . join '&amp;', @a;
    $t = $suffix;
}
return( $l, $t );</value>
    <key>man</key>
  </vars>
  <vars>
    <value>my $mw= &quot;http://mathworld.wolfram.com/&quot;;
$escsuffix =~ /[.]html$/
  ? $mw.$escsuffix :
$escsuffix
  ? $mw.&quot;search/?query=$escsuffix&quot;
  : ( $mw, 'MathWorld' )
</value>
    <key>mathworld</key>
  </vars>
  <vars>
    <value>$escsuffix ? &quot;http://metacpan.org/search?q=$escsuffix&quot; : ( &quot;http://metacpan.org/&quot;, 'MetaCPAN' )</value>
    <key>metacpan</key>
  </vars>
  <vars>
    <value>module</value>
    <key>mod</key>
  </vars>
  <vars>
    <value>$escsuffix ? &quot;http://search.cpan.org/perldoc?$escsuffix&quot; : ( &quot;http://search.cpan.org/&quot;, 'CPAN' )</value>
    <key>module</key>
  </vars>
  <vars>
    <value>my( $user, $msg )= split /&lt;/, $suffix, 2;
my $url= &quot;?node_id=762476&quot;;
my $title= &quot;/msg&quot;;
if( $user ) {
    $url .= &quot;;sendto=&quot; . $q-&gt;escape($user);
    $title .= $q-&gt;escapeHTML( &quot; [$user]&quot; );
}
if( $msg ) {
    $url .= &quot;;replytotext=&quot; . $q-&gt;escape($msg);
    $title .= &quot; ?&quot; if ! $user;
    $title .= $q-&gt;escapeHTML( &quot; $msg&quot; );
}
return( $url, $title );
</value>
    <key>msg</key>
  </vars>
  <vars>
    <value>( '', htmlcode('node_link','',$fullspec,$suffix,$title) )</value>
    <key>node</key>
  </vars>
  <vars>
    <value>git</value>
    <key>p5git</key>
  </vars>
  <vars>
    <value>$title ||= &quot;my scratchpad&quot;   if  ! $suffix;
return( '', htmlcode( 'scratchpad_link','', $suffix||$AUTHOR-&gt;{title}, $title, {} ) );</value>
    <key>pad</key>
  </vars>
  <vars>
    <value>my $class = 'patcheslink';
my $link = linkNodeTitle('Patch Lister|'.($title||'patches'));
if ( $DB-&gt;sqlSelect( 'MAX(patch_id)', 'patch' ) &gt; $VARS-&gt;{patchlisterlast} ) {
  $class .= ' updated';
  $link .= '&lt;span class=&quot;newpatches&quot;&gt;(*)&lt;/span&gt;';
}
( '', qq(&lt;span class=&quot;$class&quot;&gt;$link&lt;/span&gt;) )
</value>
    <key>patches</key>
  </vars>
  <vars>
    <value>$escsuffix
  ? join( '',
        &quot;http://www.google.com/search?q=&quot;,
        $escsuffix,
        &quot;%20site%3Aperldoc.perl.org&quot;
    )
  : ( &quot;http://perldoc.perl.org/&quot;, 'Perl documentation' )</value>
    <key>perldoc</key>
  </vars>
  <vars>
    <value>( '', htmlcode('pmdev_link','',$fullspec) )</value>
    <key>pmdev</key>
  </vars>
  <vars>
    <value>(
    &quot;http://www.faqs.org/rfcs/rfc$suffix.html&quot;,
    &quot;RFC &quot; . $escsuffix,
)</value>
    <key>rfc</key>
  </vars>
  <vars>
    <value>( '', htmlcode( 'linkRJE','', $title, '', $suffix ) )</value>
    <key>rje</key>
  </vars>
  <vars>
    <value>!$suffix 
? ( &quot;http://rt.cpan.org/&quot;, 'RT.CPAN' )
: $suffix =~ /^\d+$/
? ( &quot;http://rt.cpan.org/Public/Bug/Display.html?id=$suffix&quot;, $fullspec )
: ( $suffix =~ /-/ &amp;&amp; $suffix !~ /[^-.\w]/ )
? ( &quot;http://rt.cpan.org/Public/Dist/Display.html?Name=$escsuffix&quot;, $fullspec )
: ( &quot;http://rt.cpan.org/Public/Search/Simple.html?q=$escsuffix&quot;, $fullspec )
</value>
    <key>rt</key>
  </vars>
  <vars>
    <value>$escsuffix 
? &quot;http://www.urbandictionary.com/define.php?term=$escsuffix&quot;
: ( &quot;http://www.urbandictionary.com/&quot;, 'UrbanDictionary' )</value>
    <key>ud</key>
  </vars>
  <vars>
    <value>wolframalpha</value>
    <key>wa</key>
  </vars>
  <vars>
    <value>my $lang= $VARS-&gt;{wp_lang} || 'en';
$suffix ? &quot;http://$lang.wikibooks.org/wiki/Special:Search?search=$suffix&quot; : ( &quot;http://$lang.wikibooks.org/&quot;, 'Wikibooks' )</value>
    <key>wb</key>
  </vars>
  <vars>
    <value>( '', htmlcode( 'linkWiki','', $suffix, $title, '(*)' ) )</value>
    <key>wiki</key>
  </vars>
  <vars>
    <value>wp</value>
    <key>wikipedia</key>
  </vars>
  <vars>
    <value>my $lang= $VARS-&gt;{wp_lang} || 'en';
$escsuffix ? 
&quot;http://$lang.wiktionary.org/wiki/Special:Search?search=$escsuffix&quot; : ( &quot;http://$lang.wiktionary.org/&quot;, 'Wiktionary' )</value>
    <key>wikt</key>
  </vars>
  <vars>
    <value>wikt</value>
    <key>wiktionary</key>
  </vars>
  <vars>
    <value>$escsuffix ? &quot;http://www.WolframAlpha.com/input/?i=&quot;.$escsuffix : ( &quot;http://www.WolframAlpha.com/examples/&quot;, 'Wolfram|Alpha' )</value>
    <key>wolframalpha</key>
  </vars>
  <vars>
    <value>my $lang= $VARS-&gt;{wp_lang} || 'en';
$escsuffix ? 
&quot;http://$lang.wikipedia.org/wiki/Special:Search?search=$escsuffix&quot; : ( &quot;http://$lang.wikipedia.org/&quot;, 'Wikipedia' )</value>
    <key>wp</key>
  </vars>
  <vars>
    <value>my $lang= $VARS-&gt;{wp_lang} || 'en';
$escsuffix ? 
&quot;http://$lang.wikiquote.org/wiki/Special:Search?search=$suffix&quot; : ( &quot;http://$lang.wikiquote.org/&quot;, 'Wikiquote' )</value>
    <key>wq</key>
  </vars>
  <vars>
    <value>my $lang= $VARS-&gt;{wp_lang} || 'en';
$escsuffix ? 
&quot;http://$lang.wikisource.org/wiki/Special:Search?search=$suffix&quot; : ( &quot;http://$lang.wikisource.org/&quot;, 'Wikisource' )</value>
    <key>ws</key>
  </vars>
  <vars>
    <value>($suffix =~ /\D/ ?
    &quot;http://www.google.com/search?q=site%3Axkcd.com+$escsuffix&amp;btnI&quot; : 
    &quot;http://xkcd.com/$escsuffix&quot; . ( $suffix ? '/' : '' )
), $q-&gt;escapeHTML($linkspec)
</value>
    <key>xkcd</key>
  </vars>
  <author_user>979</author_user>
  <title>handlelinks settings</title>
  <createtime>2000-11-24 16:05:40</createtime>
  <nodeupdated>2005-08-11 23:36:46</nodeupdated>
</node>
