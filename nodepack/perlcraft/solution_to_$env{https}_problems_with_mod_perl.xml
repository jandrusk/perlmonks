<node>
  <doctext>I'm writing a PerlAccessHandler for Apache in mod_perl 
that need to verify if you are coming in on HTTPS or 
HTTP.  Because the PerlAccessHandler is declared in the 
main site configuration, it is inherited by the SSL 
virutal host running at the same FQDN.

I've found that the $ENV{HTTPS} mechanism is flaky.  Even 
$r-&gt;subprocess_env('HTTPS') is sorta flaky.  Sometimes 
$ENV{HTTPS} is showing up on requests from HTTP and 
sometimes from HTTPS.

My solution is in the VirtualHost config for the SSL server to add:

&lt;code&gt;
&lt;Location /&gt;
        AuthName &quot;Intranet&quot;
        AuthType Basic
        require valid-user 
        PerlSetVar HTTPS &quot;ON&quot;
        SSLOptions +StdEnvVars
&lt;/Location&gt;
&lt;/code&gt;

In my PerlAccessHandler, I check:

&lt;code&gt;
        if ($r-&gt;dir_config('HTTPS') eq &quot;ON&quot;) {
                return DECLINED;
        } else {
                return OK;
        }
&lt;/code&gt;

Mechanism now works flawlessly.  If you're http at this 
point in the logic, we know you're ok and can bypass the 
PerlAuthenHandler and PerlAuthzHandler.

Of course before that I perform this check:

&lt;code&gt;
        if (($d-&gt;{nav_url_secure_flag} == 1) &amp;&amp; ($r-&gt;dir_config('HTTPS') ne &quot;ON&quot;)) {
                $r-&gt;header_out( Location =&gt; &quot;https://portal/$url&quot; );
                return REDIRECT;
        }
&lt;/code&gt;

Just to make sure that the content needs to be secure and 
is coming over HTTPS, if not then redirect.</doctext>
  <type_nodetype>121</type_nodetype>
  <node_id>217327</node_id>
  <author_user>961</author_user>
  <title>Solution to $ENV{HTTPS} Problems with mod_perl</title>
  <createtime>2002-12-03 15:01:08</createtime>
  <nodeupdated>2005-06-08 11:48:12</nodeupdated>
</node>
