<node>
  <doctext>#!/usr/bin/perl
use strict;

sub making_of_list {

my $ftp=&quot;c:/ftproot&quot;;
opendir (FTP, $ftp) || die $!;
my @file = readdir FTP;
close FTP;
my $a=0;
foreach (@file) {
	
	open (FILES, &quot;+&gt;&gt;c:/docu/ftproot.txt&quot;) || die $!;
	if (&quot;$file[$a]&quot; =~ /txt/i) {
		print FILES $file[$a],&quot;\n&quot;;
	} elsif (&quot;$file[$a]&quot; =~ /doc/i) {
		print FILES $file[$a],&quot;\n&quot;;	
	} elsif (&quot;$file[$a]&quot; =~ /mpd/i) {
		print FILES $file[$a],&quot;\n&quot;;
	} elsif (&quot;$file[$a]&quot; =~ /mta/i) {
		print FILES $file[$a],&quot;\n&quot;;
	}else {
	}
$a++;
close FILES;
}

############################################################

sub copy_from_root {

use File::Copy;
my $ftplist = &quot;c:/docu/ftproot.txt&quot;;
open (FILE, $ftplist) || die $!;
my @disk = &lt;FILE&gt;;
chomp @disk = &lt;FILE&gt;;
$b = 0;
foreach (@disk) {
	my $report = $disk[$b];
	print $report,&quot;\n&quot;;
	if (&quot;$report&quot; =~ /^afinv/i) {
		my $reports = $report;
		$reports =~ s/.mta/.mpd/ig;
		my $truth=&quot;c:/scripts/attempt/$reports&quot;;
		my $inv=&quot;c:/invoice/$reports&quot;;
		my $apollo=&quot;c:/reports/$reports&quot;;
		my $daym=(localtime(time()))[3];
		my $afis3=&quot;c:/afis3too/$daym/$reports&quot;;
		my $source = &quot;c:/ftproot/$report&quot;;
		foreach my $dest ($truth, $afis3, $apollo, $inv) {
			copy ($source, $dest);
		}
		unlink $source;
	} elsif (&quot;$report&quot; =~ /^csinv/i) {
		my $reports = $report;
		$reports =~ s/.mta/.mpd/ig;
		my $truth=&quot;c:/scripts/attempt/$reports&quot;;
		my $inv=&quot;c:/invoice/$reports&quot;;
		my $apollo=&quot;c:/reports/$reports&quot;;
		my $daym=(localtime(time()))[3];
		my $afis3=&quot;c:/afis3too/$daym/$reports&quot;;
		my $source = &quot;c:/ftproot/$report&quot;;
		foreach my $dest ($truth, $afis3, $apollo, $inv) {
			copy ($source, $dest);
		}
		unlink $source;
	} elsif (&quot;$report&quot; =~ /^sfinv/i) {		
		my $reports = $report;
		$reports =~ s/.mta/.mpd/ig;
		my $truth=&quot;c:/scripts/attempt/$reports&quot;;
		my $inv=&quot;c:/invoice/$reports&quot;;
		my $apollo=&quot;c:/reports/$reports&quot;;
		my $daym=(localtime(time()))[3];
		my $afis3=&quot;c:/afis3too/$daym/$reports&quot;;
		my $source = &quot;c:/ftproot/$report&quot;;
		foreach my $dest ($truth, $afis3, $apollo, $inv) {
			copy ($source, $dest);
		}
		unlink $source;
	} elsif (&quot;$report&quot; =~ /doc/i) {
		my $reports = $report;
		$reports =~ s/doc/txt/ig;
		my $truth=&quot;c:/scripts/attempt/$reports&quot;;
		my $apollo=&quot;c:/reports/$reports&quot;;
		my $daym=(localtime(time()))[3];
		my $afis3=&quot;c:/afis3too/$daym/$reports&quot;;
		my $source = &quot;c:/ftproot/$report&quot;;
		foreach my $dest ($truth, $afis3, $apollo) {
			copy ($source, $dest);
		}
		unlink $source;
	} elsif (&quot;$report&quot; =~ /mta/i) {
		my $reports = $report;
		$reports =~ s/.mta/.mpd/ig;
		my $truth=&quot;c:/scripts/attempt/$reports&quot;;
		my $apollo=&quot;c:/reports/$reports&quot;;
		my $daym=(localtime(time()))[3];
		my $afis3=&quot;c:/afis3too/$daym/$reports&quot;;
		my $source = &quot;c:/ftproot/$report&quot;;
		foreach my $dest ($truth, $afis3, $apollo) {
			copy ($source, $dest);
		}
		unlink $source;		
	} else {
		my $reports = $report;
		my $truth=&quot;c:/scripts/attempt/$reports&quot;;
		my $listing=&quot;c:/scripts/fink.txt&quot;;
		my $apollo=&quot;c:/reports/$reports&quot;;
		my $daym=(localtime(time()))[3];
		my $afis3=&quot;c:/afis3too/$daym/$reports&quot;;
		my $source = &quot;c:/ftproot/$report&quot;;
		foreach my $dest ($truth, $afis3, $apollo) {
			copy ($source, $dest);
		}
		unlink $source;
	}
	my $listing=&quot;c:/scripts/fink.txt&quot;;
	open (LST,&quot;+&gt;&gt;$listing&quot;)or die &quot;$!&quot;;
	my $paper = sprintf(&quot;%.6s&quot;, $report);
	my $bbat=&quot;.bat&quot;;
	my $pap=join(&quot;&quot;,$paper,$bbat);
	$pap =~ tr/a-z/A-Z/;
	print LST $pap,&quot;\n&quot;;
	close LST;
	$b++;
}
}
}
############################################################

sub make_list_for_batches {

my $lst = &quot;c:/scripts/fink.txt&quot;;

open (LST, $lst) || die $!;
my (@array, %hash);
foreach (&lt;LST&gt;) {
	push (@array, $_) unless (defined($hash{$_}));
	$hash{$_} = 1;
};
close (LST);
open (LST, &quot;&gt;$lst&quot;) || die $!;
print LST join(&quot;&quot;, @array);
close (LST);
}

############################################################

sub this_gets_a_listing_of_the_batch_files {

my $bats=&quot;c:/reports&quot;;
opendir (BATS, $bats) || die $!;
my @bat = readdir BATS;
close BATS;
my $r=0;
foreach (@bat) {
	if (&quot;$bat[$r]&quot; =~ /bat/i) {
		open (STAB, &quot;+&gt;&gt;c:/scripts/bats.txt&quot;) || die $!;
		print STAB $bat[$r],&quot;\n&quot;;
	}
	$r++;
}
close STAB;
}

############################################################

sub wow {

my $batch=&quot;c:/scripts/bats.txt&quot;;
my $fink = &quot;c:/scripts/fink.txt&quot;;
my $wow=&quot;c:/scripts/wow.txt&quot;;
open (BAT, &quot;+$batch&quot;) or die $!;
open (LST, &quot;+$fink&quot;) or die $!;
my @batch = &lt;BAT&gt;;
my @lst = &lt;LST&gt;;
my $c = 0;
foreach (@lst){
	my $sub=$lst[$c];
	my $d=0;
	foreach (@batch){
		my $sub2 = $batch[$d];
		if (&quot;$sub2&quot; =~ /$sub/ig){
			open (WOW, &quot;+&gt;&gt;$wow&quot;) or die $!;
			print WOW $batch[$d];
			print &quot;Working...\n&quot;;
		}$d++;
	}$c++;
}
close BAT;
close LST;
close WOW;
}

############################################################

sub run_the_batches {

my $copy=&quot;c:/scripts/wow.txt&quot;;
open (COPY, &quot;+$copy&quot;) || die $!;
my @co = &lt;COPY&gt;;
chomp @co = &lt;COPY&gt;;
my $s=0;
my $output = &quot;c:/reports/$co[$s]&quot;;
foreach (@co) {
	system ($output);	
	$s++;
}

}

############################################################

sub delete {

my $fink = &quot;c:/scripts/fink.txt&quot;;
my $bat = &quot;c:/scripts/bats.txt&quot;;
my $wowo = &quot;c:/scripts/wow.txt&quot;;
my $ftpr = &quot;c:/docu/ftproot.txt&quot;;

open (FINK, &quot;+&gt;$fink&quot;) || die &quot;$!&quot;;
open (BAT, &quot;+&gt;$bat&quot;) || die &quot;$!&quot;;
open (WOW, &quot;+&gt;$wowo&quot;) || die &quot;$!&quot;;
open (FTP, &quot;+&gt;$ftpr&quot;) || die &quot;$!&quot;;

unlink &lt;FINK&gt;;
unlink &lt;BAT&gt;;
unlink &lt;WOW&gt;;
unlink &lt;FTP&gt;;

}

#
#
#
#
#
############################################################

############################################################


print &quot;\n\n\n&quot;;
print &quot;         Robco Inc. Presents :   \n\n\n&quot;;
print &quot;     The NEW, AMAZING, INCREDIBLE ....\n\n\n&quot;;
print &quot;      Robco Document Rotisserie!!!!!\n\n\n&quot;;
print &quot;Just RENDER it, THEN don't REMEMBER it!!!!!\n\n&quot;;
print &quot;         It's just that easy.\n\n\n\n\n&quot;;

while (1) {

	my $clock = localtime;
	print $clock,&quot;\n&quot;;
	print &quot;sleeping ....  ZzZzZzZzZz......\n&quot;;
	sleep (10);
	print &quot;OK! OK!  ....  I'm awake!  ....  I'm awake\n&quot;;
	&amp;copy_from_root;
	&amp;make_list_for_batches;
	&amp;this_gets_a_listing_of_the_batch_files;
	&amp;wow;
	&amp;run_the_batches;
	&amp;delete;
	&amp;making_of_list;	
}

# Edited by Ovid 2001/06/15
# Shortened title from:  a program to go find documents in a file then copy
# them to seperate folders, delete them from the original folder, then run a
# batch to process the individual files with their respected batch files</doctext>
  <type_nodetype>121</type_nodetype>
  <node_id>88943</node_id>
  <author_user>79499</author_user>
  <title>Document maintenance script</title>
  <createtime>2001-06-15 21:14:33</createtime>
  <nodeupdated>2005-07-21 01:27:21</nodeupdated>
</node>
