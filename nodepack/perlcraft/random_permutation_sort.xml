<node>
  <doctext># for those times when Perl's built-in sort is just too fast

use strict;

my @data = qw(7 6 5 4 3 2 1 0) ;

rpsort(\@data);
print &quot;$_\t&quot; foreach (@data);

exit;

# a random permutation sort
# ref. Perl Cookbook recipe 4.17 for the shuffle

sub rpsort {
	my $list = shift;
	my ($k,$j);

try_again:
	for ($j = @$list; --$j; ) {
		$k = int rand($j+1);
		next if ($j == $k);
		@$list[$j, $k] = @$list[$k, $j];
	}

	for ($j = 0 ; $j &lt; (@$list -1); $j++) {
		goto try_again if (@$list[$j] &gt; @$list[$j+1]);
	}
}
</doctext>
  <type_nodetype>121</type_nodetype>
  <node_id>96627</node_id>
  <author_user>79471</author_user>
  <title>Random Permutation Sort</title>
  <createtime>2001-07-13 23:35:23</createtime>
  <nodeupdated>2005-08-15 06:58:36</nodeupdated>
</node>
