<node>
  <doctext>#!/usr/bin/perl -w

# Hi Monks,
#
# This subroutine might come in handy when having to work with dates in their
# various formats. This sub was meant to work similar to sprintf()
#
# You can use the following variables:
#
# %s    Seconds
# %m    Minutes
# %h    Hours
# %D    Day of Month
# %M    Month of Year
# %y    Year (2-digits)
# %Y    Year (4-digits)
#
# GetDate() also has a second (optional) parameter, which is the number of
# days from now.
#
# Nr:     Day:
# -1      yesterday
# 0       today (optional)
# 1       tomorrow
# 2       the day after tomorrow ... et cetera
#
# Hope you like it, Leon

use strict;

sub GetDate($;$)
{
 my ($s,$m,$h,$D,$M,$y,$Y,$Inp)=((localtime(time-(-($_[1]||0)*86400)))[0..5,5],shift||&quot;&quot;);
 $M++; $y%=100; $Y+=1900;
 $Inp=~s/%([\d.-]*)([smhDMYy])/sprintf(&quot;%$1d&quot;,eval &quot;\$$2&quot;)/ge;
 $Inp;
}

# Examples

#                                                               Output:
print GetDate(&quot;%.2D-%.2M-%.4Y,%.2h:%.2m:%.2s\n&quot;);               # '21-05-2001,11:55:01' + &quot;\n&quot;
print GetDate(&quot;%.2D-%.2M-%.4Y,%.2h:%.2m:%.2s\n&quot;,-22);           # '29-04-2001,11:55:01' + &quot;\n&quot;
print GetDate(&quot;%.2D-%.2M-%.4Y,%.2h:%.2m:%.2s\n&quot;,180);           # '17-11-2001,11:55:01' + &quot;\n&quot;
print GetDate(&quot;time: %.2h:%.2m date: %.2D/%.2M/%.4Y\n&quot;);        # 'time: 11:55 date: 21/05/2001' + &quot;\n&quot;
print GetDate(&quot;%.2D%.2M%.2y&quot;);                                  # '210501'
print GetDate(&quot;%.2s seconds\n&quot;);                                # '01 seconds' + &quot;\n&quot;
print GetDate(&quot;%s seconds\n&quot;);                                  # '1 seconds' + &quot;\n&quot;
</doctext>
  <type_nodetype>121</type_nodetype>
  <node_id>83720</node_id>
  <author_user>11967</author_user>
  <title>Subroutine for returning a date, similar to sprintf</title>
  <createtime>2001-05-28 12:22:16</createtime>
  <nodeupdated>2005-08-05 19:12:28</nodeupdated>
</node>
