<node>
  <doctext>This code came from my desire to use perl for something
besides CGI, which is my current perl-y focus.
I expected slightly different behavior from
File::Find::file, though this may be my Win background
shining through.
Put simply, this will traverse a filesystem, and determine
the # of files based on extention. Again, this was more to
keep the programming muscles limber; I plan on using this as a shell for more complex things. I do appreciate any
comments you have, however.
&lt;code&gt;
#use warnings;
use strict;
use File::Find;

my %hash;
my @temp;

File::Find::find (\&amp;wanted,&quot;c:\\&quot;);
my @keys = keys (%hash);
@keys = sort_by_value (\%hash);


print &quot;-&quot;x20,&quot;\n&quot;;
foreach my $key(@keys) {if ($key =~ /^$/) {print &quot;no ext\t:\t&quot;}else{  print &quot;$key\t:\t&quot;}; print $hash{$key},&quot;\n&quot;}

sub sort_by_value {
    my %hash = %{shift()};
    sort {$hash {$a} &lt;=&gt; $hash{$b}  } keys %hash;
}


sub wanted {
my @file ;
my $fname;
    #   don't attempt to read a directory.
    if (-d $_) {return};
    $fname = $File::Find::name;
    #   turn any '/' into a '\'
    #   then make sure that any '\\' get turned into '\'
    $fname =~ s#\/#\\#g;
    $fname =~ s#\\\\#\\#;
    @temp= split  /\./, $_;
    #   mmm. autovivification
    $hash{@temp[1]}++
}
&lt;/code&gt;</doctext>
  <type_nodetype>121</type_nodetype>
  <node_id>42965</node_id>
  <author_user>24736</author_user>
  <title>file ext counter.</title>
  <createtime>2000-11-22 15:59:06</createtime>
  <nodeupdated>2005-07-19 14:08:39</nodeupdated>
</node>
