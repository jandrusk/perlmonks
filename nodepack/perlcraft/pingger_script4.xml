<node>
  <doctext>#!/usr/bin/perl
use warnings;
use Net::Ping;
use Socket;

print &quot;Enter the subnet you wish to scan just the first 3 octet's\n&quot;;
$ipnumber =&lt;STDIN&gt;;
chomp $ipnumber;
@iparray = map $ipnumber. &quot;.$_&quot;,1..254 ;
#print @iparray;
#open (ERRORLOG, &quot;&gt;errorlog&quot;);
open (OFFLINE,&quot;&gt;offline&quot;);
#open (ONLINE,&quot;&gt;online&quot;);

#my @iparray = qw( www.slashdot.org www.deja.com  www.perlmonks.org );


my $proto = 'icmp';
my $def_timeout = '0';
my $bytes = '64';

my $p = Net::Ping-&gt;new($proto,  $def_timeout , $bytes);
$! = 1;
foreach my $host (@iparray) {
     print ONLINE &quot;$host online \n&quot; if $p-&gt;ping($host);
     print ERRORLOG &quot;$host offline \n&quot; unless $p-&gt;ping($host,1);
     print OFFLINE &quot;$host \n&quot; unless $p-&gt;ping($host,1);
}
$p-&gt;close();
close OFFLINE;
close ERRORLOG;
close ONLINE;

open (IPLIST, &quot;offline&quot;);
#open (OFFLINEHOST, &quot;&gt;offlinehost&quot;);
@list=&lt;IPLIST&gt;;
$list = @list;
#print &quot;@list\n&quot;;
chomp @list;
my $i;
my $peer_host;
format STDOUT_TOP =
IP#              Machine name           
---------------- ------------------------------------ -------
.
format STDOUT =
@&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; ^&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; ^&lt;&lt;&lt;&lt;&lt;&lt; 
$i,         $peer_host,                              &quot;offline&quot;
.
foreach $i (@list) {
$peer_host = gethostbyaddr(inet_aton($i), AF_INET);
#$peer_host = gethostbyaddr(inet_aton($i), AF_INET);
#print OFFLINEHOST &quot;$peer_host and ipaddress $i\n&quot;;
#print OFFLINEHOST &quot;$peer_host and ipaddress $i\n&quot;;
write
}
close OFFLINE;</doctext>
  <type_nodetype>121</type_nodetype>
  <node_id>75695</node_id>
  <author_user>43361</author_user>
  <title>Pingger Script4</title>
  <createtime>2001-04-26 02:42:44</createtime>
  <nodeupdated>2005-07-21 01:26:44</nodeupdated>
</node>
