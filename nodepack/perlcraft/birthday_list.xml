<node>
  <doctext>#!/usr/bin/perl -w
#####################################################################
# This is a test program to start work on building up some real     #
# skill with Perl. Also, must remember to refer to Perl as Perl and #
# not PERL. Someone might get offended.                             #
# The purpose of this program is to create and read a small         #
# flat-file database of birthdays to remember. Boring but useful.   #
# Please be kind to me, this is my first Perl application and I     #
# was hoping to get some feedback. Maybe the community can tell me  #
# If I'm starting out good? So many of these ideas are still new to #
# me because I'm so used to PHP's style.                            #
#####################################################################

use strict;								# Enforce legal variables.

my ($choice);							# The user's choice.
my ($name);								# Person's name
my ($date);								# Birthday
my (@birthdays);						# List of Birthdays.
my ($key);

while () {
	print &quot;(L)ist or (N)ew or (M)odify birthday? &quot;; chomp($choice = &lt;STDIN&gt;);
	if ($choice =~ /l/i) {
	# User picked List
		open (IN, &quot;birthdays.db&quot;) || die &quot;Failure: $!&quot;;
		while (&lt;IN&gt;) {
			print;
		} # Print it all to the screen
		close (IN);
	} elsif ($choice =~ /n/i) {
		open (OUT, &quot;&gt;&gt;birthdays.db&quot;) || die&quot;Failure: $!&quot;;

		print &quot;Enter person's name: &quot;; chomp ($name=&lt;STDIN&gt;);
		print &quot;Enter person's birthday: &quot;; chomp ($date = &lt;STDIN&gt;);
		print OUT &quot;$name:$date\n&quot;;

		close (OUT);
	} elsif ($choice =~ /m/i) {
		open (IN, &quot;birthdays.db&quot;);
		push @birthdays, $_ while (&lt;IN&gt;);
		close (IN);
		$key = 0;
		foreach (@birthdays) {
			print &quot;$key: $birthdays[$key]&quot;;
			$key++;
		} # Store file information in memory.
		$key = &quot;&quot;;
		print &quot;Enter record to modify: &quot;; chomp ($key = &lt;STDIN&gt;);
		print &quot;(M)odify or (D)elete? &quot;; chomp ($choice = &lt;STDIN&gt;);
		open (OUT, &quot;&gt;birthdays.db&quot;);
		$birthdays[$key] = &quot;&quot; if ($choice =~ /d/i);
		print OUT @birthdays;
		if ($choice =~ /m/i) {
			print &quot;Enter person's name: &quot;; chomp ($name=&lt;STDIN&gt;);
			print &quot;Enter person's birthday: &quot;; chomp ($date = &lt;STDIN&gt;);
			$birthdays[$key] = &quot;$name:$date\n&quot;;
			print OUT @birthdays;
		} # put it all back in the file.
		close (OUT);
		@birthdays = (); # Clear that annoying array. It causes problems if we don't.
	}
}</doctext>
  <type_nodetype>121</type_nodetype>
  <node_id>287347</node_id>
  <author_user>49370</author_user>
  <title>Birthday List</title>
  <createtime>2003-08-28 09:14:29</createtime>
  <nodeupdated>2005-08-11 10:16:27</nodeupdated>
</node>
