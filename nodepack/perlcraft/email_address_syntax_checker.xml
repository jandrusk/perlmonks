<node>
  <doctext>#!/usr/bin/perl

# By Sean Murphy
# E-Mail Syntax Checker
#
# This is a simple script that will
# check the syntax of an email address
# and spit back whether the address is
# syntactically correct or not. This
# is my first post to the Craft node.

#mmmm...marshmallowey goodness...
$atom = '[^()&lt;&gt;@,;:\&quot;.\[\] \000-\037\177]+';
$quoted = '&quot;(?:[^&quot;\\\n]|\\.)*&quot;';
$word = &quot;(?:$atom|$quoted)&quot;;
$localpart = &quot;$word(?:\.$word)*&quot;;
$subdomain = &quot;(?:$atom|\\[(?:[^\\[\\]\\\\\\r]|\\.)*\\])&quot;;
$domain = &quot;$subdomain(?:\.$subdomain)*&quot;;
$addrspec = &quot;$localpart\@$domain&quot;;
$route = &quot;(?:\@$domain)+:&quot;;
$routeaddr = &quot;&lt;$route?$addrspec&gt;&quot;;
$mailbox = &quot;(?:$addrspec|$word+$routeaddr)&quot;;
$group = &quot;$word+:(?:$mailbox(?:,+$mailbox)*)?;&quot;;
$address = &quot;$mailbox|$group&quot;;

sub addr {
local($_) = @_;
1 while s/\((?:[^()]|\\[()])*?[^\\]\)/ /g;
/$address/o;
}

if (@ARGV &gt; 0) {
foreach (@ARGV) { print &quot;$_ is &quot;, addr($_) ? &quot;&quot; : &quot;not &quot;, &quot;valid\n&quot;; }
} else {
while (&lt;&gt;) { chop; print &quot;$_ is &quot;, addr($_) ? &quot;&quot; : &quot;not &quot;, &quot;valid\n&quot;; }
}</doctext>
  <type_nodetype>121</type_nodetype>
  <node_id>166505</node_id>
  <author_user>166483</author_user>
  <title>Email Address Syntax Checker</title>
  <createtime>2002-05-14 13:28:19</createtime>
  <nodeupdated>2005-07-21 01:31:35</nodeupdated>
</node>
