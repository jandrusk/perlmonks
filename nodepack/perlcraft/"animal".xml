<node>
  <doctext>#!/usr/bin/perl -w 
use strict; 
## I originally wrote this for a column,
## but haven't gotten around to using it yet.
## just think of an animal, and invoke it.
## It's an example of a self-learning game.
## When you choose not to continue, it'll dump out
## the data structure of knowledge it has accumulated.
 
use Data::Dumper; 
 
my $info = &quot;dog&quot;; 
 
{ 
  try($info); 
  redo if (yes(&quot;play again?&quot;)); 
} 
print &quot;Bye!\n&quot;; 
print Dumper($info); 
 
sub try { 
  my $this = $_[0]; 
  if (ref $this) { 
    return try($this-&gt;{yes($this-&gt;{Question}) ? 'Yes' : 'No' }); 
  } 
  if (yes(&quot;Is it a $this&quot;)) { 
    print &quot;I got it!\n&quot;; 
    return 1; 
  }; 
  print &quot;no!?  What was it then? &quot;; 
  chomp(my $new = &lt;STDIN&gt;); 
  print &quot;And a question that distinguishes a $this from a $new would be? &quot;; 
  chomp(my $question = &lt;STDIN&gt;); 
  my $yes = yes(&quot;And for a $new, the answer would be...&quot;); 
  $_[0] = { 
           Question =&gt; $question, 
           Yes =&gt; $yes ? $new : $this, 
           No =&gt; $yes ? $this : $new, 
          }; 
  return 0; 
} 
 
sub yes { 
  print &quot;@_ (yes/no)?&quot;; 
  &lt;STDIN&gt; =~ /^y/i; 
} 
</doctext>
  <type_nodetype>121</type_nodetype>
  <node_id>200391</node_id>
  <reputation>184</reputation>
  <author_user>9073</author_user>
  <title>&quot;animal&quot;</title>
  <createtime>2002-09-24 11:20:07</createtime>
  <nodeupdated>2005-07-30 06:48:53</nodeupdated>
</node>
