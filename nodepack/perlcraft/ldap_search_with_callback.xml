<node>
  <doctext>This code searches an ldap server and returns records
without an email address in a particular branch of the 
database (here, specified by the 'ou' attribute).


#!/usr/local/bin/perl -w

use strict;
use Net::LDAP;
use Text::CSV_XS;

my $outfile = &quot;noemail.csv&quot;;
my $host = &quot;yourldapserver.com&quot;;
my $port = &quot;389&quot;;
my $ldap = Net::LDAP-&gt;new($host, port=&gt;$port, timeout=&gt;10)or die &quot;Can not create new LDAP object: $!\n&quot;;
my $bind_result = $ldap-&gt;bind() or die &quot;Could not bind to $host: $!\n&quot;;
# $searchbase varies (perhaps significantly)
# depending on how you built you ldap server
my $searchbase = &quot;o=yourcompany,c=yourcountry&quot;;
my $organization = &quot;yourorg&quot;;
my $csv = Text::CSV_XS-&gt;new();

open(UNI,&quot;&gt;$outfile&quot;);

my $filt = &quot;(&amp;(!(mail=*))(ou=$organization))&quot;;
ldapsearch($filt);


sub ldapsearch{
    my $filter = shift;
    my $search = $ldap-&gt;search(
                        base=&gt;$searchbase,
                        filter=&gt;$filter,
                        callback=&gt;\&amp;callback,
                        );
}


sub callback {
    # Use callback if you search a lot
    # of records and want some kind of feedback
    # as each returned record is processed.
    my ($search,$entry) = @_;
    my $number = $search-&gt;count;
    $entry = $search-&gt;shift_entry;
    my @results=();

    if($entry){
        # Our $entry always contains
        # dn, cn, givenname, surname, and alias.
        # Manager and tele may or may not exist.
        my $results[0] = $entry-&gt;dn;
        my $results[1] = $entry-&gt;get_value('cn');
        my $results[2] = $entry-&gt;get_value('givenname');
        my $results[3] = $entry-&gt;get_value('surname');
        my $results[4] = $entry-&gt;get_value('alias');
        my $results[5] = $entry-&gt;get_value('manager') || &quot;No Manager Listed&quot;;
        my $results[6] = $entry-&gt;get_value('telephonenumber') || &quot;No Phone Listed&quot;;
           
        my $status = $csv-&gt;combine(@results);
        my $line = $csv-&gt;string();
        print UNI $line.&quot;\n&quot;;
#        print UNI &quot;\&quot;$dn\&quot;,$given,$sn,$alias,$tele,\&quot;$manager\&quot;&quot;;
        print &quot;$cn\n&quot;;
    }
}

close(UNI);



Updated (10/24) - Taking a tip from someone
more learned in the ways of PM,
my blatant plea for first post mercy is 
now removed. =)

Updated (10/26) - '-' at line 59 is now '='.
Thanks, Fokat.

Updated (12/21) - Now checking $bind_result and using
Text::CSV for output data. Removed 'To do' comments as a
result. Fixed $searchbase and $filt so that results would 
actually be returned. Before, $searchbase was restrictive
enough that the filter would have no branch of ldap to 
search.
</doctext>
  <type_nodetype>121</type_nodetype>
  <node_id>120814</node_id>
  <author_user>96742</author_user>
  <title>LDAP search with callback</title>
  <createtime>2001-10-23 15:27:36</createtime>
  <nodeupdated>2005-08-15 13:51:15</nodeupdated>
</node>
