<node>
  <doctext>## get it while it's hot (cause it's not part of wxPerl core yet)

#############################################################################
## Name:        Carp.pm
## Purpose:     Wx::Carp class (a replacement for Carp in Wx applications)
## Author:      D.H. aka PodMaster
## Modified by:
## Created:      12/24/2002
## RCS-ID:      
## Copyright:   (c) 2002 D.H.
## Licence:     This program is free software; you can redistribute it and/or
##              modify it under the same terms as Perl itself
#############################################################################

=head1 NAME

Wx::Carp - a replacement for Carp in Wx applications

=head1 SYNOPSIS

Just like L&lt;Carp&gt;, so go see the L&lt;Carp&gt; pod (cause it's based on L&lt;Carp&gt;).

    # short example
    use Wx::Carp;
    ...
    carp &quot;i'm warn-ing&quot;;
    croak &quot;i'm die-ing&quot;;

=head1 SEE ALSO

L&lt;Carp&gt; L&lt;Carp&gt; L&lt;Carp&gt; L&lt;Carp&gt; L&lt;Carp&gt;

=head1 COPYRIGHT

(c) 2002 D.H. aka PodMaster (a proud CPAN author)

=cut

package Wx::Carp;

BEGIN {
    require Carp;
    require Wx;
}

use Exporter;
@ISA         = qw( Exporter );
@EXPORT      = qw( confess croak carp );
@EXPORT_OK   = qw( cluck verbose );
@EXPORT_FAIL = qw( verbose );              # hook to enable verbose mode

sub export_fail { Carp::export_fail( @_) } # make verbose work for me
sub croak   { Wx::LogFatalError( Carp::shortmess(@_) ) }
sub confess { Wx::LogFatalError( Carp::longmess(@_) ) }
sub carp    { Wx::LogWarning( Carp::shortmess(@_) ) }
sub cluck   { Wx::LogWarning( Carp::longmess(@_) ) }

1;
</doctext>
  <type_nodetype>121</type_nodetype>
  <node_id>222148</node_id>
  <author_user>107642</author_user>
  <title>Wx::Carp - a replacement for Carp in Wx applications</title>
  <createtime>2002-12-24 19:05:36</createtime>
  <nodeupdated>2005-08-09 09:59:23</nodeupdated>
</node>
