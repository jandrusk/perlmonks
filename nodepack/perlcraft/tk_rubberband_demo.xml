<node>
  <doctext>#!/usr/bin/perl -w
# rubberband.pl
# a little rubberbanding Tk demo (demonstrates rubberbanding with perl Tk)
# copyright crazyinsomniac.perlmonk.org 2002, all rights reserved
# released under the same terms as perl itself
use strict;

use Tk 8;

my $MW = new MainWindow(
        -background =&gt; 'darkblue',
        -borderwidth =&gt; 1,
        -relief =&gt; 'groove',
        -width =&gt; 500,
        -height =&gt; 500,
    ,);

my $F = $MW-&gt;Frame(
    -relief  =&gt; &quot;groove&quot;,
    -height =&gt; 300,
    -width =&gt; 500,
,)-&gt;pack(
    -anchor =&gt; 'n',
    -side =&gt; 'top',
    -expand =&gt; 'yes',
,);

use vars '$OBJECT'; BEGIN{$OBJECT=&quot;oval&quot;};

Button($F, &quot;oval&quot;, groove =&gt; sub { $OBJECT = &quot;oval&quot; } );
Button($F, &quot;line&quot;, groove =&gt; sub { $OBJECT = &quot;line&quot; } );
Button($F, &quot;arc&quot;, groove =&gt; sub { $OBJECT = &quot;arc&quot; } );
Button($F, &quot;rectangle&quot;, groove =&gt; sub { $OBJECT = &quot;rectangle&quot; } );


$F-&gt;Label(
    -text =&gt; &quot; OBJECT:&quot;,
    -relief =&gt; 'flat',
    -font =&gt; &quot;Arial&quot;,
,)-&gt;pack(
    -side =&gt; 'left',
    -expand =&gt; 1,
,);

$F-&gt;Label(
    -textvariable =&gt; \$OBJECT,
    -relief =&gt; 'flat',
    -font =&gt; &quot;Arial&quot;,
,)-&gt;pack(
    -side =&gt; 'left',
    -expand =&gt; 1,
,);

my $C = $MW-&gt;Canvas(
        -width      =&gt; 500,
        -height     =&gt; 500,
        -background =&gt; &quot;#AFFAAF&quot;,
    ,)-&gt;pack;

## S&amp;M (left button down only)
$MW-&gt;bind(
    'Tk::Canvas',
    '&lt;ButtonPress-1&gt;' =&gt; [\&amp;BandOn, map{Ev($_)} qw{ x y s } ]
);

$MW-&gt;bind(
    'Tk::Canvas',
    '&lt;ButtonRelease-1&gt;' =&gt; [\&amp;BandOff, map{Ev($_)} qw{ x y s } ]
);


&amp;MainLoop();

sub BandOn {
    BEEP(&quot;BandOn&quot;,@_);
    
    my( $C, $X, $Y, $S ) = @_;
    $C-&gt;{&quot;\0__Xo&quot;} = $X; # the origin, to remain constant
    $C-&gt;{&quot;\0__Yo&quot;} = $Y;
    $C-&gt;{&quot;\0__RUBBER&quot;} = &quot;RUBBER&quot;.time;
    $C-&gt;create($OBJECT, $X, $Y, $X+10, $Y+10, -tags =&gt; $C-&gt;{&quot;\0__RUBBER&quot;});

    $MW-&gt;bind(
        'Tk::Canvas',
        '&lt;Motion&gt;' =&gt; [\&amp;BandIt, map { Ev($_) } qw{ x y s } ]
    );
}


sub BandOff {
    BEEP(&quot;BandOff&quot;,@_);
    my( $C, $X, $Y, $S ) = @_;
    
    $MW-&gt;bind(
        'Tk::Canvas',
        '&lt;Motion&gt;' =&gt; undef, # essentially unbind
    );   
}

sub BandIt {
    BEEP(&quot;BandIt&quot;,@_);
    my( $C, $X, $Y, $S ) = @_;

    $C-&gt;delete($C-&gt;{&quot;\0__RUBBER&quot;}); # I wish I could transform the existing one
    $C-&gt;create(
        $OBJECT,
        $C-&gt;{&quot;\0__Xo&quot;},
        $C-&gt;{&quot;\0__Yo&quot;},
        $X, $Y, -tags =&gt; $C-&gt;{&quot;\0__RUBBER&quot;},
    );

}


sub BEEP {
   print shift(@_),&quot;\n&quot;;
   print shift(@_)-&gt;{&quot;\0__RUBBER&quot;},&quot;\n&quot;;
   print &quot;$_)$_[$_]\n&quot; for 0..$#_;
}




sub Button {
    my ( $W , $text , $relief , $sub )=@_;

    $W = $W-&gt;Button(
        -text =&gt; $text,
        -relief =&gt; $relief,
    ,)-&gt;pack(
        -anchor =&gt; 'n',
        -expand =&gt; 'no',
        -side =&gt; 'left',
    ,);

    $W-&gt;configure(-command =&gt; [ $sub, $W ] );

    return undef;
}

</doctext>
  <type_nodetype>121</type_nodetype>
  <node_id>176475</node_id>
  <author_user>10277</author_user>
  <title>Tk Rubberband Demo</title>
  <createtime>2002-06-22 06:45:46</createtime>
  <nodeupdated>2005-08-12 12:03:15</nodeupdated>
</node>
