<node>
  <doctext>#!/usr/bin/perl

#yooz meee

my $fntd = `figlet -I2`;           #this is 4linux
#my $fntd = &quot;/pip/4dos/fig/fonts&quot;;  #this is 4dos

   chomp ($fntd);
   $fntd .= &quot;/*.flf&quot;;
my $text = &quot;@ARGV&quot;;
my $outf = &quot;dfaltout.txt&quot;;
my @fntz = glob(&quot;$fntd&quot;);
my $coun = 0;
my $favs = &quot; &quot;;
my $optn = &quot;&quot;;
my $inpt = &quot;&quot;;

print &quot;                       Tigger's Figlet Chooser v0.2\n&quot;;
print &quot;USAGE:  me\@myserver:\% perl tiglet.pl \&quot;KakA NachoZ\&quot;\n&quot;;
print &quot;Tiglet lets you interactively select the perfect figlet font \n&quot;;
print &quot; for your .sig or msg or title or... =) smiley!  \n&quot;;
print &quot;Please email suggestions or constructive criticisms to pip\@binq.org\n&quot;;
print &quot;n or Enter - checks next font, p - checks previous font\n&quot;;
print &quot;  Any specific number jumps directly to that font\n&quot;;
print &quot;t - prompts for text change, e - prompts for filename to export to\n&quot;;
print &quot;Y - SAVES selected text to specified exportfile and quits\n&quot;;
print &quot;Q - QUITS without saving, ... the parameters are not case-sensitive\n&quot;;
print &quot;Toggles: s=squish, k=kern, o=overlap, c=center, l=left, r=right, f=favorite\n&quot;;

if ($text eq &quot;&quot;) {
    $text = &quot;KakA NachoZ&quot;;
    print &quot;Please enter text to display [$text]: &quot;;
    chomp ($poop = &lt;STDIN&gt;); if ($poop ne &quot;&quot;) { $text = $poop; }
    print &quot;Please enter a file to write selected text to [$outf]: &quot;;
    chomp ($poop = &lt;STDIN&gt;); if ($poop ne &quot;&quot;) { $outf = $poop; }
}
while ($inpt !~ /q|x|y|d/i &amp;&amp; $coun &lt; @fntz) {
    $fntz[$coun] =~ s!.*/!!;
    $kaka = `figlet -f $fntz[$coun] $optn $text`;
    print &quot;${kaka}Font\#$coun:$fntz[$coun],Text:$text,Optn:$optn,Favs:$favs,cmd[npyteskocq]: &quot;;
    chomp ($inpt = &lt;STDIN&gt;); $inpt =~ tr/A-Z/a-z/;
    if ($inpt =~ /f/) { 
        if ($favs =~ / $coun /) { $favs =~ s/ $coun / /; } 
	else { $favs .= &quot;$coun &quot;; } 
    }
    if ($inpt eq &quot;&quot; || $inpt =~ /n/) { $coun++;
        if ($coun == @fntz) { print &quot;Last Font Displayed!  Loop back to beginning? (y/n) &quot;;
            $poop = &lt;STDIN&gt;; if ($poop =~ /y/i) { $coun = 0; }
        }
    }
    if ($inpt =~ /p/) { $coun--; }
    if ($inpt =~ /\d+/) { $coun = $inpt;
        if ($coun &lt; 0) { $coun = 0; }
        if ($coun &gt; @fntz) { $coun = $#fntz; }
    }
    if ($inpt =~ /y/ || $inpt =~ /d/) {
        print &quot;Saving to $outf and Quitting!\n&quot;;
        open OUTF, &quot;&gt;$outf&quot;; print OUTF $kaka; close OUTF;
    }
    if ($inpt =~ /t/) { 
        print &quot;New Text [$text]: &quot;; chomp ($poop = &lt;STDIN&gt;);
        if ($poop ne &quot;&quot;) { $text = $poop; }
    }
    if ($inpt =~ /e/) { 
        print &quot;Export File [$outf]: &quot;; chomp ($poop = &lt;STDIN&gt;);
        if ($poop ne &quot;&quot;) { $outf = $poop; }
    }
    if ($inpt =~ /s/ || $inpt =~ /k/ || $inpt =~ /o/ ||
        $inpt =~ /c/ || $inpt =~ /l/ || $inpt =~ /r/) {
        if ($optn =~ /-$inpt /i) { $optn =~ s/(-$inpt |$inpt)//gi; }
        else { $optn .= &quot;-$inpt &quot;; }
    }
    if ($inpt =~ /q/ || $inpt =~ /x/) { print &quot;Quitting Without Saving!\n&quot;; }
}
</doctext>
  <type_nodetype>121</type_nodetype>
  <node_id>21595</node_id>
  <author_user>5272</author_user>
  <title>This is Tiglet!</title>
  <createtime>2000-07-07 21:45:14</createtime>
  <nodeupdated>2005-07-21 01:13:19</nodeupdated>
</node>
