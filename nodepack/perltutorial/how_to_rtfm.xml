<node>
  <doctext>&lt;H2&gt;How to RTFM&lt;/H2&gt;
&lt;P&gt;
If you're new the 'net (not just Perlmonks, but in general), you will eventually
hear the phrase 'RTFM', which stands for &quot;Read the Friendly Manual&quot;. (Well,
actually, 'friendly' is something else, but you get the idea.)  What this means
is that the question asked is something that could have easily been learned by 
reading the documentation that comes with that program or language (for free!), 
and asking for help about it in public forums is considered a waste of time.
&lt;/P&gt;
&lt;P&gt;
While it should not be taken as a rude comment by the person suggesting it, 
it's better to avoid getting an 'RTFM' in response to a question if you can,
which means that you should do as much research in the manuals before posting.
With Perl, that can be a daunting task, as there is a LOT of documentation that
goes along with it.  This tutorial is an attempt to try to sort out where you 
can find specific information about programming in perl that you can get for 
free (e.g., you don't need to buy any books, though this is always a good idea!),
both with the install of perl and at various web sites, including Perlmonks.
&lt;/P&gt;
&lt;P&gt;
It should be noted that some areas of perl documentation are quite complicated
and overlapping, so it might take a couple of stabs to get to the right place,
but after a few tries with the documentation, you'll get where you want to be.
&lt;/P&gt;
&lt;H3&gt;Perl Documentation Included With Install&lt;/H3&gt;
&lt;H4&gt;Distribution Docs&lt;/H4&gt;
&lt;P&gt;
Regardless of your platform, you'll find that the perl install comes with 
several README files that discuss platform specific issues, and details on 
installing perl, as well as the obligatory license files.  These typically 
will not be of interest to you as a new programmer, but you should be aware
of their existence.
&lt;/P&gt;
&lt;H4&gt;Manual Pages&lt;/H4&gt;
&lt;P&gt;
For UNIX-based systems, the bulk of the useful perl documentation will be
installed as manual pages.  For example, &lt;code&gt;man perl&lt;/code&gt; will get you
the 'index' for all other perl man pages.  The &quot;perl&quot; man page itself will
have little info, as most of it is split up among 20-30 smaller man
pages.  Some of the more useful ones that a new programmer will find useful
include:
&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;perlfaq - a list of Frequently Asked Questions about perl
&lt;LI&gt;perldata - details on perl's data types
&lt;LI&gt;perlop - details on perl's builtin operators
&lt;LI&gt;perlsyn - details on perl's syntax
&lt;LI&gt;perlfunc - a list of built-in perl functions
&lt;LI&gt;perlref - details on perl's implementation of references
&lt;LI&gt;perlre - details on the regular expression engine in perl
&lt;/UL&gt;
&lt;P&gt;
There are numerous others, but this is a good start for the beginning
programmer.  Of course, you can always pretty-print these out, but 
please note that the text might change with each new perl version, 
and the best way to make sure you are reading the current documentation
is to read it on-line.
&lt;/P&gt;
&lt;P&gt;Of course, I'm sure that Windows and other OS users don't have similar 
options, but fortunately, default with every perl install is another nice
feature:
&lt;/P&gt;
&lt;H4&gt;perldoc&lt;/H4&gt;
&lt;P&gt;
Perldoc is similar to 'man' in some ways, but works with a special 
documentation format called POD, or &quot;plain old documentation&quot;.  
This comes into play later with modules, but all the manual pages are
also distributed as POD documents, meaning that you can do
&lt;code&gt;perldoc perlfaq&lt;/code&gt; to get the same text as 
&lt;code&gt;man perlfaq&lt;/code&gt;.  So the same sections highlighted above 
are ones that you will find useful regardless of what platform you are on.
&lt;/P&gt;
&lt;P&gt;
In addition to this functionality, there are a few command line switches that you will find very useful.  One is &quot;-q&quot; which will search the perl documentation for the text that follows the -q switch.  (Actually, this is a regular expression, but for the beginner, words or phrases will work as well).  This will list the various documents where that word or phrase appears, which you can follow up on with perldoc again.  Another useful switch is &quot;-f&quot; which will return the relevent section in perlfunc for a given function name, which can be faster than scanning through perlfunc itself.
&lt;/P&gt;
&lt;H3&gt;Documentation from Modules&lt;/H3&gt;
&lt;P&gt;
Beyond the default install of perl are what are known as modules; these
are extensions to the language devised by third parties that can be 
very useful, such as the classic CGI.pm for web CGI programming.  Managing
all the documentation for these modules may seem overwhelming, but perl's
POD format saves the day again.  As long as you know the module's name,
excluding the trailing &quot;.pm&quot;, you can use perldoc to view the POD 
documentation that each module contains; for example &lt;code&gt;perldoc CGI&lt;/code&gt;
will give you the documentation on the CGI module.  This is the best
way to get a summary of a module's functions, but many module authors also
have web sites for additional information which are listed in the POD
documentation, so keep your eyes open for that.
&lt;/P&gt;
&lt;H3&gt;Documentation on Web Sites (beyond PM)&lt;/H3&gt;
&lt;P&gt;
Besides the copies on your system, you can find the Perl documentation
on the web, nicely formatted and easily navigable.
&lt;/p&gt;&lt;p&gt;
The primary location is the (quasi?)official [http://perldoc.perl.org/],
which has both core/standard documentation and the man pages for many modules. 
&lt;/p&gt;&lt;p&gt;
Secondarily, you can try
&lt;ul&gt; 
&lt;li&gt; [http://www.cpan.org/|CPAN]
&lt;li&gt; [http://www.perl.com/pub/q/documentation|O'Reilly's perl site]
&lt;li&gt; [http://kobesearch.cpan.org/|Randy Kobe's perl site]
&lt;li&gt; [http://aspn.activestate.com/ASPN/Perl/Reference/|ActiveState's perl site]
&lt;/ul&gt;
all of which have either the documentation for many modules, 
the core/standard perl documentation, or both.
They are all useful if you want to view the documentation in an easy-to-read, hypertext format.
&lt;/P&gt;

&lt;H3&gt;Documentation at Perlmonks&lt;/H3&gt;
&lt;P&gt;
If, for some reason, you have an aversion to venturing beyond the confines
of the Monastery for your perl documents, you can browse our very own
[Library|stacks]; but be warned, the copies here are quite out of date.
Another way to access information in the [Library] is to try locating a
node whose title is the name of the document you want, such as [perlfaq] or
[perlre]. 
&lt;/P&gt;
&lt;H3&gt;Frequently Asked Questions&lt;/H3&gt;
&lt;P&gt;
You should always check through the FAQ if you can to see if your question
has already been answered.  The man/perldoc page, &quot;[perlfaq]&quot; is the official
Perl FAQ, and should be consulted first; you can also look at this document
[http://www.cpan.org/doc/FAQs|online] if you wish.  Remember to check any
relevant section, since some questions are more appropriate in one place 
rather than another.
&lt;/P&gt;
&lt;P&gt;
Also, you should look through Perlmonk's [Q&amp;A] section, which attempts
to expend the FAQ by having more questions.  The Q&amp;A section is sectioned
by task, so it should be easy to locate where your question may have 
already been answered.
&lt;/P&gt;
&lt;H3&gt;Searching Previous Questions&lt;/H3&gt;
&lt;P&gt;
At perlmonks, you can either use the search at the top of the page, or
using [Super Search] to locate all nodes that match your search terms.
In the former case, all nodes that match at least one term will be 
returned, so if you try to search for &quot;string in list&quot;, the engine will
return all nodes with &quot;string&quot; in them, and all nodes with &quot;in&quot; in 
them, and all nodes with &quot;list&quot; in them.  Obviously not what you want.
[Super Search] is a bit more picky about what it returns, and you can 
limit your search to certain areas of the site, making it easier to 
find your results.
&lt;/P&gt;
&lt;P&gt;
Offsite, never doubt the power of search engines, particularly 
[http://www.google.com/|Google's].  It's fast and full-featured, and
many perl questions and their answers can be found here.  However,
to get results effectively, you should be well versed in the language
of search engines.
&lt;/P&gt;
&lt;P&gt;
Probably more useful than that is the recent installment of 
the USENET archives back from 1995 at [http://groups.google.com|Google].
You can limit you search to the primary perl newsgroups (comp.lang.perl.*) 
and have better narrowing of your search compared to a web search.  Of
course, a good understanding of getting effective web searches will 
improve your chances with this.
&lt;/P&gt;
&lt;H3&gt;Summary&lt;/H3&gt;
As you can see, there is really a LOT of RTFM's that you can read, 
a nearly impossible task.  However, it's more important to first
understand what documentation is available, and how to use it effectively,
such that you can avoid asking questions that have been asked thousands
of times in the past, than it is to fully read all the man pages.  
If you consult these sources first, but are still confused, by all means
please ask; in general, those that are knowledgeable will be able to 
recognize a good question about the manual pages that were consulted 
prior to asking compared to a question where the posted was too lazy to 
look up anything.  Once you know where to look, you should be able
to find anything about perl that you want within a few minutes, and
save the time and trouble on PM for the other monks to toss &quot;RTFM&quot; replies
to those that are lazy.
&lt;/P&gt;
&lt;P&gt;
&lt;SMALL&gt;&lt;B&gt;update&lt;/b&gt;Thanks [chromatic] and [lachoy] for pointing out cmd line switches on perldoc, those have been added in directly into the above to keep that section together.
&lt;/SMALL&gt;
&lt;/P&gt;
</doctext>
  <type_nodetype>956</type_nodetype>
  <node_id>78752</node_id>
  <author_user>53423</author_user>
  <title>How to RTFM</title>
  <createtime>2001-05-08 02:49:39</createtime>
  <nodeupdated>2005-08-15 17:14:57</nodeupdated>
</node>
