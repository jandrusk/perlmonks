<node>
  <doctext>&lt;P&gt;&amp;nbsp;The other day I had filled out about 10 forms using Infopath. The problem is all Infopath documents are saved in XML and one cannot extract the contents of each XML Tag into simple text.&lt;/P&gt;

&lt;P&gt;&amp;nbsp;I will explain how to extract information from XML tag and save it in a DOC format. You can then apply the same concept for the Infopath form to DOC conversion.&lt;/P&gt;

&lt;P&gt;&amp;nbsp;So here goes...&lt;/P&gt;

&lt;P&gt;&amp;nbsp;XPath is one of the many XML technologies you could use to traverse the XML Tree. If you access a file in your explorer, the path to your file may be in the format &quot;C:\folder1\file1.txt&quot;. XPath uses similar concept to walkthrough your XML file which can be thought as a Parent Tree containing many child nodes. &lt;/P&gt;

&lt;P&gt;Lets take a very simple example. Suppose your XML file is in the following manner:&lt;/P&gt;

&lt;P&gt;
BOOKS.XML File&lt;BR&gt;
&lt;code&gt;
&lt;Books&gt;

&lt;Book&gt;
 &lt;title&gt;Perl Magic&lt;/title&gt;
 &lt;author&gt;Karthik&lt;/author&gt;
 &lt;publisher&gt;ORielly&lt;/publisher&gt;
 &lt;price currency=&quot;Rupees&quot; value=&quot;330&quot;/&gt;
&lt;/Book&gt;

&lt;Book&gt;
 &lt;title&gt;Perl for Dummies&lt;/title&gt;
 &lt;author&gt;Mark&lt;/author&gt;
 &lt;publisher&gt;ORielly&lt;/publisher&gt;
 &lt;price currency=&quot;Rupees&quot; value=&quot;420&quot;/&gt;
&lt;/Book&gt;

&lt;/Books&gt;
&lt;/code&gt;

&lt;P&gt;
Now you want to extract the necessary Book Information, i.e, the &quot;Title&quot; and &quot;Author&quot; of the Books. &lt;BR&gt;
From the XML file the tags &amp;lt;title&amp;gt; and &amp;lt;author&amp;gt; should be extracted.&lt;/P&gt;

&lt;P&gt;Now in XPath you get the &quot;title&quot; tag's content by using the Path :&lt;/P&gt;

&lt;code&gt;//Books/Book/title&lt;/code&gt;

&lt;P&gt;Similarly for the &quot;author&quot; tag's content:&lt;/P&gt;

&lt;code&gt;//Books/Book/author&lt;/code&gt;

&lt;P&gt;Now that you know what and how extract the information, its time to use Perl.&lt;/P&gt;

&lt;P&gt;The beauty of Perl is that you can materialize the idea in your mind into reality so easily. You got&lt;BR&gt;
Perl modules to make your Life easy.&lt;/P&gt;

&lt;P&gt;I am going to use the XPath Perl module which is part of the XML module.You use the module by coding like this&lt;/P&gt;

&lt;code&gt;use XML::XPath&lt;/code&gt;

&lt;P&gt;Now you need to get the BOOKS.XML file into a variable and create a new XPath object.&lt;/P&gt;

&lt;code&gt;
$file=&quot;books.xml&quot;;
my $xp = XML::XPath-&gt;new(filename =&gt; $file);
&lt;/code&gt;

&lt;P&gt;Open a WORD DOC file of the same name for conversion&lt;/P&gt;

&lt;code&gt;
open(INFO3, &quot;&gt;$file.doc&quot;);
&lt;/code&gt;

&lt;P&gt;Print necessary information in the DOC file&lt;/P&gt;

&lt;code&gt;
print INFO3 &quot;Perl Xpath\n\n&quot;;
print INFO3 &quot;BOOK INFORMATION:\n\n&quot;;
&lt;/code&gt;

&lt;P&gt;
&amp;nbsp;Use the find method using the XPath object and give it the path.&lt;/P&gt;

&lt;code&gt;//Books/Book&lt;/code&gt;

&lt;P&gt;&amp;nbsp;This will populate a Answer Node List which is used further to extract the tags &amp;lt;title&amp;gt; and &amp;lt;author&amp;gt;&lt;BR&gt;
and print to the DOC file.&lt;/P&gt;

&lt;code&gt;$xp-&gt;find('//Books/Book')-&gt;get_nodelist&lt;/code&gt;

&lt;P&gt;The resulting Perl File(BOOKEXTRACT.PL) is given below.&lt;/P&gt;

&lt;P&gt;
BOOKEXTRACT.PL&lt;BR&gt;
&lt;code&gt;
use XML::XPath; 

 $file=&quot;books.xml&quot;; 
my $xp = XML::XPath-&gt;new(filename =&gt; $file); 

 open(INFO3, &quot;+&gt;$file.doc&quot;); 

 print INFO3 &quot;Perl Xpath\n\n&quot;; 
         
print INFO3 &quot;BOOK INFORMATION:\n\n&quot;; 

         foreach my $book ($xp-&gt;find('//Books/Book')-&gt;get_nodelist){ 
                print INFO3 &quot;TITLE:&quot;; 
                print INFO3 $book-&gt;find('title')-&gt;string_value.&quot;\n&quot;; 
                print INFO3 &quot;AUTHOR:&quot;; 
                print INFO3 $book-&gt;find('author')-&gt;string_value.&quot;\n&quot;; 
                print INFO3 &quot;\n\n&quot;; 

         } 

 print &quot;Converted XML file into WORD file\n\n&quot;; 
print $file.&quot; WORD document generated&quot;; 
close(INFO3); 
&lt;/code&gt;
*************************CODE***********************&lt;/P&gt;

&lt;P&gt;
After you run the PERL Script you will be presented with a DOC file of the same name as the XML file&lt;BR&gt;
with the extracted information.&lt;/P&gt;

&lt;P&gt;Now that you know how to extract Tags and content into WORD DOC, you can apply the same method in the&lt;BR&gt;
conversion of INFOPATH XML Files into WORD Documents.&lt;/P&gt;

&lt;P&gt;Hope this helps.&lt;/P&gt;

&lt;P&gt;Happy Coding.&lt;/P&gt;
&lt;p&gt;&lt;small&gt;20050113 Janitored by [Corion]: Fixed formatting&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;20050114 Unconsidered by [Corion]: was considered as move to Meditations (edit:14 keep:7 del:0)&lt;/small&gt;&lt;/p&gt;</doctext>
  <type_nodetype>956</type_nodetype>
  <node_id>421936</node_id>
  <author_user>421688</author_user>
  <title>Using Perl XPath for converting Infopath XML files to Word Documents</title>
  <createtime>2005-01-13 05:44:12</createtime>
  <nodeupdated>2005-08-15 11:47:37</nodeupdated>
</node>
