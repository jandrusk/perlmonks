<node>
  <doctext>Only for novice monks too lazy to read [dominus]'s &lt;a href=&quot; http://perl.plover.com/FAQs/Buffering.html&quot;&gt;suffering from buffering&lt;/a&gt;:
&lt;p&gt;
from [perlvar]:
&lt;code&gt;
HANDLE-&gt;autoflush(EXPR)
$OUTPUT_AUTOFLUSH # need to use English at the start of your module 
$|
    If set to nonzero, forces a flush right away and after every write or print on the currently selected output channel. Default is 0 (regardless of whether the channel is really buffered by the system or not; $| tells you only whether you've asked Perl explicitly to flush after each write). STDOUT will typically be line buffered if output is to the terminal and block buffered otherwise. Setting this variable is useful primarily when you are outputting to a pipe or socket, such as when you are running a Perl program under rsh and want to see the output as it's happening. This has no effect on input buffering. See getc in the perlfunc manpage for that. (Mnemonic: when you want your pipes to be piping hot.)
&lt;/code&gt;
Some simple code:
&lt;code&gt;
#see also http://perl.plover.com/FAQs/Buffering.html

use strict;
use warnings;

#prints, waits a second, prints
for (1..3) {
	sleep 1;
	print &quot;$_\n&quot;;
}

#without the newline, waits the entire time and then prints the whole thing.
for (1..3) {
	sleep 1;
	print &quot;$_&quot;;
}

$| = 1;
#now it works
for (1..3) {
	sleep 1;
	print &quot;$_&quot;;
}

#you might want to go back to the default behavior now.
$| = 0;
&lt;/code&gt;
&lt;p&gt;&lt;small&gt;
Considered ([dvergin]): Author requests this be listed on Tutorials page. What say you all?&lt;br&gt;
Unconsidered ([holli]): Enough Keep Votes (Keep/Edit/Delete: 20/21/1)
&lt;/small&gt;
&lt;/p&gt;
</doctext>
  <type_nodetype>956</type_nodetype>
  <node_id>476757</node_id>
  <author_user>396583</author_user>
  <title>The extremely simple buffering tutorial (really just an example)</title>
  <createtime>2005-07-21 05:04:11</createtime>
  <nodeupdated>2005-08-15 13:02:08</nodeupdated>
</node>
