<node>
  <doctext>Hi all.
&lt;br /&gt;
&lt;br /&gt;
Many computer science professors eventually discuss the concept of recursion. To help illustrate the power and elegance (yes, there are drawbacks as well) it provides, a classic problem known as the 'Towers of Hanoi' is often used.
For those unfamiliar with this classic, please allow me explain the history and rules...
&lt;br /&gt;
&lt;br /&gt;
&lt;h3&gt;The History:&lt;/h3&gt;
&lt;br /&gt;
The puzzle is called &quot;Towers of Hanoi&quot; because an early popular presentation wove a fanciful legend around it. According to this myth (uttered long before the Vietnam War), there is a Buddhist monastery at Hanoi which contains a large room with three time-worn posts in it surrounded by 21 golden discs. Monks, acting out the command of an ancient prophecy, have been moving these disks, in accordance with the rules of the puzzle, once every day since the monastery was founded over a thousand years ago. They are said to believe that when the last move of the puzzle is completed, the world will end in a clap of thunder. Fortunately, they are nowhere even close to being done.
&lt;br /&gt;
&lt;br /&gt;
&lt;h3&gt;The Rules:&lt;/h3&gt;
&lt;br /&gt;
&lt;ul&gt;
&lt;li&gt;There are n disks (1, 2, 3,..., n) and three towers (pegs). The towers are labeled 'A', 'B', and 'C'.&lt;/li&gt;
&lt;li&gt;All the disks are initially placed on the first peg (the 'A' peg).&lt;/li&gt;
&lt;li&gt;No disk may be placed on top of a smaller disk.&lt;/li&gt;
&lt;li&gt;You may only move one disk at a time and this disk must be the top disk on a peg.&lt;/li&gt;
&lt;/ul&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;h3&gt;The Code:&lt;/h3&gt;
&lt;br &gt;
&lt;code&gt;
use warnings;
use strict;

# Towers of Hanoi
# Perl version (5.8.0)
# Ported from Java

my $numdisks = 0;

print &quot;Number of disks? &quot;;
chomp( $numdisks = &lt;STDIN&gt; );

print &quot;The moves are:\n\n&quot;;
movedisks( $numdisks, 'A', 'B', 'C' );

sub movedisks {

  my( $num, $from, $to, $aux ) = @_;

  if( $num == 1 ) {
    print &quot;Move disk $num from $from to $to\n&quot;;
  }

  else {
    movedisks( $num-1, $from, $aux, $to );
    print &quot;Move disk $num from $from to $to\n&quot;;
    movedisks( $num-1, $aux, $to, $from );
  }
}
&lt;/code&gt;
&lt;br /&gt;
&lt;br /&gt;
Any suggestions on how to 'fine tune' this program are more than welcome.
&lt;br /&gt;
&lt;br /&gt;
Hope this proves interesting.
&lt;br /&gt;
&lt;br /&gt;
Thanks,
&lt;br /&gt;
~Katie

&lt;p&gt;&lt;small&gt;20041023 Edit by [Steve_p]: Changed title from 'Visiting the Towers of Hanoi.'&lt;/small&gt;&lt;/p&gt;</doctext>
  <type_nodetype>956</type_nodetype>
  <node_id>400359</node_id>
  <author_user>153214</author_user>
  <title>Recursion: The Towers of Hanoi problem</title>
  <createtime>2004-10-18 20:37:55</createtime>
  <nodeupdated>2005-08-12 16:24:04</nodeupdated>
</node>
