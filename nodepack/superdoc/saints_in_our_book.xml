<node>
  <doctext>[{get_sitedoclet}]

&lt;table border=&quot;0&quot; align=&quot;center&quot;&gt;
&lt;tr&gt;&lt;th&gt;#&lt;/th&gt;&lt;th&gt;User&lt;/th&gt;&lt;th&gt;Experience&lt;/th&gt;&lt;th&gt;Level&lt;/th&gt;
&lt;th&gt;&lt;a href=&quot;?node_id=3557&quot;&gt;Writeups&lt;/a&gt;&lt;/th&gt;&lt;th&gt;User Since&lt;/th&gt;&lt;th&gt;Last Here&lt;/th&gt;&lt;/tr&gt;
[%
  require Everything::Experience;
  my $csr = $Everything::dbh-&gt;prepare(
    &quot;select node_id,title,experience,vars,createtime,lasttime
     from user left join node on node_id=user_id
     left join setting on setting_id=user_id
     where experience&gt;=3000 order by experience DESC&quot;
  );

  return &quot;Ack!  Something's broken...&quot; unless($csr-&gt;execute);

  # Skip these users
  my %skip = ( &quot;dbrown&quot; =&gt; 1, &quot;nate&quot; =&gt; 1,
    &quot;Webster 1913&quot; =&gt; 1, &quot;ShadowLost&quot; =&gt; 1, &quot;superuser&quot;=&gt;1 );
  my $PMUS = 6364; # getNode(&quot;Perl Monks User Search&quot;,&quot;superdoc&quot;);

  my $html = &quot;&quot;;
  my $index = 1;
  my $node;
  my $level_titles=getVars(getNode('level titles','setting'));
  my $level_experience=getVars(getNode('level experience','setting'));
  my $level=0;
  for my $l (keys %$level_experience) {
    $level=$l if $l&gt;$level;
  }
  # The default format makes the table too wide; override it temporarily
  { local $VARS-&gt;{timeformat} = '%Y-%m-%d';
    while(  $node = $csr-&gt;fetchrow_hashref()  ) {
      next   if  exists $skip{$node-&gt;{title}};
      while ($node-&gt;{experience}&lt;$level_experience-&gt;{$level}) {
        $level--;
      }
      my $vars = getVars($node);
      $html .= ( 1 &amp; $index ) ? qq[&lt;tr class=&quot;highlight&quot;&gt;] : qq[&lt;tr&gt;];
      $html .= qq[&lt;td align=&quot;right&quot;&gt;$index&lt;/td&gt;]
          . qq[&lt;td&gt;&lt;span class=&quot;user-$node-&gt;{node_id}&quot;&gt;]
	  . linkNode($node)
	  . qq[&lt;/span&gt;&lt;/td&gt;]
          . qq[&lt;td align=&quot;right&quot;&gt;$node-&gt;{experience}&lt;/td&gt;]
          . qq[&lt;td&gt;$level_titles-&gt;{$level} ($level)&lt;/td&gt;]
	  . qq[&lt;td align=&quot;right&quot;&gt;]
	  . linkNode( $PMUS, $vars-&gt;{numwriteups}||&quot;None&quot;, {
              usersearch =&gt; $node-&gt;{title},
	    } )
	  . qq[&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;]
	  . htmlcode('parseTimeInString', '', $node-&gt;{createtime}, '', '', 'short')
	  . qq[&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;]
	  . htmlcode('timesince', '', $node-&gt;{lasttime}, '')
	  . qq[&lt;/td&gt;&lt;/tr&gt;\n];

      $index++;
    }
  } # end local
  $html;
%]

[%
  return &quot;&quot;; # By number of writeups.  Turn off for now.
  my $type1 = getId(getType('writeup'));
  my $type2 = getId(getType('superdoc'));
  my $csr = $Everything::dbh-&gt;prepare(&quot;
    select DISTINCT author_user, count(author_user)
    from node
    where type_nodetype=$type1 OR type_nodetype=$type2
    group by author_user&quot;);
  $csr-&gt;execute;
  my %usrHash;
  my %hide;

  # Remove these users from the list
  $hide{getId(getNode(&quot;Webster 1913&quot;, &quot;user&quot;))} = 1;
  $hide{getId(getNode(&quot;ShadowLost&quot;, &quot;user&quot;))} = 1;

  while (my ($user, $count) = $csr-&gt;fetchrow) {
    # skip these users
    next if(exists $hide{$user});
    $usrHash{$user} = $count;
  }
  $csr-&gt;finish;
  delete $usrHash{''};
  my @author = sort {$usrHash{$b} &lt;=&gt; $usrHash{$a}} (keys (%usrHash));
  use Everything::Experience;
  my ($min, $max, $steps) = (160, 255, 50);

  my $count = 0;
  my $num;
  my $html = '';
  while ($count &lt; $steps) {
    unless($author[$count]) {
      $count++;
      next;
    }
    $num = sprintf &quot;%lx&quot;, ($max-((($max-$min)*$count) / $steps));
    my $bg = $num . $num . 'CC';
    my ($u) = getNodeWhere({node_id=&gt;$author[$count]},getType('user'));
    $html .= qq[&lt;tr bgcolor=&quot;#$bg&quot;&gt;]
      . qq[&lt;td&gt;&lt;span class=&quot;user-$author[$count]&quot;&gt;]
      . linkNode( $author[$count], $$u{title} )
      . qq[&lt;/span&gt;&lt;/td&gt;]
      . qq[&lt;td align=&quot;center&quot;&gt;$usrHash{$author[$count]} &lt;/td&gt;]
      . qq[&lt;td&gt;Level: ] . getLevel($u) . qq[&lt;/td&gt;&lt;/tr&gt;\n];
    $count++;
  }

  if (getId($USER) ne $HTMLVARS{guest_user} and
    $usrHash{getId($USER)}&lt;$usrHash{$author[$count-1]}) {

     $html.= &quot;&lt;tr bgcolor=#FF6666&gt;&lt;td&gt;&quot;
    .linkNode($USER)
    .&quot;&lt;/td&gt;&lt;td align=center&gt;&quot;
    .$usrHash{getId($USER)}
    .&quot;&lt;/td&gt;&lt;td&gt;Level: &quot;
    .getLevel($USER).&quot;&lt;/td&gt;&lt;/tr&gt;&quot;; # can`t accessrule
  }
  return $html;
%]
&lt;/table&gt;
</doctext>
  <type_nodetype>14</type_nodetype>
  <node_id>3559</node_id>
  <author_user>485628</author_user>
  <title>Saints in our Book</title>
  <createtime>2000-01-04 20:25:51</createtime>
  <nodeupdated>2005-08-22 15:36:03</nodeupdated>
</node>
