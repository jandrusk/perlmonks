<node>
  <doctext>&lt;p&gt;[demerphq], [localtime://2005-10-02 11:57:48]&lt;br /&gt;
I put [de-merphq's sandpit] into the search box, and was surprised to encounter an error. Apparently one of the references in the $NODE-&gt;{group} had been stringified into a &quot;HASH=(0xdeadbeef)&quot;. I dont know how this occured, but I patched the code to just skip such elements. We should figure out how it happened tho. Any ideas would be welcome.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], [localtime://2005-09-30 09:22:30]&lt;br /&gt;
This just means the DB was over-busy.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[Corion], [localtime://2005-09-30 03:36:19]&lt;br /&gt;
I just got two weird errors in [parselinksinchatter], but I'm a bit confused about what I see:
&lt;code&gt;
DBD::mysql::st fetchrow_hashref failed: fetch() without execute() at /usr/home/monkperl/0.8mods/Everything/NodeBase.pm line 581.
# ... Call Stack deleted by me but available
DBD::mysql::st execute failed: Lost connection to MySQL server during query at /usr/home/monkperl/0.8mods/Everything/NodeBase.pm line 717.
# ... Call Stack deleted by me but available
&lt;/code&gt;
Both errors don't seem to reference something that calls DBI in [Everything/HTML.pm], so maybe I'm looking at an old version or interpreting the line numbers in a wrong fashion. The second error looks to me like a consequence of the first error, or maybe the MySQL server was just restarted and thus lost both, the &lt;tt&gt;execute()&lt;/tt&gt; statement from &quot;line 581&quot; and then also the whole connection later. But I'm confused and document this here should this kind of error happen more often.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[ysth], [localtime://2005-09-22 20:32:53]&lt;br /&gt;
Applied.
&lt;/p&gt;

&lt;p&gt;[GrandFather], [localtime://2005-09-22 7:25:00]&lt;br /&gt;
I've patched showprivatemessages2 to add text (&lt;c&gt;&quot;Writeup Formatting Tips [id://17558]&quot;&lt;/c&gt;) so that the link text can be copy and pasted into a &quot;Send private /msg to foo&quot; msg. Could someone take a look to see if the code is sensible and, if it meets with approval, apply the patch please.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[GrandFather], [localtime://2005-09-21 21:54:00]&lt;br /&gt;
Should we add a 'GetsVoteBonus' (getLevel &lt; 5) as per 'CanConsider'?
&lt;/p&gt;
&lt;p&gt;[demerphq], [localtime://2005-09-19 14:28:52]&lt;br /&gt;
If anybody feels like doing some quick patching, search out nodes that use 'getLevel' and figure out an [accessrule] that can replace them. Not all can be, sometimes the level really is used, but for the ones where it is part of access control we want to use &lt;c&gt;Everthing::isApproved($USER,'CanConsider')&lt;/c&gt; or things like that. I've done a bunch of them, see the rules [CanHaveImage], [CanConsider] and [CanAskQuestion] for examples, or search for them and see examples of the usage. There are probably about 20 left to go...
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[ysth], [localtime://2005-09-14 00:41:22]&lt;br /&gt;
Please welcome [bobf] to [pmdev].
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], [localtime://2005-09-13 06:59:46]&lt;br /&gt;
Regarding the to-do wiki: I don't think we need to strike stuff there anymore when its done, just delete the old todo stuff. And IMO we dont need a changelog either.
So if anybody feels like doing some redecoration of the todo page id say it would be a good thing. Maybe we should [pmdev|deputize] [jdporter] and let him do it. :-)
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], [localtime://2005-09-11 15:58:15]&lt;br /&gt;
I've posted [id://491075] and [id://491074] which contain two sets of patches to the Perlmonks .PM code. This is just in case folks dont notice them through NN or RAT.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[yitzchak], [localtime://2005-09-11 05:37:51]&lt;br /&gt;
One of the gods superdocs was having trouble; I tracked it down to
getVars stringifying $_ as a side effect, so the following code
ends up with $user containing just a string &quot;HASH(0x....)&quot;.
Noting it here in case I forget to look further into it.
&lt;code&gt;
my $user = getNode('ysth','user');
getVars(getNode('level experience', 'setting')) for $user;
$user;
&lt;/code&gt;
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[Arunbear], [localtime://2005-09-10 17:24:21]&lt;br /&gt;
The add to scratchpad links are broken on PMDev because PMDev's [scratchpad_link] is not synchronized with PM's. I synced the pmdev version temporarily to test [GrandFather]'s patch, and it did then work correctly wrt scratchpad links.

&lt;/p&gt;
&lt;p&gt;[GrandFather], [localtime://2005-09-11 8:23:00]&lt;br&gt;
[id://490934] has now been tested on PMDev and seems to work except that the add to scratchpad links are broken on PMDev (looks like [ysth] has changed stuff there).&lt;/p&gt;
&lt;p&gt;Anyone care to apply the patch?
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[GrandFather], [localtime://2005-09-10 00:00:00]&lt;br&gt;
I've generated a patch for personalnodelethandler to handle Add/Remove in the personal nodelet. At the suggestion of others in the CB I've also changed the layout to:&lt;br /&gt; Manage scatchpad links&lt;br /&gt;Add to &lt;u&gt;public&lt;/u&gt; pad&lt;br /&gt;Add to &lt;u&gt;private&lt;/u&gt; pad&lt;br /&gt;(Add|Remove from) &lt;u&gt;here&lt;/u&gt;
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[de-merphq], [localtime://2005-09-07 16:50:46]&lt;br /&gt;
Ok, I've added something brief. But this is something that being able to search [wiki]'s would really help. I don't grok [Super Search] enough to want to try to be honest, but it sure would be nice if Cabal could use it for that. Anyway, if you trawl through the older pmdev wikis youll see that there is an explanation there (along with a fair amount of other useful info).
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[Tanktalus], [localtime://2005-09-07 10:17:22]&lt;br /&gt;
If anyone knows how to use the Synch Nodelet, could you kindly explain it in the [id://461491]?  It's quite unclear to me, and thus probably others.  It looks like it's something that could be quite useful in testing stuff on the dev server, but I'm not quite sure how. Thanks.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[Arunbear], [localtime://2005-09-06 16:30:44]&lt;br /&gt;
I've submitted [id://489092] which adds a '/msg the author' link at the end of repliable nodes and also to the replies of of such nodes. [id://489091] would also need applying. Here is some earlier [488804|discussion]. These are applied on the test server - see e.g. node 322466 over there for a preview.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[ysth], [localtime://2005-09-05 20:47:11]&lt;br /&gt;
I added a [Mail/Sender.pm] node so you can see what's there.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[GrandFather], [localtime://2005-09-06 11:17:10]&lt;br /&gt;
When I joined PM I had all sorts of trouble because the email with my password had no date header and was rejected by our mail server. I've just been looking through the new user code and through Everything::Mail to see where the problem is. It all looks good. Has this problem been fixed, or is PM using an old version of Mail::Sender that didn't insert a Date header by default?
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], [localtime://2005-09-02 13:29:31]&lt;br /&gt;
I mentioned this in the CB a while back, but I've found it so useful for [pmdev]ish activities, that I thought I'd make sure more of y'all see it.  Add this to your Free Nodelet:
&lt;/p&gt;&lt;c&gt;
&lt;form action='?' method='get'&gt;
&lt;input type='text' name='node' size='6' value='`id`' /&gt;
&lt;input type='text' name='displaytype' size='6' /&gt;
&lt;/form&gt;
&lt;/c&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], [localtime://2005-08-27 09:54:59]&lt;br /&gt;
Ive updated the code in [id://486817]. It now works, and is in production. I would really like to see this set of changes applied. I think there is a real benefit here. Anyway, ill prepare a full patch against the pm code today.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[de-merphq], [localtime://2005-08-25 03:45:33]&lt;br /&gt;
Just so nobody is surprised: As author_user is used to determine access control for [superdoc]s I have turned the display of this value &lt;u&gt;on&lt;/u&gt; for [pmdev]ils. It will render as &lt;c&gt;( OWNER )&lt;/c&gt; underneath the title.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[Corion], [localtime://2005-08-24 06:15:07]&lt;br /&gt;
Regarding setting up (some) more instances of pmdev - that shouldn't be too hard, as I can add new users with relative ease. They'll get a completely separate database, and thus we'd need some more &quot;transfer mechanisms&quot; to patch stuff in all directions (from pmdev-integration to pmdev-experimental etc. - but other than that, I see no problem except that I'm without good/safe/sane internet access at the moment :)
&lt;/p&gt;&lt;p&gt;&lt;i&gt;Just to clarify:&lt;/i&gt; I'm in Portugal at the moment, and while most internet cafes I've frequented also have full internet access, I don't want to do much work from a potentially spotty connection, with keyloggers and whatnot installed ;) Maybe from Braga (YAPC::Europe), or when I get back home, that is, starting after the 5th of September.&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[ysth], [localtime://2005-08-23 23:55:21]&lt;br /&gt;
Please welcome [GrandFather] to [pmdev].
&lt;p&gt;
Thanks, [demerphq].
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[de-merphq], [localtime://2005-08-23 07:24:57]&lt;br /&gt;
Ok, ive patched all of the nodes that matter. Settings are unpatched, as are a couple of infrastructure nodes where it doesnt matter.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], [localtime://2005-08-23 06:49:01]&lt;br /&gt;
No, user superdocs were more to provide access control. Although IMO there was some added benefit in being able to list them based on type, and I think the &quot;you cant do this message&quot; that they provided was nicer. But whatever. Maybe the thing we should do is provide a more fleixble response message, or something.
&lt;/p&gt;&lt;hr /&gt;


&lt;p&gt;[ysth], [localtime://2005-08-23 05:22:31]&lt;br /&gt;
Wasn't the point of [user_superdoc] having them be uniquely identifiable rather than any
permissions thing?  Maybe I misremember.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[de-merphq], [localtime://2005-08-23 04:17:51]&lt;br /&gt;
There are still a lot of references to 'user_superdoc' and 'restricted_superdoc' and 'pmdevsuperdoc' in the source code. Some of them break functionality. They all need patching. I did some, but didnt have time to do them all.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[Arunbear], [localtime://2005-08-16 05:06:45]&lt;br /&gt;
Re: synchronization of PM and PMDEV, why not have two installations for testing - one which closely mirrors PM and one for all the experimental stuff (so no need to lose the current content on PMDEV).
&lt;p&gt;I'm willing to host one of these if it's not possible to do this with the current test server alone.&lt;/p&gt;
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[ysth], [localtime://2005-08-15 09:36:25]&lt;br /&gt;
Would it be better to make hits it's own dbtable?
&lt;code&gt;
CREATE TABLE `hits` (
 `hits_id` int(11) NOT NULL default '0',
 `hits` int(11) NOT NULL default '0',
 PRIMARY KEY  (`hits_id`)
) TYPE=MyISAM
&lt;/code&gt;
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], [localtime://2005-08-15 09:21:50]&lt;br /&gt;
It requires a .PM patch... Shoudl I put one together that you can apply? Also, weren't you going to patch the parselinks stuff? Am i misremembering something?
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], [localtime://2005-08-15 08:39:49]&lt;br /&gt;
Ah, so 'hits' is what was making 'nodeupdated' change. One mystery solved.  That is easy to fix; just add nodeupdated=nodeupdated. I sometimes find 'hits' useful.
&lt;/p&gt;&lt;hr /&gt;


&lt;p&gt;[ysth], [localtime://2005-08-15 08:22:12]&lt;br /&gt;
Just starting fresh sounds good to me.  I'd recommend announcing a date at least a week or two in the future for blowing away what's there to give anyone interested a chance to rescue patches.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], [localtime://2005-08-15 06:37:56]&lt;br /&gt;
My objective is that there shouldnt be anything on PM that isn't on PMDEV. However there is lots of stuff on PM that isn't on PMDEV. This makes it very difficult to write patches for PM, because the PMDEV site is missing important stuff, or contains mismatches that mean a tested patch on PMDEV doesn't apply on PM.
&lt;/p&gt;&lt;p&gt;
The problem is that over time we have allowed the two sites to drift further and further out of synch. Getting them back in synch from that point is fairly hard. However if we start with a synched state and scripts to continue the synchronization process it shouldn't be too hard to STAY in synch.
&lt;/p&gt;&lt;p&gt;
I think you have to admit that there isnt much point in having a test server if you cant actually rely on its results as applying to the main server. After a certain point you will be developing for pmdev and not for PM.
&lt;/p&gt;
&lt;p&gt;
Regarding &quot;workspaces&quot;, they sound useful, I had something similar in mind ages back, but I was going to call them patchsets. Maybe one day.... Anyway, its really too bad there isnt any interaction between the everything dev team and us folks here. I suppose the builds have forked so far no the overlap isnt helpful, but its a pitty we cant use stuff they do....
&lt;/p&gt;
&lt;hr /&gt;


&lt;p&gt;[castaway], [localtime://2005-08-15 04:14:09]&lt;br /&gt;
Q, why is it you need the dev server identical with the real server? If the dev server is there for people to test stuff on, or experiment with new ways to do things, then it's going to get out of sync. I can't think of a way to keep it always in sync, unless we go creating a patch on both machines for every thing people test/play with, and only apply them on one, which sounds a bit crazy.
&lt;p&gt;
BTW, current Everything contains a concept called a Workspace, where edited items are all contained within the workspace, and can be all committed at once (and removed again at once, if one adds that functionality) which maybe useful to us, in keeping peoples projects/experiments collected together..
&lt;p&gt;
Anyway, as to the hits field, IIRC it could have gone out with the lastvisited stuff, since it's part of that, I'm fairly certain we're not using it at all.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[de-merphq], [localtime://2005-08-14 11:43:27]&lt;br /&gt;
[corion]: thats great. Thanks a lot. Ive been playing with pmdev today to see if what i can get going. Ive managed to get a diff of the infrastrcuture nodes going. Or at least started anyway.
&lt;/p&gt;&lt;p&gt;
(to all): Anyway, as part of the synch stuff id like to ask what people think of doing away with the 'hits' field of nodes. It has an annoying side effect that infrastructure nodes end up getting marked as updated when they really havent changed and as far as I can tell it isnt really used, and is supplemented by other better systems anyway. The relevent code is in [Everything.pm|Everything::updateHits()] which appears to be called only from gotoNode(). Would there be any negative impact from removing the hits incrementing logic?
&lt;/p&gt;
&lt;hr /&gt;


&lt;p&gt;[Corion], [localtime://2005-08-14 09:47:24]&lt;br /&gt;
I just ran a backup of the pmdev machine, so the old state of the database can be retrieved anyway - if you forgot to push a node over, it can still be retrieved from the DB dump (as an SQL statement, so some manual labor is involved). Maybe losing some cruft on pmdev isn't that bad either.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], [localtime://2005-08-14 06:57:47]&lt;br /&gt;
Ok, I get it now. Thanks [tye].
&lt;/p&gt;&lt;p&gt;
Regarding synching the two DB's. I'm starting to come to the position that the best thing to do with pmdev is do a raw resynch from a backup. IE throw away the current state of pmdev and replace it with an up to date PM. I understand [castaway]s concern about losing code as I too would lose code, but I think it makes much more sense nonetheless. Anything that people want saved from pmdev should pushed to PM as a patch. Then it will still exist after the synch. My feeling is that putting together a decent synchronization script/process will be much easier after this step, as the current state of PM is quite far from the state of pmdev right now. Just getting the script working at this point will involve a lot of by hand synchronization and testing which quite frankly I dont have the time to do.
&lt;/p&gt;&lt;p&gt;
Anyway, feedback appreciated.
&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[tye], [localtime://2005-08-13 19:22:33]&lt;br /&gt;
It was renamed because that name was already being used in the [user] table and it was easier to rename the newly-added field (which isn't yet mentioned anywhere) than to rename all references to the filed in [user].
&lt;/p&gt;&lt;p&gt;
The new node cache will probably 'ignore' the nodeupdated and lastedit fields or otherwise cause them to be set to 'now()'  each time that row is updated.  So any changes that update the node table (such as voting changing the rep) will update nodeupdated while an update to the node *text* would update lastedit.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[de-merphq], [localtime://2005-08-13 09:38:16]&lt;br /&gt;
&lt;strike&gt;Ok, im stumped, what is responsible for updating and maintaining the 'nodeupdated' field of the [node] table? [search internal code] seems to provide no useful hits, so im at a loss to explain it.&lt;/strike&gt;
&lt;p&gt;
Ok, so its autoupdated by the db. I get it now. Actually. No I dont.
&lt;/p&gt;
&lt;p&gt;
The field 'nodeupdated' seems to be referenced nowhere. The old name for the field (and the one on the pmdev server) is 'lastupdate' which seems to referenced quite a lot. I seem to remember that there was a good reason for the change, but at this point I can't recall what it was.  The question is, will anything break if I change the field name on pmdev to match live? Id really like to do this as its a stumbling block in the way of getting the synch stuff written. I can live with it for now, but it does cause problems.
&lt;hr /&gt;

&lt;p&gt;[demerphq], [localtime://2005-08-11 06:29:34]&lt;br /&gt;
Yeah sounds like a good idea to me. Also, i had an idea for extending the SDC stuff. If we add [settings] into its tables we can also have a hash of attributes for the faqlets. This could be used to maintain info like other language variants, what language the faq is in and also its state. Its not the greatest way to store info like this as its not queryable, but for the needs of SDC I think it might be ok.
&lt;/p&gt;&lt;p&gt;
Also, [Arunbear] im wondering why you dont use the &amp;lt;wikihead&amp;gt; template from above? That will create the localtime:// style wiki entires, which means that users see what time you posted using their preffered date style and localized to their timezone. Just C&amp;P the template, put your stuff in it and hit submit. The &amp;lt;wikihead&amp;gt; is transformed on submit to the heading style of this comment.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[Arunbear], 2005-08-11 10:20:14 GMT-1&lt;br /&gt;
[demerphq], I think that the faqlist approach could also be a solution to the automation of tutorials. Could we have a new 'tutlist' nodetype that does for tutorials what faqlist does for SDC nodes?
&lt;p&gt;Then, we could generalize the faqlist edit/render code to handle both faqlists and tutlists. Also put new tutorials into the 'uncategorized' group via a maintenance node. Does that make sense?&lt;/p&gt;
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[de-merphq], [localtime://2005-08-07 07:34:06]&lt;br /&gt;
Going back to this synchronization issue, at some point id like to have more intensive discussion (maybe on #pmdev?) about how we should go about doing this. [castaway] has a good point that we dont want to necessarily lose all of the stuff on pmdev site. (But the concern about moving meditations is not an issue, as the wiping process would involve deleting that content, or at the very least thining it out considerably.) Also, synching the DB structures is the most diffult part of the equation. Automating that  would seem to me to be fairly tricky. Id appreciate any ideas or thoughts people have.
&lt;/p&gt;
&lt;p&gt;
Here are some of my thoughts about synchronizing infrastrcture nodes between the sites.
&lt;/p&gt;
&lt;p&gt;
We know a specific node_id that was the maximum in the DB when it was restored, call it MaxID. This id can be used with some confidence to determine if a node has a one to one relationship between the servers. If the node we are considering is from before the MaxId then the node content is most likely shared between the servers (barring people doing stupid things). If its after then there is no direct relationship, which is where the pin table comes in. The pin table on each box shows what local node_id's are related to what foreign node_ids. We should be able to bring pmdev upto current PM using an automated solution using what we have, its just a question of how. This assumes that the DB is in synch, or rather can be synchronized. It also assumes that the modules code is in synch too. Which says that PMDEV server has to go offline for it to occur. &lt;sup&gt;(sortof stream-of-consciousness here, sorry)&lt;/sup&gt;
&lt;/p&gt;
&lt;p&gt;
re [Arunbear]: I have created [handle_node_edits] for you. I was wondering if you were going to support [sitedoclet]s as well? Ill wait until you are around before applying, but im really happy you did this. Thanx a lot.
&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[demerphq], [localtime://2005-08-07 07:03:56]&lt;br /&gt;
It is a settings thing, and it was my fault. My fault because i failed to notice that the old [parselinksinchatter] used a different way to handle the code than the other parselinks. But its a settings issue as well because it would only be an issue for folks with &quot;use small code font&quot; selected. Anyway, I fixed [parselinksincontent] and [parselinksinchatter] to do the right thing now. Thanks for the heads up.

&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[castaway], [localtime://2005-08-07 01:52:36]&lt;br /&gt;
Some recent change to something chatterbox related ([demerphq]?) has left some people seeing odd things in [Fullpage chat], when code tags are used. [Intrepid] and I both see:&amp;lt;font size=&quot;-1&quot;&amp;gt;just testing&amp;lt;/font&amp;gt; when I type:
&amp;lt;code&amp;gt;just testing&amp;lt;/code&amp;gt; - I'm guessing it's the display somehow, since the XML just contains the original code tags. - Any ideas? [ysth], for some reason, doesnt see the font tags at all, so maybe it's a settings thing?
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], [localtime://2005-08-06 13:14:02]&lt;br /&gt;
If you check out [demerphq's sandpit] you can see some statistics on nodelet utilization and additionally some stats on how often various $VARS keys are used. Be warned, going back further than a month can be slow, so avoid doing it when the site is busy.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], [localtime://2005-08-06 06:00:37](ish)&lt;br /&gt;
I guess you mean in the parsed output. It seems to be a bug, and there are others too in [get_cached_xml_chatter], its a work in progress. Patches welcome. :-)
&lt;/p&gt;
&lt;p&gt;
Also I've applied patches to make [parselinksinchatter] use [parselinksincontent]. AFAIK this completes the refactoring of the parselinks code.
&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[ChemBoy], [localtime://200508051138]&lt;br/&gt;
I notice that the new [id://146808] doesn't handle the case of &lt;c&gt;/me thinks &lt;/i&gt; then speaks&lt;i&gt; then acts&lt;/c&gt;: it strips out the initial closing &amp;lt;/i&amp;gt; tag (as unbalanced, I presume).  Is this by design, or an unfortunate side-effect?  
&lt;/p&gt;&lt;hr/&gt;
&lt;p&gt;[ysth], [localtime://2005-08-05 10:32:01]&lt;br /&gt;
There are also database differences; there's a possibly out of date diff on [366506].
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[castaway], 2005-08-03 14:41 CEST&lt;br /&gt;
Q, I'm not sure if its &quot;simpler&quot;, but I'd suggest creating a list of every code-node type comparing them, and outputting a list of those that are different, and how. I suspect that there are works-in-progress on the dev server that people would like to keep there as such. (I know I'd like to keep the moderation changes until we're done installing them here). Also copying the whole lot would mean another bunch of SoPW/Meditations etc that we don't really need over there..
&lt;hr /&gt;
&lt;p&gt;[davido], [localtime://2005-08-01 20:20:49] &lt;br /&gt;
If you have experience with the code behind the [Super Search] mechanism, please see [id://480053] for a potential new feature: Include/Exclude nodes that have replies.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], [localtime://2005-08-01 12:38:17]&lt;br /&gt;
Id really like to arrange a resynch of production and dev DB's and source code. Im wondering what route people think would be appropriate? Hypothetically I could take a backup of the DB and move it across and restore it on the dev server, and then wipe the personal stuff before it goes live, but im wondering if people have thoughts on a simpler approach?
&lt;/p&gt;
&lt;p&gt;
Also regarding the old nodegroup  based approach for handling the SDC master plan data, is there any reason beyond ease of use and lack of tuits for patching the older system that the SDC master plan is embedded in a wiki these days? see [href://?node_id=106927;whichtype=17312|this] list of existing [sectioncontainer] (a nodegroup derivative) along with [id://17316] suggest that the original system was to use nodegroups, so im wondering why we have abandonded that approach.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[ysth], [localtime://2005-07-10 02:22:25]&lt;br /&gt;
FWIW, I always use FPC and have never lost my settings.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[Limbic~Region], [localtime://2005-07-08 14:10:51]&lt;br /&gt;
FWIW - I never use FPC and have only ever had my settings get wiped out once and that was during a migration of some sort.  I just noticed that every link when viewing [showotherusers] opens up in a new tab for me.  I found this behavior to be a little odd but didn't feel it warranted a PMD.  It was later pointed out in the CB by [tye] that this is by design for FPC.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], [localtime://2005-07-07 04:29:22]&lt;br /&gt;
my settings got clobbered again today. is it possible there is something else going wrong? it seems weird that this happens so often when it never used to happen at all. Actually it occured to me that the connection may be [Fullpage Chat]. I think every time this has happened to me ive been using FPC which ive started using recently on occasion but almost never used to use.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[tye], 2005-06-28&lt;br /&gt;
I've turned off PerlMonks database backups as they keep causing people to lose their user settings.  In this last case, the extreme measure we go to to prevent long-running queries during the backup were working as well as I feel we can expect them to so I didn't see an immediate fix other than disabling them. It would be nice if pair.com would let us switch to Linux on the DB server so that this problem (which impacts lots of things besides backups, including searching) would go away.  I started writing a PM Discussion to announce this and to ask pair.com to consider this but don't have the time right now to do that as well as it needs to be done.  Note that the new node cache will fix the &quot;lose user settings&quot; part of the problem.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], [localtime://2005-06-27 14:42:51]&lt;br /&gt;
[castaway]: I had a look at the moderation stuff you mentioned on 04/27 in the wiki. I'm really confused. I didn't see any links to patches in that entry, and when i went through the various nodes they either have no patches from you, or they have &lt;i&gt;applied&lt;/i&gt; patches only. I think you need to resummarize what patches are supposed to be applied, etc.
&lt;/p&gt;&lt;p&gt;
Also you should be able to submit patches to god nodes from the test server by using 'patch to pm'
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[demerphq], [localtime://2005-06-21 04:05:26]&lt;br /&gt;
in reply to [ysth]: maybe that would help. I have to say that I really hate downvotes on patches. It seems to me to be a worthless form of feedback. The downvote doesnt in any way tell the author of the patch what the reason for the downvote, and it seems to me that people are far far more likely to downvote a patch than upvote it. If free patch votes would help this process then im all for it, but if it ended up just making people more likely to downvote then id prefer to leave it alone. Ive come very near to suggesting we remove voting from patches for this reason actually.&lt;/p&gt;
&lt;p&gt;Perhaps adding a more complex rating system would actually be better. I dont mind if people want to say &quot;i think this patch is bad because of reason X&quot; with X prodvided in a list box or something, but the sheer genericity of a downvote doesnt tell me if the voter dislikes the idea, the implementation, the style or anything like that. And downvotes give the user the feeling that they have provided feedback so they are more likely not to post a usable reply.
&lt;/p&gt;
&lt;p&gt;[ysth], [localtime://2005-06-21 01:35:38]&lt;br /&gt;
Random idea: make voting on patches not use up votes to encourage more peer review.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], [localtime://2005-06-19 12:20:33]&lt;br /&gt;

Hi, I've been a busy boy this afternoon and refactored the caching logic out from [xml chatterbox ticker] and [new xml chatterbox ticker]. This was required in order to support xmlstyle attributes in the cb tickers, as well as to support the caching of different representations of the different data sets. The new code is in [get_cached_xml_chatter] which is being tested via [id://146808] (try using xmlstyle=parsed or xmlstyle=parsed,localtime,flat. Ive put together patches that would switch over the tickers which are [id://468097|here] and [id://468145|here (new)]. Basically what happens is that the xmlstyle settings are used as part of the cachekey. The actual code to render the XML is passed in via coderef. IMO this is ok for application to the mainline code, but i figured folks might find something i missed or have suggestions so for now its just experimental.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], [localtime://2005-06-19 02:43:10]&lt;br /&gt;
Fixed.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[crazyinsomniac], [localtime://2005-06-19 02:12:23]&lt;br /&gt;
Hi.
I was viewing [id://467859] with Jblue theme ([id://234493]  [id://6181]),
and the 1st codeblock was unreadable (so I Considered: [PodMaster]: EDIT - make first code block theme safe).
[tye] clued me in that it's the CSS that's at fault.
I'd appreciate whoever knows what's what to please fix it.
Thank you.
This makes me think we need a nodelet (or an addition to one of the existing ones)
to reveal your current theme (since it's already being retrieved dynamically).
Peace.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[davido], [localtime://2005-06-14 01:13:31]&lt;br /&gt;
Does anyone know why [id://466373] isn't rendering the square brackets around &lt;code&gt;$Array[0]&lt;/code&gt; as a broken link like it used to?  And if that behavior can be explained, why does it render (as we've all gotten used to) as a link on the &quot;comment on....&quot; page?&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[demerphq], [localtime://2005-06-11 10:39:43]&lt;br /&gt;
Don't forget that [sitedoclets] are not only useful for adding documentation to superdocs, they are also useful for converting [sitefaqlet]s into &quot;smart documents&quot;. Ie, the [sitefaqlet]'s content would be transferred to the new [sitedoclet] and the [sitedoclet] &quot;reblessed&quot; into a [superdoc].
&lt;/p&gt;
&lt;p&gt;
Also there is special point that im not sure has been made clear. The name that a sitedoclet should be given should be the same name as the superdoc it is for but for the &quot; sitedoclet&quot; suffix. There is code here to make working with sitedoclets easier (in the SDC nodelete) that requires this naming convention.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[davido], [localtime://2005-06-11 02:13:38]&lt;br /&gt;
[tye] made it possible for [SiteDocClan] to create sitedoclets.  This capability is only useful to [PMDev]/[SiteDocClan|SDC] hybrids.  I've created a clickable link in [id://240586] that will create sitedoclets.  This capability is now documented in [id://174180].  Please, all [pmdev]/[SiteDocClan|SDC] hybrids have a look at the SDC wiki, and become familiar with how this works.&lt;/p&gt;
&lt;p&gt;This is from [tye]'s discussion with me on this capability:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;[tye] says  so, now pmdev/sdc hybrids can create a link to use to create a new sitedoclet, copy stuff into it, then write a patch to switch to using it and gods need just apply the patch&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;[Corion], [localtime://2005-06-10 14:33:09]&lt;br /&gt;
Some stuff of the new node cache seems to act weird:
&lt;ul&gt;
 &lt;li&gt;[demerphq] found that [newlistapproved] creates invalid SQL: &lt;tt&gt;near 'createtime desc limit 300'&lt;/tt&gt;&lt;/li&gt;
 &lt;li&gt;Likely related to that, [id://1887] has a similar error, which makes me suspect
 that the semantics/parameter handling for the &lt;tt&gt;order by&lt;/tt&gt; clause has changed:
 &lt;code&gt;56:   my( @nodes )= getNodeWhere(
 57:     {parent_node=&gt;getId($NODE)},
 58:     'categorized answer',
 59:     'reputation desc'
 60:   );&lt;/code&gt;&lt;/li&gt;
 &lt;li&gt;While looking at that, I found that [newlistapproved] doesn't display when accessed through the cache as [http://perlmonks.org/x50ro/index.pl?node=newlistapproved]. The same holds true for [id://1887] and [http://perlmonks.org/x50ro/index.pl?node_id=1887]&lt;/li&gt;
 &lt;li&gt;Add other findings here&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], [localtime://2005-06-10 13:56:35]&lt;br /&gt;
Yep. Just copy the template into the wiki and when you hit preview or update the &amp;lt;wikihead&amp;gt; tag will automagically get updated with the user and date/time info.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[de-merphq], [localtime://2005-06-10 13:43:05]&lt;br /&gt;
Does this &amp;lt;wikihead&amp;gt; thing work or what?
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[tye], 2005-06-10&lt;br /&gt;
Please &quot;/msg tye&quot; with a brief outline of what testing you plan on doing and I'll reply with the secret URL for access to the new node cache that is about 3-times more efficient reading and about 50-times more efficient updating and nearly eliminates the race conditions in updates.  I'm doling it out this way just so I can know when folks are done testing.  No elaborate test plan is required.
&lt;/p&gt;&lt;p&gt;
The URL hits production PerlMonks but the node cache treats the DB as read-only.  The SQL generated to make the updates is shown at the bottom of the web page rather than being executed.
&lt;/p&gt;&lt;p&gt;
I plan to announce the details of the improvements including the code RSN.
&lt;/p&gt;&lt;p&gt;
Thanks in advance.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], 2005-06-09&lt;br /&gt;
Yes, that does sound nice... Except for the umbrellas... And the wife might present a problem... But we can work around those.  So, yes, please work on that.  Thanks.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2005-06-09&lt;br /&gt;
But [tye] you don't want the patch. You want a nice long soothing holiday on a beautiful beach with scantily clad young nubiles serving you expensive pretty drinks with umbrellas in them, along with a basket of new personal communication devices that all happen to support perl..... ;-)
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], 2005-06-08&lt;br /&gt;
And if I want the patch?  I think a better solution is d/l code allowing you to pick which you want and even supporting &lt;code&gt;&lt;code name=&quot;...&quot;&gt;&lt;/code&gt;.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq] 2005-06-09&lt;br /&gt;
I noticed an interesting side effect of the new &amp;lt;c&amp;gt; tags: download code doesn't know about them yet. Which IMO isnt that bad a thing, as it means that you can mix the two. I personally find it mostly irritating when inline code is mixed with a larger snippet i want to download. If we encourage the short form for inline, and the discourage its use for larger snippets with the current behaviour of download code we dont have this problem. If we must make download code pick this content up then could we have a user setting to control whether inline content is downloaded or, perhaps to ignore 'c' tags? Anyway, just food for thought. I didn't want to give it a wider audience as that would in of itself set precedent. I will say tho that I found the behaviour of the 'c' versus 'code' to be quite useful just now: [id://289272] has a patch and a complete program, only the program will show on [href://?displaytype=displaycode;node_id=289272|download]. :-)
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[davido], 2005-06-07&lt;br /&gt;
Testing whether [id://434853] lists front-door wiki edits as janitor edits.  Please ignore this entry (or take interest).&lt;/p&gt;&lt;p&gt;&lt;b&gt;Update: &lt;/b&gt;Behavior confirmed.  Regular non-janitorial wiki edits (what I'm calling front-door edits) show up on [id://434853] as janitorial (back door?) edits.  I'm not sure this is in any way significant, other than being a behavior that probably should be mentioned to [Cabal] as a whole.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[ysth], 2005-05-29&lt;br /&gt;
Patched [id://461589|reapnode] and [id://461603|Visit Reaped Nodes] to handle snippets.  The latter could have been done better perhaps, but I don't feel snippets deserve a lot of effort :).  I verified that all other considerable types should work; all are subclasses of document or use the document dbtable ([perlcraft] falling into the latter category).  Patches have been tested on the pmdev server.
&lt;/p&gt;
&lt;p&gt;[demerphq], 2005-05-29&lt;br /&gt;
Ive put some defenses in place for this but I doubt its a comprehensive patch. Sigh. Anyway, at least it isnt quite so easy any more.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[belg4mit], 2005-05-28&lt;br /&gt;
[ChemBoy] recently decided to play around and sent
&lt;blockquote&gt;
&lt;code&gt;/me decides to investigate(href://index.pl) [link://javascript:alert('dear  me')]&lt;/code&gt;&lt;/blockquote&gt;
to the CB. Apparently the the thing to patch is [id://165672|htmlScreen],
though I'm not getting my head around it right now. See also [id://155477]
and parent node [id://155451] for some example code.
&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;[castaway], 2005-04-27&lt;br /&gt;
Added bumper christmas bonus pack of patches for the great approval code update. I suggest we take it slowly, and start by testing things ;)
&lt;p&gt;
Non-destructive/interfering changes (ie dont affect the site at all):&lt;br /&gt;
[Moderation Nodelet], [isapproved], [newapprove], [listapproved settings], [move2sect], [newcachedlistapproved]
&lt;p&gt;
Table changes:&lt;br /&gt;
Rename [approves] to &quot;approvalhistory&quot;.&lt;br /&gt;
Create a table &quot;approvalstatus&quot; with the same layout/content as [approval]&lt;br /&gt;
Add unique index to approvalhistory on approves_id, whenapproves, userapproves&lt;br /&gt;
Add unique index to cachedinfo on code_id, cachekey&lt;br /&gt;
&lt;p&gt;
Now we can test: Someone should *really* check that [newapprove] still does the correct &quot;linktype&quot; stuff here! If it does, then we can test the moderation nodelet adding things to approvalhistory/status, without disturbing anything else.. (I think! /me ponders about the [approved] table.. )
&lt;p&gt;
Slightly more interfering:&lt;br /&gt;
[nodelet permissions] - allows people to actually choose the moderation nodelet.&lt;br /&gt;
&lt;p&gt;
Integration/Interfering:&lt;br /&gt;
[Node Status] - use isapproved.&lt;br /&gt;
[Approval Nodelet] - use newapproved and isapproved.&lt;br /&gt;
[Editors Nodelet] - remove removelinks (functionality gone to moderation nodelet).&lt;br /&gt;
[moderatelist default outer container] - use newapprove opcode.&lt;br /&gt;
[writeupmover] - actual movement now done in newapprove, remove from here.&lt;br /&gt;
SoPW, Meditations etc. - use newcachedlistapproved.&lt;br /&gt;
&lt;p&gt;
After testing and then applying the other patches, there needs to be a big &quot;convert all approved nodes to new system&quot; run, there is a god-accessible node for this, [convert approval records], which I also have a patch to, but cant create, so some god please suggest how I patch it.. ,) - This might be done better in pure SQL though.
&lt;p&gt;
I hope thats all of it..

&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[castaway], 2005-04-27&lt;br /&gt;
[belg4mit], You can suggest new code node creations, by patching [request for new code node].
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[belg4mit], 2005-04-26&lt;br /&gt;
Any thoughts on splitting out the user's custom CSS style in [htmlhead]?
I ws thinking that instead of inlining it it sould be references via REL

like the other style sheets. This way we could set a high-expiry for it
and save a few bytes/simplify pages at essentially no cost. I'd be willing
to do it but I would appear to lack the powers to create new code nodes.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[Tanktalus], 2005-04-21&lt;br /&gt;
Patch for [id://445390] offered.  Comments appreciated.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], 2005-04-18&lt;br /&gt;
It formats just fine for me.  Of course, I haven't thwarted the limits on thread display by setting them insanely high (as [vroom] intended).

&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[grinder], 2005-04-18&lt;br /&gt;
The depths of the threads in [id://446796] are pushing the
formatting to the limit. The indents are far too wide. Maybe once
a certain depth is reached the indent needs to be changed from absolute

to relative?&lt;/p&gt;

&lt;p&gt;Is this actually feasible in the current code, or would it involve major surgery?&lt;/p&gt;
&lt;hr /&gt;


&lt;p&gt;[VSarkiss], 2005-04-01&lt;br /&gt;
In spite of the date, the patch [id://444341] is not a joke, just a mistake.  Ignore or nuke as you will.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[grinder], 2005-02-14&lt;br /&gt;
If I click on the XML link from my [grinder|homenode] I get &lt;code&gt;XML Parsing Error: not well-formed
Location: http://www.perlmonks.org/index.pl?displaytype=xml;node_id=29008
Line Number 573, Column 1:&lt;/code&gt;
&lt;p&gt;I wish I knew why. I wonder if it is because I might have written some invalid HTML? Happy Valentines Day!
&lt;/p&gt;
&lt;p&gt;Update: Hmm, &lt;code&gt;&lt;field name=&quot;doctext&quot;&gt;&lt;/code&gt; should have its content wrapped in &lt;code&gt;&lt;[!CDATA[ ... ]]&gt;&lt;/code&gt; methinks.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], 2005-01-06&lt;br /&gt;
We don't use 'bugbase' so it isn't important.  If you'd enjoy the challenge, feel free.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[Limbic~Region], 2005-01-06&lt;br /&gt;
I just discovered [id://927] is b0rk.  I asked in the CB as to what I should do and [tye]'s suggestion was to write a patch to fix it.  Admittedly, I haven't spent a lot of time trying to find out how to be a good [pmdev|devil].  Anyone mind hand holding me through this?
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-12-28&lt;br /&gt;
As a temporary measure id like to apply [id://417765] which will make homenode scrubbing automatic for [gods] which I believe is a prudent safety measure. Any [gods] reading this should let me know if they object.
&lt;/p&gt;
&lt;p&gt;[demerphq], 2004-12-17&lt;br /&gt;
If you view a homepage with the parameter 'scrub=1' then the location and doctext fields will be put through the normal HTML scrubbing process. If people think this is ok we can switch it to use a setting.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[theorbtwo], 2004-12-03 23:58 CET&lt;br /&gt;
Please welcome [Arunbear] to [pmdev].
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[bart], 2004-12-03&lt;br /&gt;
So... if you really don't want to be seen, even just once, use the ticker login on a different perlmonks domain, one you aren't logged into. There are plenty to choose from.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[castaway], 2004-12-02&lt;br /&gt;
ticker=yes worked fine for me last I used it, but I've only tried it from external clients..
&lt;p&gt;[ysth], 2004-12-01&lt;br /&gt;
I think if you visit the login page with ;ticker=&lt;true&gt;; but with a login cookie already set (with no ticker), the cookie will make you visible that once.  Could this be what happened?
&lt;/p&gt;&lt;p&gt;
If I want anonymity, I don't bother with the login page, I just use
/?node=whatever;op=login;user=ysth;passwd=wouldntUlike2no;ticker=yes;expires=%2B10y.
&lt;p&gt;
...hm, just tried that and it did record me as visiting once only.  Looks like loginUser will always do that if there is an existing cookie w/o ticker set.
&lt;p&gt;
Update: patch for anyone who messing with HTML.pm and cares to to try (untested):
&lt;code&gt;
--- HTML.pm.orig 2004-12-01 16:50:03.223900800 -0800
+++ HTML.pm 2004-12-01 16:52:28.342571200 -0800
@@ -1475,7 +1475,10 @@ sub loginUser
   

    if(my $oldcookie = $query-&gt;cookie(&quot;userpass&quot;))
    {
-        $user_id = confirmUser( split (/\|/, urlDecode ($oldcookie)) );
+        my ($nick, $crpasswd, $ticker) = split (/\|/, urlDecode ($oldcookie));
+        $ticker ||= $query-&gt;param('ticker') &amp;&amp; $query-&gt;param('ticker') eq 'yes';
+
+        $user_id = confirmUser( $nick, $crpasswd, $ticker );
    }
   
    # If all else fails, use the guest_user
&lt;/code&gt;
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], 2004-12-01&lt;br /&gt;
&quot;Pretend I'm not here&quot; works fine for me.  You must be using it wrong.  How?  I don't know since you didn't really give a very good bug report. (:
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[theorbtwo], 2004-12-01&lt;br /&gt;
Re memcached, you're not the first to think so -- I brought it up several years ago.  OTOH, I never managed to find a good place to insert it.  I think it'd be helpful for using instead of the database to keep track of what's now the versions table... but I'm not sure how to implement that.  Also, I think [Everything/CacheQueue.pm] needs a complete rewrite to, for ex, use perl arrays instead of implementing it's own linked lists, which I suspect will both make things faster /and/ reduce memory usage.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-12-01&lt;br /&gt;
Anybody know the &quot;pretend im not here&quot; flag on the login page doesn't work? I just used it and it logged me and made me show up in OU. Something I frankly _didn't_ want to happen. For various reasons I wont be around to post formally much and I really dont want to show up in OU when i visit quickly for some reason or another. Id really appreciate it if a kind [pmdev]il or [gods|god] could look into fixing this. thanks.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-11-20&lt;br /&gt;
I think folks aught to read [id://409249] and have a look at [http://www.danga.com/memcached/|memcached]. I think it has a lot of potential for being very useful to us here at PM. But thats on a 5 minute review.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[davido], 2004-11-18&lt;br /&gt;
A little strange behavior discovered.  Point your browser to [id://5766] (#5766) and then type something in the CB and click 'talk' (or hit enter).  The nodelets will disappear, and you will see (after the top-of-page stuff) the following error message: &quot;&lt;code&gt;Can't use string (&quot;HASH(0x890f79c)&quot;) as a HASH ref while &quot;strict refs&quot; in use at [listpatches] line 346.&lt;/code&gt;&quot;, followed by a dump of the &quot;listpatches&quot; code, and a call stack.  This behavior doesn't occur 100% of the time, but can be repeated about 25% to 50% of the time, from what I can tell.  Not sure exactly what triggers it.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-11-18&lt;br/&gt;
I applied a whack of [ysth]s patches to bring us up to date with the tools of the recent Everything module patches, as well as a few other bits and bobs like the displaytype='bare'.  I'll spare you the details, or rather leave them to [ysth]. I will note that i think that it would be nice if when the viewcode link currently renders as text it should instead link to relevent display page and the displaypage link should go to text. IMO that would be more natural. It always jars me when I go to the view code link and its text (even if the display link is so close... yes im picky) Anyway, Thanks [ysth].
&lt;/p&gt;
&lt;p&gt;[demerphq], 2004-11-15&lt;br /&gt;
Re: &quot;node.nodeupdated vs. node.lastupdate.&quot; If you review the old wiki's youll see that this is actually a change that was applied to PM after the pmdev server was set up. The place that needs to be changed is there. Im not even certain exactly what was changed as part of this mod, so I cant really be much help. Maybe [tye] can fill in more of the details or a closer investigation will reveal what needs to be done.
&lt;/p&gt;
&lt;br /&gt;
&lt;p&gt;[ysth], 2004-11-14&lt;br /&gt;
I've got a number of small patches ready to apply to make vars patches report
Current/Different correctly, remove kludges from before the Everything.pm patch, and switch viewcode stuff over to checking patchable fields.  Feedback welcome.  ([demerphq]'s requested executable flag needs to be added later to
avoid circular patch application order dependency.)
There are order dependencies, and I would like to be around when they're applied, so hope to catch a helpful god in the cb sometime in the next day or so.

&lt;p&gt;
While testing [listpatches] I noticed a database difference between here and the test server: node.nodeupdated vs. node.lastupdate.  It would be great if someone with SQL-fu could remedy that and then apply [http://pmdev.flux8.com:8081/index.pl?node_id=324542] which reverses changes I had to make to get the listpatches from here (plus my Current change) to run over there.  (Plus whatever else needs doing for the field name change.)
&lt;p&gt;[Corion], 2004-11-14&lt;br /&gt;
Works for me, on Firebird 0.9. Straightforward to use too, good stuff.&lt;/p&gt;

&lt;p&gt;[grinder], 2004-11-14&lt;br /&gt;
Works for me, on Mozilla 1.8a4. Straightforward to use too, good stuff.&lt;/p&gt;

&lt;p&gt;[Petruchio], 2004-11-12&lt;br /&gt;
Greetings.  I've created a Mycroft search plugin for the Monastery; you can find it [http://petruchio.perlmonk.org/mycroft/|here].  It works for
me on Firefox 1.0; before I post a note to the rest of the Monastery, I'd appreciate
it if anyone would like to install it, and /msg the results to me.

&lt;/p&gt;
&lt;p&gt;As well, I'm sure some of you actually understand this sort of stuff, whereas I just cobbled this together; so any improvements will be welcome, also.  I've already had one report that it didn't install on Mozilla; I have no idea why.  I'm not likely to be able to actually rectify any such problem, so fixes would be great.  Thanks.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-11-10&lt;br /&gt;
I've added page type info to the type tree. It'll show any pagetypes that are defined directly against the type, not any that are inherited.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-11-08&lt;br /&gt;
Ok, I still think it would be useful to have a flag stored somewhere that shows if the node type is &quot;executable&quot;. Putting alongside the patch/code fields makes sense. For instance AFAIK it would only have to be provided for 'superdoc', 'pmdevsuperdoc', 'restricted_superdoc' and maybe nodelet at some point. This would mean that things like [Search Internal Code], [Patch Display Page], [PMDev Nodelet], [Patch Lister], [Node Lister], could use that setting to show &quot;exec&quot; links or the opposite as i proposed before. Either way i feel this is highly desirable, as I have on at least one occasion browsed to a [restricted_superdoc] from one of these places and automatically executed code. Likewise when working on complex patch sets  being able to see clearly that one item is for an executable page and the other is for its code would be really useful.
&lt;/p&gt;
&lt;p&gt;
So i beg you, when you put together the setting that tye describes (with all the relevent data in one easy to maintain place, presumaby ala, [handle_nn_settings] or the like) please include this information. Ill write the link code, but I can say its something ive wanted so many times I really plead for you to include it.

&lt;/p&gt;
&lt;p&gt;
:-)
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-11-08&lt;br /&gt;
[tye] and I discussed this in the chatterbox and decided what to do...patches coming soon.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[tye], 2004-11-08&lt;br /&gt;
Okay, I think this is the fourth time I've said this. Each time I seem to get approval for the idea but alternate solutions keep getting proposed.  Let's just make displaytype=viewcode work for any node that contains code and there is little point in trying keep yet another chunk of meta data in sync so some html code can be written to avoid viewcode for the cases that currently don't require it.
&lt;/p&gt;&lt;p&gt;
I'd like the patch setting to be the one setting that knows the node types and fields that contain code (and perhaps whether only gods are allowed to view or create patches).  At least we should shoot for only having one such setting rather than the current several plus copies in other places.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[ysth], 2004-11-09&lt;br /&gt;
Too difficult to tell if display and viewcode do the same thing.  (Are there node symlinks?)  Instead
it just makes code links for anything for which it knows they will work.
BTW, I'm planning on looking at [search internal code] to see if it needs
more types added or can reuse the same [node viewcode fields|list], and also preventing [document displaycode page] from displaying any type listed.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-11-09&lt;br /&gt;
From CB:
&lt;code&gt;
&lt;demerphq&gt; I think a code_link htmlcode would be useful. it would take a $NODE as arg (default to current) and returns the appropriate link if the type would not normally show as code otherwise return &quot;&quot;.
&lt;demerphq&gt; it would be useful in many places IMO. thus htmlcode would return &quot;&quot;, but superdocs would return a link.
&lt;demerphq&gt; or is that what you have just done and im not paying sufficient attention?
&lt;/code&gt;
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[ysth], 2004-11-08&lt;br /&gt;
viewcode now works for all types in [node viewcode fields].  Let me know if
anything is awry.  (Still need to special-case patches of vars fields.)
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[ysth], 2004-11-07&lt;br /&gt;
I'm working on updating viewcode to work for all reasonable types.
I'd also like to set up a different displaytype to dump out the
code as text/plain.  This could be the same type as [theorbtwo]
suggests for dumping a setting if it has a more general name, but
I didn't see a reaction to [demerphq]'s criticism of [theorbtwo]'s displaytype=hash.
&lt;p&gt;
My first thought was to just use displaycode; to my surprise, I see
that that already is used for pm code type nodes that extend
[node://document;;nodetype]; this means that anyone can pull up a superdoc
and see whatever part of the code is between &amp;lt;code&amp;gt; tags.
(Fortunately, there are only a few such nodes, and they have very little of interest; e.g.
[node://1322;displaycode].)  I plan on fixing this but first want to know if
displaycode is a good generic replacement for [theorbtwo]'s hash.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-10-30&lt;br /&gt;
[href://?node_id=157620;searchterms=-%3estartform%3b-%3estart_form%3b-%3estart_multipart_form;dogrep=1;or_terms=1|this search] shows that startform() start_form() and start_multipart_form() has been excised from the code and replaced with [openform] calls. Also as you will note you can now &quot;or&quot; the terms together instead of 'and'ing them, which is why I missed so many on the first pass. :-)
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-10-29&lt;br /&gt;
Umm, before people get used to this could you rename it from 'hash' to 'dump' or something? I dont think having a displaytype of 'hash' makes a lot of sense. For one settings vars will soon support alternate types, for two it doesnt scale past settings nodes very well (what happens if we want other types to return a dump like object?).  IMO 'displaytype=dump' is a lot more appropriate a choice.
&lt;/p&gt;
&lt;p&gt;[theorbtwo], 2004-10-29&lt;br /&gt;
settings now have a displaytype=hash display page, which gives you code for a nice hash-ref, ready for copy-and-pasting to whatever local script needs it.  See [href://?node=approval+nodelet+settings;displaytype=hash] for an example.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], 2004-10-29 GMT+1&lt;br /&gt;
Er, I found my browser had wandered into the weird url and hit back until I found the page where it happened, that was (iirc) the preview page where the submit url was clearly wrong, I looked into the code and didn't find an openform so assumed that this was related. I also had a look around for different uses of start_form() and they were so varied that replacing them all made sense anyway. BTW, is there a reason we don't use start_multipart_form() always? My understanding is the only difference is how easy it is to parse, and that since we use CGI.pm we dont need to worry about it. Anyway, since I did that patch I havent had a bad url, but with the serverchanges and etc, who knows eh?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2004-10-28&lt;br /&gt;
I'm interested in what evidence you found for this.  I don't understand how that would be the cause.  And if 'preview' was enough to trigger it then the problem would have been rampant (and it certainly wasn't causing me problems).
&lt;/p&gt;&lt;p&gt;
So, if you remember more details, I'd like to hear them for my own education.
&lt;/p&gt;&lt;p&gt;
Thanks for the major clean-up, BTW.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], 2004-10-26 GMT+1&lt;br /&gt;
I tracked the problem with /index.pl/node_id=XXX stuff back to improper use of $q-&gt;start_form() and $q-&gt;start_multipart_form(); So I replaced them all with an expanded [openform] that can take a -multipart=&gt;1 parameter that causes it to use start_multipart_form(). Any logic you guys may want to put in there now will affect pretty much every form out there (that doesnt hand craft their start forms anyway :-)
&lt;/p&gt;&lt;hr /&gt;
[id://403447]

















</doctext>
  <type_nodetype>68046</type_nodetype>
  <node_id>500173</node_id>
  <author_user>474174</author_user>
  <title>pmdev wiki through 2005-10-02</title>
  <createtime>2005-10-14 04:58:48</createtime>
  <nodeupdated>2005-10-14 00:58:48</nodeupdated>
</node>
