<node>
  <doctext>&lt;p&gt;[tye], [localtime://2006-12-12 12:04:51]&lt;br/&gt;
I will likely revert any patches that get applied that allow arbitrary redirecting in such a way.  We don't need a new toy for people to play by constructing URLs that change user settings for other people but mask what they've done with a sneaky redirect, etc.
&lt;/p&gt;&lt;p&gt;
If you want to redirect, then write some javascript to do that in your Free Nodelet so that only those who choose to accept such code can be fooled by such tricks.
&lt;/p&gt;&lt;p&gt;
Setting user settings via opcode(s) has its advantages.  But it also requires that the code for each user setting be split into multiple pieces.  And so it usually gets implemented in a way that doesn't check whether the requested change is one that should be allowed.  So we either get hard-to-maintain code or a security problem.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[jdporter], [localtime://2006-12-12 09:26:05]&lt;br/&gt;
Anybody know of a good way to make a fetch (get or post) of a perlmonks node return a node other than the one specified by the node/node_id? &lt;br/&gt;&lt;br/&gt;
Example scenario: viewing a random node; in my [Free Nodelet] is a form which submits to [User Settings]; submit that form, and have perlmonks come back to the node I'm viewing, rather than [User Settings]. &lt;br/&gt;&lt;br/&gt;
One way I can think of would be to have a &quot;no-op&quot; op which takes a node_id arg; all it does is return that node. I believe this is similar to how moderation form submissions work, except that it's inverted: rather than have the op do the work and return to the given node_id, have the node_id &quot;do the work&quot; and return to the node specified by the op.  It would essentially be a &quot;redirect&quot; op. &lt;br/&gt;&lt;br/&gt;
Of course, one could argue that it would make more sense to make [opcode] wrappers around such functions as setting [User Settings], etc... And the potential for misuse of a &quot;redirect&quot; op is considerable...
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[ysth], [localtime://2006-12-10 14:27:19]&lt;br /&gt;
There's no automatic process, but generally, a new node is created and the patch for_node is changed to the new node, so it no longer appears on the [id://218666] list.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[jdporter], [localtime://2006-12-10 10:02:27]&lt;br/&gt;
I notice that &quot;patches&quot; submitted via [id://218666] never actually get applied.
I assume that's how it works?
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[ysth], [localtime://2006-12-09 22:45:00]&lt;br /&gt;
A little project for someone: [id://588843]
&lt;/p&gt;&lt;hr/&gt;
&lt;p&gt;[Arunbear], [localtime://2006-12-09 17:34:47]&lt;br /&gt;
Any thoughts on how to deal with the troll currently [href://?node_id=3989&amp;BH=1&amp;a=nodereaper&amp;nf=1&amp;Po=1&amp;re=N&amp;BIT=spam|targeting] the poetry section? Is it the same one that was targeting [Tutorials]? We could do a similar patch for Poetry (require registration), but then he/she/it might just move on to another section ...
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[grinder], [localtime://2006-12-04 16:06:01]&lt;br /&gt;
There's a typo on Selected Best Nodes: &lt;code&gt;s/The days catch/The day's catch/&lt;/code&gt;. It ain't worth writing a patch, when some deity could just dive in...
&lt;/p&gt;

&lt;p&gt;[jdporter], [localtime://2006-12-03 22:38:39]&lt;br/&gt;
&lt;blockquote&gt;&lt;i&gt;I'd like it if the header remains small enough that the start of the top entry fits within the window without scrolling&lt;/i&gt;&lt;/blockquote&gt;
I agree 100%.
&lt;blockquote&gt;&lt;i&gt;...so that [pmdev] can work on the code of almost all nodes, even if they can't use (view) the node.&lt;/i&gt;&lt;/blockquote&gt;
I feel this is pretty important; but given that several of the [gods] are active [pmdev]ils, maybe it's not critical.
&lt;blockquote&gt;&lt;i&gt;We will, of course, rename it to &quot;illuminati&quot;...&lt;/i&gt;&lt;/blockquote&gt;
Perfect! :-)
&lt;blockquote&gt;&lt;i&gt;And we'll rename [borg's belly] to &quot;oubliette&quot;.&lt;/i&gt;&lt;/blockquote&gt;
Well, I like it.... I'm always on the lookout for an opportunity to use the word [wp://oubliette]. But I'm not sure it's really apropos here, since nobody stays in the belly for very long. It's more like a brig. ;-)
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[tye], [localtime://2006-12-03 21:05:01]&lt;br /&gt;
Well, of course, either of you can adjust the header if it doesn't meet your needs.  I'd like it if the header remains small enough that the start of the top entry fits within the window without scrolling, though.
&lt;/p&gt;&lt;p&gt;
Currently, [pmdev]ils can't view code of nor apply patches to nodes that they don't have access to.  Originally, this was only true of &quot;restricted_superdoc&quot;s (superdocs that only [gods] can view).
&lt;/p&gt;&lt;p&gt;
We revamped security to get rid of restricted_superdocs (yay!) and to be more flexible.  Although this is cleaner, it means that [pmdev]ils can't work on nodes meant only for [janitors] (currently there aren't many other cases, but there might be more in future).
&lt;/p&gt;&lt;p&gt;
There are some [gods]-only nodes that I'd rather not have [pmdev]ils be able to see the source code of.  But most of the [gods]-only nodes should have code available to [pmdev].
&lt;/p&gt;&lt;p&gt;
I was considering changing the rules so that [pmdev] can work on the code of almost all nodes, even if they can't use (view) the node.  We'd make the few &quot;secret&quot; [gods]-only nodes owned by a special super-secret group to make it so [pmdev] isn't allowed to see the code for those nodes.
&lt;/p&gt;&lt;p&gt;
I was just going to reuse [developers] for this purpose.  We will, of course, rename it to &quot;illuminati&quot; and remove [root]'s membership, as the membership of the &quot;illuminati&quot; should, of course, list nobody.
&lt;/p&gt;&lt;p&gt;
And we'll rename [borg's belly] to &quot;oubliette&quot;.
&lt;/p&gt;&lt;p&gt;
Objections or conerns?
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[jdporter], [localtime://2006-12-03 15:07:11]&lt;br /&gt;
Um, that was me. I gambled that I wasn't the only one who finds
it hard to locate the top of the most recent entry without some
obvious visual clues.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[demerphq], [localtime://2006-12-03 06:30:10]&lt;br /&gt;
Some of that yelling is me yelling at me. Sorry. Id appreciate it if you didnt remove it as sometimes I actually pay attention to it. :-)
&lt;/p&gt;&lt;p&gt;
Regarding [castaway]s patches, I'll review the list and see if I can figure out what needs to be done etc. I know I reviewed all the stuff that was listed in the wiki before.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[tye], [localtime://2006-12-03 01:39:18]&lt;br /&gt;
See [href://?node_id=160975;limit=50%2C1354] to find most (all?) of the approval revamp patches that [castaway] so kindly worked on after me.  She wrote about the order in which they need to be applied long ago in the wiki (about that same 2005-04-27 date, surely).  I don't mind revisiting the design some if people see problems with it, but I'd rather have motion on at least finally being able to rip out the old &quot;links&quot; table.
&lt;/p&gt;&lt;p&gt;
FYI, I removed a big, all-caps repeat of the &quot;please leave some space below this header&quot; as such yelling annoys me.  But I noticed that [demerphq]'s comment was butted right up against the header so perhaps a big SCREAMING ALL-CAPS SPACE-WASTING notice is required?  I hope not.  In comparison, calling out in public those who don't head the polite version is more fun and I hope will be at least as effective (the loud one didn't seem to work that well anyway).
&lt;/p&gt;&lt;p&gt;
FYI, I didn't put the loud one in and I don't recall putting in the polite one but it has been so long that I certainly could have forgotten.  So that means there are at least two of us that particularly appreciate the blank space being left behind for us to put our comments (including fresh blank space) amid.
&lt;/p&gt;&lt;p&gt;
I did a small bit of vertical compression in the top matter of this wiki.  I didn't like having to scroll down just to find the template to 'copy' and the gap in which to 'paste' it.  I hope the slight compaction is acceptable.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[demerphq], [localtime://2006-11-29 20:07:17]&lt;br /&gt;
Well, the last time this came up I looked into the state of the patches and code that was or is available and I couldnt figure out what the situation was.  Im willing to look into it again tho.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[tye], [localtime://2006-11-29 15:54:59]&lt;br /&gt;
I just checked and found that the old approval scheme ([id://883]) is likely causing significant performance problems for PerlMonks.  It'd be nice to put more effort into getting the approval revamp (which has all been coded long ago) moving again, because the performance impact will only increase.  I regret that I have very little time to devote to such efforts but will help as I can if others chip in.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Corion], [localtime://2006-11-23 17:23:36]&lt;br/&gt;
&lt;h3&gt;Things to do for &lt;tt&gt;[http://pmdev.flux8.com/robots/]&lt;/tt&gt; (so I don't forget them)&lt;/h3&gt;
Feel free to add the stuff you find with it too. I have time off work starting mid-December
and hope to start working on the robots view then, but help is certainly welcome. The problem
is mostly that I don't know what needs to be done and hence can't even hand out tasks
to the helpful hands, hence I dump the things that need to be done.
&lt;ul&gt;
&lt;li&gt;The reply/comment/download links shouldn't appear anymore&lt;/li&gt;
&lt;li&gt;The code should use the same code path as &lt;c&gt;/bare/&lt;/c&gt; does so nodelets and other fluff gets hidden&lt;/li&gt;
&lt;/ul&gt;
Maybe this should go elsewhere?
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[jdporter], [localtime://2006-09-06 16:17:45]&lt;br/&gt;
[belg4mit], you actually don't need a fully qualified link.&lt;br/&gt;
&lt;c&gt;[href://?node=ar0n&amp;style=css]&lt;/c&gt; does the job[href://?node=ar0n&amp;style=css|.]
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[demerphq], [localtime://2006-09-06 15:09:11]&lt;br /&gt;
People actually use that style. [Petruchio] for instance. I dont think it should be removed. Improving it is an option tho
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[belg4mit], [localtime://2006-09-05 12:19:17]&lt;br /&gt;
There is some very old cruft cluttering the monastery created by [http://perlmonks.org/?node=ar0n&amp;style=css|ar0n]. Pardon the FQ link, but it points you to the material in question, which is further documented on the node. It might be interesting for anyone worth pushing CSS further, or trimming some fat?
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Corion], [localtime://2006-08-12 18:41:36]&lt;br /&gt;
We have now an infrastructure for static nodes. The infrastructure consists of three parts:
&lt;ol&gt;
&lt;li&gt;The [static general container] renders the static version of the page.&lt;/li&gt;
&lt;li&gt;A cron job runs &lt;tt&gt;[id://567111|dump-static-nodes.pl]&lt;/tt&gt; every 60 minutes (at 54 minutes), which downloads
all nodes which are listed in the &lt;c&gt;public_html/.htaccess&lt;/c&gt; file to their
static copies.&lt;/li&gt;
&lt;li&gt;The following shell script can be used by the [gods] to quickly mark nodes as
static and regenerate the static versions:
&lt;c&gt;
#!/bin/bash

NODE=$1

if [ -z $NODE ]; then
    echo &quot;Syntax: $0 node_id&quot;
fi

    set -x

CMD=$(cat &lt;&lt;-HTACCESS
        # Static node $NODE
        RewriteCond %{REQUEST_URI} ^/(index\\.pl)?\$
        RewriteCond %{QUERY_STRING} node_id=$NODE\$
        RewriteRule . /$NODE.html [R,L]

HTACCESS)

for SERVER in 'monkads qs321' 'monkperl qs343'; do
    echo $SERVER
    echo &quot;$CMD&quot; | ssh -l $SERVER.pair.com &quot;cat &gt;&gt;~/public_html/.htaccess; perl -w dump-static-nodes.pl --node
=$NODE&quot;
done
&lt;/c&gt;
&lt;/li&gt;
&lt;/ol&gt;
There is one small niggle with the &lt;c&gt;;style=static&lt;/c&gt;, as the links are still relative,
which doesn't work out too well with the HTML pages. But as a quick stopgap measure to stem
a flood, this should be enough.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Corion], [localtime://2006-08-12 12:44:01]&lt;br /&gt;
In reference to creating static pages from the site, there is now [static general container], which mostly is the same as the [bare general container] except that it contains a short message
why this page is as it is. The timestamp of the page generation should be added to that container.&lt;/p&gt;
&lt;p&gt;I've also written the &lt;c&gt;.htaccess&lt;/c&gt; parser, so that it should be a matter of adding it to a cron job to create static copies for all pages that get redirected. This should give us some load protection.
&lt;/p&gt;&lt;p&gt;In a similar way to the [static general container], there should be another container for the robot playpen to produce the same output except with a different message at the top (&quot;You are visiting the search engine friendly version of Perlmonks, click here to get to the real page&quot;). I'm not sure that the two (or three, counting [bare general container]) nodes warrant an abstraction, but maybe somebody comes up with more uses for this.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Corion], [localtime://2006-08-11 03:32:56]&lt;br /&gt;

The long-winded columns are remains of the original approach to replace the access_log completely (UA, referer). The local IP turned into hostname comes from %ENV and is included so &quot;both&quot; logfiles can be conveniently imported via some database loading mechanism, and I'd prefer to keep something to correlate the requests to the machines. I logged numbers for user and nodetype because I thought these would be easier to correlate back to the table rows and be more convenient to handle in SQL, but my manual testing consisted of looking up the node IDs too, so it's propably saner to log the titles (which are available anyway). I plan to import the log into a (non-Excel) DB and the program will read the headings from @Everything::AccessLog::columns. Possibly, there should be a (gods only, so we avoid an AOL situation) http download in Everything for the log or select portions of it, and that download would add the header row.
&lt;/p&gt;&lt;p&gt;I don't think that &lt;c&gt;mod_deflate&lt;/c&gt; would help us much as it is (slightly) more CPU intensive and the webservers (at least one of the two) are often starved for CPU, not bandwidth.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[McDarren], [localtime://]&lt;br /&gt;
Something else that may be worth investigating (if it's not already being used) is the Apache [http://httpd.apache.org/docs/2.0/mod/mod_deflate.html|mod_deflate] module. I've found that this is excellent for speeding up page loads (and saving bandwidth), especially where the pages have a large amount of text (as ours do). One thing to be aware of however, is that there is a small trade-off insofar as extra CPU time is required to compress the pages. A couple of good write-ups on the benefits of mod_deflate (including some benchmarks) can be found [http://www.ffnn.nl/pages/articles/linux/apache-2-mod_deflate-benchmark.php|here] and [http://www.sitepoint.com/article/mod_deflate-apache-2-0-x|here].
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[tye], [localtime://2006-08-11 01:17:01]&lt;br /&gt;
MySQL on FreeBSD means that any even remotely long-running queries can cause the site to nearly lock up, so I've long since eliminated all long-running queries out of necessity because pair.com is unable/unwilling to &quot;fix&quot; the &quot;MySQL on FreeBSD&quot; problem.
&lt;/p&gt;&lt;p&gt;
I also wrote a long query killer that logs queries much sooner than MySQL does and you can look at that log going back years on the DB server.
&lt;/p&gt;&lt;p&gt;
On the new access log, I'd drop some long-winded info that is already tracked in the apache log: user agent, full URL (just record the host name sent in the HTTP header, if any), local IP turned to host name (which is invarient anyway), referer (if that is what that is).  I'd also log names not numbers for user and nodetype.  And put a tiny label on the remaining numeric columns.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Corion], [localtime://2006-08-09 03:10:35]&lt;br /&gt;
[McDarren] suggests another good angle - MySQL has an automatic log for [http://dev.mysql.com/doc/refman/4.1/en/slow-query-log.html|long running queries]
which will enable us to compare long running requests versus long running queries. Long running requests which do not correlate to long running queries are requests that consist of  &quot;too many&quot; queries which is a potential for reduction, while long running queries are just that.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[theorbtwo], [localtime://2006-08-08 12:49:36]&lt;br /&gt;
Well, I just got one with no useful clue as to what was going on and thus didn't report it.  These things happen from time to time.  In fact, just search the access log for /&quot; 500 / to find the 500s.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Corion], [localtime://2006-08-08 07:06:36]&lt;br /&gt;
Indeed, the longer I think about it, the more I come to the conclusion that my code logs much
information that plain Apache logging doesn't provide - one problem I have are spurious 500 errors without any indication as to what happened anywhere. But maybe these happen on plain PM as well without people complaining.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[theorbtwo], [localtime://2006-08-08 06:52:42]&lt;br /&gt;
[Corion], it sounds like your code does something importanly missing from apache-based logging: notes the time taken by the query.  (It'd be double-plus-good if it could note the increase in the memory footprint from the query, but I don't know how you'd do that.)
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Co-Rion], [localtime://2006-08-07 13:04:46]&lt;br /&gt;
I for one welcome our two [pmdev]ilish overlords! Welcome [McDarren] and [wfsp].
&lt;/p&gt;&lt;hr/&gt;


&lt;p&gt;[Corion], [localtime://2006-08-03 15:30:02]&lt;br /&gt;
Leave it to me to go the hard way and &lt;i&gt;then&lt;/i&gt; to discover the easy route. &lt;c&gt;~/www_logs/access_log&lt;/c&gt; and &lt;c&gt;~/www_logs/error_log&lt;/c&gt; are what I just reimplemented. D'oh.
&lt;/p&gt;&lt;hr/&gt;


&lt;p&gt;[Corion], [localtime://2006-08-03 12:55:31]&lt;br /&gt;
I have now completed our own AccessLog. The core of the code
lives under Everything/AccessLog.pm. The module has one
subroutine, &lt;c&gt;log_request&lt;/c&gt;, which takes a code reference
as its only parameter. Before and after that coderef is run,
a line will be output to a file in &lt;c&gt;/tmp&lt;/c&gt; containing various
information, partly from %ENV (UA, client IP, URL) and partly from Everything
($USER, $GNODE) and partly from elsewhere (timestamp, time taken).
&lt;/p&gt;&lt;p&gt;
The code &lt;strike&gt;currently only lives on &lt;c&gt;qs321&lt;/c&gt; and&lt;/strike&gt; is accessible as [http://perlmonks.org/index-log.pl]. If nobody objects,
I'll modify both webservers to use this logging in the hope
of linking our slowdowns with problematic queries.
&lt;/p&gt;&lt;p&gt;
One thing that the log file doesn't provide is the POST parameters
of requests, and many queries against the site are via POST parameters
(voting, chatting, posting). Any idea is welcome here.
&lt;/p&gt;&lt;hr/&gt;



&lt;p&gt;[demerphq], [localtime://2006-07-18 09:48:42]&lt;br /&gt;
Thats probably true, but I didnt get mentored (that I remember) and nor did any of the regular pmdev contributors, so I guess its not going to kill them. If they can handle reading the source and figuring out stuff then they will learn fast enough. Also we have more resources available these days, so at worst they find getting started difficult and wont contribute, which is basically the same thing as if we dont let them in, and at best they will dive in as you or I did and post patches, where we can feedback in a concrete way. I mean the best way to learn PM is to try to accomplish something and ask the questions needed to accomplish it. And im happy to monitor pmdev to make sure such questions are answered.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[tye], [localtime://2006-07-18 09:28:52]&lt;br /&gt;
It is my experience that not mentoring makes for a bad experience for the new member, not just annoyance for some old members. *shrug*
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[demerphq], [localtime://2006-07-18 04:33:29]&lt;br /&gt;
IMO let em join regardless of mentoring. Ill answer questions as and when I can as will others with experience. 
&lt;/p&gt;&lt;hr/&gt;
&lt;p&gt;[Corion], [localtime://2006-07-18 02:35:37]&lt;br /&gt;
Ooops - I forgot - [McDarren] is also willing to join [pmdev]. I'd &quot;shepherd&quot; the new arrivals, except that I don't know much about the Everything structure, myself. I have no objections against either of them.
&lt;/p&gt;&lt;hr/&gt;



&lt;p&gt;[yitzchak], [localtime://2006-07-17 18:53:02]&lt;br /&gt;
[wfsp] is interested in joining pmdev; anyone have comments or interested in mentoring?
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Corion], [localtime://2006-07-16 17:15:46]&lt;br /&gt;
Thanks to [bobf], we now have a Happy MonkDay message when people have an anniversary at PerlMonks. I haven't announced this neither in [Tidings] nor as a PMD.
&lt;/p&gt;&lt;hr/&gt;


&lt;p&gt;[jdporter], [localtime://2006-07-12 10:31:00]&lt;br/&gt;
Good catch, [tye].&lt;br/&gt;
Clearly, [HuckinFappy] has an obscure sense of humor, and is submitting a new quip.  Truly, it's too obscure for me to make sense of... though I do find spending &quot;a month&quot; in &quot;a morning&quot; mildly ironic.&lt;br/&gt;
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[tye], [localtime://2006-07-11 23:44:19]&lt;br /&gt;
My first thought was that this was some bizarre reaction to a server error from [Corion] applying a patch that happened around that time.  My second thought just came to me when I saw:
&lt;/p&gt;&lt;blockquote&gt;&lt;i&gt;
You gained 1 experience point. Have an obscure sense of humor? /msg your quips to [pmdev], and mention shownewexp
&lt;/i&gt;&lt;/blockquote&gt;&lt;p&gt;
in the XP nodelet (though, again, such a reaction mostly baffles me).  So I think someone will just have to ask.  Frankly, I'm not curious enough to bother.  Feel free, [jdporter] (or whoever). (:
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[jdporter], [localtime://2006-07-11 10:50:40]&lt;br/&gt;
[HuckinFappy] recently sent [pmdev|us] a [/msg] saying
&lt;blockquote&gt;&lt;i&gt;
shownewexp - Yippee...nothing I'd rather do with a morning than spend a month writing Javascript
&lt;/i&gt;&lt;/blockquote&gt;
Anybody know what his complaint is?  I don't see how [shownewexp] is requiring monks to write javascript, and certainly nothing in any recent patches to that node...
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Corion], [localtime://2006-07-10 16:31:30]&lt;br /&gt;
While on a foray with [jdporter] to remove some bugs from [Recently Updated Home Nodes], we found some items that could be worthwhile low hanging fruit:
&lt;ul&gt;
&lt;li&gt;Check code for possible SQL interpolation attacks - [Recently Updated Home Nodes] allowed some CGI parameter to become interpolated into the SQL&lt;/li&gt;
&lt;li&gt;&lt;strike&gt;Replace all hardcoded references or getNode() calls to [NodeReaper] by &lt;c&gt;$HTMLVARS{NodeReaperID}&lt;/c&gt;&lt;/strike&gt; (done)&lt;/li&gt;
&lt;li&gt;Add a hard upper limit of three months to [Recently Updated Home Nodes] to reduce maximum query time&lt;/li&gt;
&lt;li&gt;Refactor [Recently Updated Home Nodes] and [nodesWithinDays] so that RUHN can use [nodesWithinDays]. The problem is that [nodesWithinDays] orders nodes by creation time instead of time of last update.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[jdporter], [localtime://2006-07-05 07:31:24]&lt;br/&gt;
Well, it certainly is frivolous... but there's plenty of precedent for that!&lt;br/&gt;
I like the idea of putting it in the XP Nodelet.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[bobf], [localtime://2006-07-05 02:53:39]&lt;br /&gt;

I was thinking of creating a friendly &quot;Happy Monkday&quot; message (selected at random from a list of options) that appears if a user logs in on his/her monk anniversary.  First, would this be a worthwhile addition?  Second, any suggestions as to how best to implement it?&lt;br /&gt;&lt;br /&gt;
I was thinking of simply adding it to the XP nodelet ([id://5848]) as part of [id://5766], but it may be better to add a new htmlcode page for it (?).  I intended to simply compare the month and day of the user since and current times (example from [id://81]) to determine if it was the user's monk day.
&lt;br /&gt;&lt;br /&gt;
Update: The patch is [id://559825]
&lt;br /&gt;
Update: Applied in [id://561601] by [Corion], Jul 16, 2006 at 16:15 CDT
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Tanktalus], [localtime://2006-04-05 10:06:41]&lt;br /&gt;

Patch for [nodesWithinDays]: [id://541390], as per [id://540184].  Tested on the pmdev server already.  My query to the general public netted very little interest, and the most negative comment I actually received was really neutral - &quot;I don't really care, doesn't affect me.&quot;  So I have to assume either no one is affected, or no one that is affected actually cares (or they ignored the note altogether).

&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[de-merphq], [localtime://2006-03-29 07:56:52]&lt;br /&gt;
Sort of. A lot of it has been superceded but whats there isn't outright wrong. IMO what isnt on the pmdev [id://461491] should be moved there.
&lt;/p&gt;&lt;hr/&gt;


&lt;p&gt;[jdporter], [localtime://2006-03-28 15:02:33]&lt;br /&gt;
Is [Aristotle]'s [id://243469] still relevant/accurate?
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[demerphq], [localtime://2006-03-17 18:32:43]&lt;br /&gt;
Do you see any reason not to change it to be more useful?
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[tye], [localtime://2006-03-17 15:07:31]&lt;br /&gt;
Yes, it makes no sense. It's always been that way. I checked all of the versions back to what existed when I got access.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[de-merphq], [localtime://2006-03-17 13:59:06]&lt;br /&gt;
The last line of Everything::getRef() is effectively 
&lt;c&gt;
return ref $_[0];
&lt;/c&gt; 
I think thats wrong, and i think it contradicts the documentation of the routine as well, imo it should say 
&lt;c&gt;
return ref $_[0] ? $_[0] : undef;
&lt;/c&gt;
the current behaviour makes no sense to me and i cant see anything relying on it.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Arunbear], [localtime://2006-03-12 10:11:57]&lt;br /&gt;
I'd like to propose a new nodetype: pmdevfaqlet (a subtype of [sitefaqlet]). The idea is to have something like the Site Faqs but specifically for [pmdev] topics i.e. pmdevfaqlets would be readable and editable by [pmdev]s only. This would allow easier expansion and indexing of the content currently on the [id://461491]. 
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[demerphq], [localtime://2006-03-11 07:39:29]&lt;br /&gt;
IMO the best thing to do is use the [id://145597|GRUNT] to do the querying. The docs on it are in the pmdev wiki here. The only thing is when it gets &quot;released&quot; youll need to change the node id, but you should be able to get whatever you want using it. And in XML.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Arunbear], [localtime://2006-03-11 07:33:11]&lt;br /&gt;
The [id://106927] node is still here, though 'Gigantic Node Lister' is just a caption of that node rather than the node title.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Corion], [localtime://2006-03-11 07:28:17]&lt;br /&gt;
It got replaced by the [Big Pretty Nodelist] some time ago (but I don't remember when).
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[grinder], [localtime://2006-03-11 00:00:00]&lt;br/&gt;
&lt;p&gt;I can no longer access the [gigantic node lister]. Is there another
technique for pulling out node selections? I'm rewriting the Snippets
Index. and the page has changed so the current code no longer works,
and it's fugly screen scraping anyway, so I'd like something that is
a) kinder on the db, b) simpler for me to code and c) future proof.&lt;/p&gt;

&lt;p&gt;The GNL would have done it for me, but it may be deprecated these
days -- I missed the announcement if it was. What I really want is
a single page result that gives me author id, author nick, node id,
node title, date created, num replies.&lt;/p&gt;

&lt;p&gt;And if it could also have node_type, where type in (code, craft,
snippet), I would be stoked.&lt;/p&gt;
&lt;hr/&gt;

&lt;p&gt;[jdporter], [localtime://2006-02-26 17:15:44]&lt;br/&gt;
Definitely edited, not patched. But then, I wonder if [perlsolutions] shouldn't be deprecated somehow.
Either that, or somehow re-relevantized!  Perhaps it would make sense for [Pedagogues] to have editorial
purview over the [perlsolutions]?
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[de-merphq], [localtime://2006-02-26 07:43:34]&lt;br /&gt;
The reason you are seeing that is that the patch display code doesnt know how to deal with [perlsolution]s. The real question i think is whether [perlsolution]s should be patched or edited?
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[ww], [localtime://2006-02-25 23:35:48]&lt;br/&gt; yep! saw same as [jdporter]. &lt;/p&gt;
&lt;hr/&gt;

&lt;p&gt;[jdporter], [localtime://2006-02-25 21:10:48]&lt;br/&gt;
Alert reader [RobPayne] detected a bug in [id://1018] (which is a [perlsolution]!).&lt;br/&gt;
To correct it, I created [id://532834].
When I tried to view this patch (including immediately after submitting it),
I get a message saying &lt;b&gt;Illegal patch&lt;/b&gt;.
Do y'all see the same thing?  The patch lister seems to show it as o.k., however.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[demerphq], [localtime://2006-02-25 14:47:33]&lt;br /&gt;
I havent checked into it in detail, but on my homenode links arent being handled correctly. Probably an override somewhere, but it was a bit surprising... :-) (by the way im back from holiday now)
&lt;/p&gt;&lt;hr/&gt;


&lt;p&gt;[jdporter], [localtime://2006-02-16 13:01:55]&lt;br/&gt;
Great!  I've modified my [id://528587|patch] to do exactly this, in case the [gods]
deem it expedient.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Tanktalus], [localtime://2006-02-16 12:05:06]&lt;br /&gt;
I have no problem with it being there - but the way it is/was is just confusing.  Better would be to put text with it, including the expanded version:
&lt;blockquote&gt;
  To help someone by giving [id://17558], use &quot;&lt;c&gt;[id://17558]&lt;/c&gt;&quot; in your message.
&lt;/blockquote&gt;
Then at least it's clear that the text is there unexpanded on purpose.
&lt;/p&gt;&lt;hr/&gt;
&lt;p&gt;[GrandFather], [localtime://2006-02-14 18:57:50]&lt;br/&gt;
I asked that the &lt;c&gt;[id://17558]&lt;/c&gt; text be there when sending a private msg because often that is a useful link to include in the msg. I use it frequently and would be sorry for it to go, but I'll not fight anyone who thinks it too ugly for words and wants it gone.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[grinder], [localtime://2006-02-13 17:47:26]&lt;br/&gt;
The &quot;Number of Monks by Level&quot; page is fugly beyond words. I've submitted a patch to kill the parens and right-align the numbers. It would be nice to apply it, or something like it.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[jdporter], [localtime://2006-02-13 10:44:26]&lt;br/&gt;
Ah, thanks for the clarification, [tye]!&lt;br/&gt;
And good point.  I actually have a number of such nodes bookmarked in my Personal Nodelet for exactly this purpose.
&lt;/p&gt;

&lt;p&gt;[davido], [localtime://2006-02-13 00:10:32] &lt;br /&gt;
I've submitted a patch for [id://17245], [id://529741|here].  It seemed so straightforward that I'm wondering if I missed something.  If someone could have a look at it and get it approved, it would be great.  This is in response to [id://529728].&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], [localtime://2006-02-12 16:04:40]&lt;br /&gt;
That link is *supposed* to be output unexpanded.  It is for people who want to /msg authors about their messed-up formatting in some node.  Personally, I don't think the inclusion is justified.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[jdporter], [localtime://2006-02-08 12:36:47]&lt;br/&gt;
I created a [id://528587] to address the issue [Tanktalus] raised below.&lt;br/&gt;
But I do think (as I noted in &lt;b&gt;Update&lt;/b&gt; below) that the context of that
thing is very curious.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[jdporter], [localtime://2006-02-08 12:28:37]&lt;br/&gt;
Whatever. I don't fully buy it; but whatever.
&lt;/p&gt;&lt;p&gt;
Btw - I wish to point out that the wiki entry template includes blank lines
above and below. Please be sure to, at the very least, put a blank line above your new
entry. Thanks.
&lt;/p&gt;&lt;p&gt;
On to business: I don't think we want to link to jobs.perl.org in the titlebar.
&lt;ol&gt;
&lt;li&gt; the titlebar already has a lot of stuff. we should probably be looking for ways to trim it down instead.&lt;/li&gt;
&lt;li&gt; should jobs.perl.org get special treatment? or should we also link to use.perl.org,
perl.com, perldoc.perl.org, dev.perl.org, etc.? MHO says no.&lt;/li&gt;
&lt;/ol&gt;
I note that the [id://237040] includes the adviso that jobs.perl.org is the place
to go for job ads. ([id://237057] [id://504424])
&lt;/p&gt;&lt;p&gt;
I also note that there is a nodeful of [id://236792], but it's rather crufty.&lt;br/&gt;
As is the [id://1053|Information nodelet], which happens to include a link to [id://236792].
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[demerphq], [localtime://2006-02-08 02:58:28]&lt;br /&gt;
Hey, [jdporter] did you miss the note that says
&lt;code&gt;
## New stuff always comes at the top, even replies.
&lt;/code&gt;
Please dont inplace edit. Its hard to tell what has been changed. Thanks.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Corion], [localtime://2006-02-07 12:53:06]&lt;br /&gt;
I created a [id://528504|patch] to [monktitlebar], which adds &quot;Perl Jobs&quot;
with an external link to jobs.perl.org - I'm just not sure if my approach of hardcoding the &lt;c&gt;&lt;a href=&quot;http://jobs.perl.org&quot;&gt;...&lt;/a&gt;&lt;/c&gt; would be
preferrable over &lt;c&gt;[http://jobs.perl.org|...]&lt;/c&gt;. Also, do we want a link to jobs.perl.org on the site?
&lt;/p&gt;&lt;hr/&gt;
&lt;p&gt;[demerphq], [localtime://2006-01-31 12:41:13]&lt;br /&gt;
Some time back i changed the way superdocs were handled so that we werent running parselinksincode on the same data multiple times. This change means that you cant just return pm links from a superdoc section anymore. So, what needs to happen is that the code responsible for this needs to use linkNode and not an &lt;c&gt;[id:// ] &lt;/c&gt; tag. 
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[jdporter], [localtime://2006-01-31 12:31:33]&lt;br/&gt;
It does?  Can you say where/when, more specifically? I'm not seeing it.
&lt;/p&gt;&lt;p&gt;
&lt;b&gt;Update&lt;/b&gt; - It appears that the link/text in question comes from [id://51845].
What I find strange is that it is only included in the page returned when someone 
uses [id://48824] to send a message which&amp;nbsp;&lt;tt&gt;=~&amp;nbsp;m|^Re&amp;nbsp;\[id://|&lt;/tt&gt;. 
Isn't that odd?  What could be the purpose of that?
&lt;/p&gt;

&lt;p&gt;[Tanktalus], [localtime://2006-01-31 10:04:11]&lt;br /&gt;
The [id://48824|message inbox] seems to have &lt;c&gt;[id://17558]&lt;/c&gt; without being expanded.  I'm not sure why, but thought someone here might know why it wasn't getting changed into &quot;[id://17558]&quot;
&lt;/p&gt;&lt;hr/&gt;
&lt;p&gt;[demerphq], [localtime://2006-01-22 08:00:57]&lt;br /&gt;
Does anyone know why we have [href://?dogrep=1;node_id=157620;searchterms=notepointers;or_terms=1|notepointers]? The search says that they are only used in note maintenance nodes, and are apparently superfluous. Should we chop this out? The table is quite large and from what i can tell duplicates the note table pretty much.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[demerphq], [localtime://2006-01-15 14:12:16]&lt;br /&gt;
Ive updated [Big Pretty Nodelist] to be a little more informative and easier to use. Hopefully you all like it.&lt;br /&gt;
As part of this I noticed that adding a call to [parselinksintime] seriously slowed down the page fetch, I therefore puttogether [reuseable_code] which can be used to get a codref form of htmlcode nodes. Note that this won't represent much of a saving if the code being reused itself uses other htmlcode nodes. But in the case of a simple utility method like [parselinksintime] it made a big difference.  It might be worth considering some tricks to make this work with such cases. Although it probably would be really tricky.
&lt;/p&gt;&lt;hr/&gt;


&lt;p&gt;[de-merphq], [localtime://2006-01-15 08:39:43]&lt;br /&gt;
RAT already supports a way to do this. Tell him to use the &lt;&lt;&lt; arrows to back up to the correct date and then pad forward day by day. I think if you look at the code of the RAT youll find also that there is a way to specify a date range but that it is undocumented.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[davido], [localtime://2006-01-15 01:08:20] &lt;br /&gt;
[Limbic~Region] posted the following message to the [PMDev] inbox:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;I was hoping to be able to get a Newest Nodes page representing 2005-12-09 through 2006-01-01. I was off-line and would like to play catch up. If possible I would be most appreciative. Cross posted to gods in case there is no non-godly way&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Such a request could be satisfied with [Super Search] if the engine supported both a &quot;From Date&quot; and a &quot;To Date&quot;.  &quot;To Date&quot;, if left blank, would default to the present.  &quot;From Date&quot;, if left blank, would default to the beginning of time.  Currently [Super Search] only has a &quot;Starting at&quot; date field, which runs queries from that date to present.&lt;/p&gt;
&lt;p&gt;If date could be constrained at both ends, [Limbic~Region] could search for root nodes posted between 2005-12-09 and 2006-01-01 to catch up on what he missed during that specific window of time.&lt;/p&gt;
&lt;p&gt;The [Super Search] code gives lines 560..588 and 278..295 as a working &quot;From date&quot; example that could be applied toward adding a &quot;To date&quot; option... at least that's the impression I get by looking over the code.  If it sounds like I'm on the right track, if there's a general interest in seeing this feature added, and if adding such an option is as straightforward as it seems it ought to be I could tackle it if those more familiar with [Super Search]'s code are too busy to add such a feature.  Comments are welcome before I jump.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Update, a few moments later...&lt;/b&gt;&lt;br /&gt;
Another way to solve [Limbic~Region]'s query would be to implement a from date and to date option for [Newest Nodes] (perhaps with a two-week window limit to save the servers from someone requesting a [Newest Nodes] for all time).  If such a feature were to be deemed beneficial, it should be rolled out in tandom with a similar feature upgrade for [Recently Active Threads].  ...just a thought.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], [localtime://2006-01-14 20:55:26]&lt;br /&gt;
Unfinished: [Big Pretty Nodelist]&lt;br /&gt;
I also did some changes to the scratchpads so that both public/private pads arent visible on the same page. 
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[tye], [localtime://2006-01-03 13:39:10]&lt;br /&gt;
Instead, let's make CatQ+A nodes owned by their authors.  Then we can delete a bunch of code instead of adding more.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[planetscape], [localtime://2006-01-03 09:16:30]&lt;br /&gt;
&lt;br&gt;
A while back, I observed that the original author of a [Categorized Questions and Answers] does not actually accrue XP for upvotes (or lose XP for downvotes), in contrast to what it says [id://20059|here]. So I thought I'd try to track it down and fix it. [theorbtwo] ended up helping me quite a bit, and we also found and fixed a [id://502437|related issue] (patch not yet applied).&lt;br&gt;&lt;br&gt;
The real problem turned out to be in [id://165696], and again, with [theorbtwo]'s assistance, I created a patch. I understand the process of patching [id://118397]s is different than the usual, so after consulting [demerphq], here is the diff for the patch:&lt;br&gt;
&lt;code&gt;
--- Experience.pm	2005-10-24 07:19:51.125028800 -0500
+++ NewExperience.pm	2005-10-24 08:00:48.989264000 -0500
@@ -179,7 +179,9 @@
         my $rand=rand(1.0);
 
 	return unless $$USER{votesleft};
-        return if $$NODE{author_user}==getId($USER);
+        return if (($$NODE{original_author} == getId($USER)) || ($$NODE{author_user} == getId($USER)));
+
+        my $author = $NODE-&gt;{original_author} || $NODE-&gt;{author_user}; 
 
 	my @votetypes = split /\s*\,\s*/, $$VSETTINGS{validTypes};
 
@@ -188,7 +190,7 @@
        
          if($$NODE{reputation}&lt;1 and $weight&gt;0 and !$$NODE{postbonus}) {
             Everything::printLog(&quot;postbonus given for $$NODE{node_id}&quot;); 
-            adjustExp($$NODE{author_user},$weight); 
+            adjustExp($author, $weight); 
             $$NODE{postbonus}=1;
             updateNode($NODE,-1);
         }
@@ -211,8 +213,8 @@
 		adjustExp($USER, 1);
 	}
 
-        adjustExp($$NODE{author_user}, $weight) if $rand&lt;=$ODDSUP and $weight&gt;0; 
-        adjustExp($$NODE{author_user}, $weight) if $rand&lt;=$ODDSDOWN and $weight&lt;0; 
+        adjustExp($author, $weight) if $rand&lt;=$ODDSUP and $weight&gt;0; 
+        adjustExp($author, $weight) if $rand&lt;=$ODDSDOWN and $weight&lt;0; 
 	
         $$USER{votesleft}--;
 	updateNode($USER, -1);

&lt;/code&gt;
Thanks in advance!&lt;br&gt;
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[tye], [localtime://2005-12-29 10:02:50]&lt;br /&gt;
Those timezones have the &quot;wrong&quot; sign because you aren't supposed to use those, use [timezone settings], so it doesn't matter.  They are only for backward compatability and FreeBSD only has &quot;offset from GMT&quot; timezones that are for even further-backward compatability and so are from before the sign of offsets were reversed.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[demerphq], [localtime://2005-12-29 09:42:07]&lt;br /&gt;
Ok, thats what i thought. I actually ended up confused because of the way that [get_display_types] was showing the display page list on the nodetype view. [ysth] didn't change the titles of the 'old' pages which made it look like the original implementation was overriding the older one. Ive modified [get_display_types] to be more clear.&lt;br /&gt;
BTW, thanks a lot guys, this is great stuff.
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[Arunbear], [localtime://2005-12-29 09:31:00]&lt;br /&gt;
The display / edit code for [faqlist] was refactored into [doclist], so [faqlist] and [tutlist] could just inherit from doclist to get their display/edit logic. Ditto for [faqstring], [docstring] and [tutstring].
&lt;p&gt;As a precaution, [ysth] amended [faqlist]'s display / edit pages so that using displaytype=olddisplay would invoke [faqlist display page] whereas displaytype=display will invoke [doclist display page] (and likewise for edit).&lt;/p&gt;

&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[demerphq], [localtime://2005-12-29 09:07:23]&lt;br /&gt;
Is there anything explaining [doclist] and the changes to [faqlist] and [tutlist]? I think I get the idea, but I just want to make sure i understand things properly. Restructuring the type relationships make sense, but [ysth]s comment in the SDC wiki didnt seem to be correct. I cant find a 'olddisplay' displaytype for faqlist etc, and it looks like the faqlist display/edit pages are overriding the doclist stuff.... Anyway, merry holidays all. :-)
&lt;/p&gt;&lt;hr/&gt;


&lt;p&gt;[jdporter], [localtime://2005-12-29 08:18:18]&lt;br/&gt;
What would y'all think of adding &lt;c&gt;title&lt;/c&gt; attributes to links generated from
[id://43037|shortcuts]?  
(Many/most modern browsers give access to the &lt;c&gt;title&lt;/c&gt; text, via e.g. a balloon.)
The thing I'd like to see is the node type.
Too much overhead?

Perhaps it could be an option controlled in [id://1072]...
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[demerphq], [localtime://2005-12-29 06:01:57]&lt;br /&gt;
[vroom]: [id://460747] is about the best explanation I know. Although I'm not sure what backwards compatibility we have to support there, especially as the timezonechooser should be removed from user settings anyway...
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[jdporter], [localtime://2005-12-28 11:14:38]&lt;br/&gt;
Could someone please make the [id://6345] superdoc use the [id://500477]? TIA!
&lt;/p&gt;&lt;hr/&gt;

&lt;p&gt;[vroom], [localtime://2005-12-28 01:01:01]&lt;br /&gt;
Why are the values and labels of the GMT offsets opposite in the timezone dropdown in [user settings] dropdown, and [user display page].  I'd expect if I selected GMT-5 from the dropdown I'd get my timezone.  Instead I need to select GMT+5, the value for that dropdown is -5.  Seems to me the labels and values should match up.
&lt;/p&gt;
&lt;p&gt;[Corion], [localtime://2005-12-20 15:36:14]&lt;br /&gt;
I (briefly) looked at the robot playpen, and for the current implementation, all that's needed would be a url that makes &lt;c&gt;/robots/&lt;/c&gt; invoke &lt;c&gt;/index.pl&lt;/c&gt; or even &lt;c&gt;/&lt;/c&gt; with the same parameters. Maybe that'd be done already by simply allowing &lt;c&gt;/robots/&lt;/c&gt; as yet another valid URL.&lt;/p&gt;
&lt;p&gt;The solution as it is currently implemented is really inelegant, because it hardcodes the URL in two places (&lt;c&gt;urlGen&lt;/c&gt; and &lt;c&gt;linkNodeTitle&lt;/c&gt;), and a more elegant approach would be to rewrite every URL from &lt;c&gt;/robots/(\d+)&lt;/c&gt; to &lt;c&gt;/?node_id=$1;style=robots&lt;/c&gt; and from &lt;c&gt;/robots/(.*)&lt;/c&gt; to &lt;c&gt;/?node=$1;style=robots&lt;/c&gt;. But for that to work, I'll have to refamiliarize myself with Everything again.&lt;/p&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], [localtime://2005-11-30 19:02:16]&lt;br /&gt;
The whole thing of sqlDelete() not returning a count in allocateVotes() lead me into [id://513135|renovating] the vote fairy outright. Ive put a version of it on the DB server called Chores.pl which ive tested with the exception of the vote_fairy code. If called with a true argument it wont update or run the fairy.
&lt;/p&gt;


&lt;p&gt;[de-merphq], [localtime://2005-11-28 16:44:53]&lt;br /&gt;
I've updated [id://512007] so that it uses indexes for all of its DB stuff. The current votefairy tablescans the node table, which this fixes in addition to the CB related changes. And its actually something to watch for: &lt;c&gt;UNIX_TIME(field)&lt;UNIX_TIME(now())-$seconds&lt;/c&gt; is going to table scan, whereas if 'field' is indexed somewhere, then &lt;c&gt;field&lt;date_sub(now(),interval $seconds second)&lt;/c&gt; will use the index. I've actually contemplated posting it as a meditation as its a subtle issue that people should be aware of. Anyway, I think that patch is ready to apply, but I haven't run it in any way to verify there aren't nits. I did check all of the queries (or rather the where clauses).
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], [localtime://2005-11-28 02:59:45]&lt;br /&gt;
Unarchiving old messages works fine for me.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[planetscape], [localtime://2005-11-28 00:56:16]&lt;br /&gt;
Recent [Patch Lister|patches] to the [id://48824] seem to have broken a few things. [http://planetscape.perlmonk.org/MessageInbox.htm|Reports] indicate that (a) {per [QM]} deleting a message artificially increments the number of archived messages (but does not actually archive them), and (b) {per [Intrepid]} unarchiving messages archived prior to (presumably) the patch being applied apparently deletes those messages permanently. I have not verified the latter, because I have no old archived messages; those archived and unarched when I tested it earlier this evening seem to behave normally. Apologies if this bug report is in the wrong place. I also /privmsged [demerphq].
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[demerphq], [localtime://2005-11-20 06:56:17]&lt;br /&gt;
You may have noticed that I've been working on a new ticker. Ive decided to call it the [id://145597|General Request Unified Node Ticker (GRUNT&amp;trade;)].  
&lt;/p&gt;&lt;p&gt;
Below is a provisional version of its user documentation. Ive played around with it, and it seems to have acceptable performance, even on nasty nodes like the thread which should not be named. The idea is to provide a single interface for doing all of the node related queries that we provide, but with a uniform markup scheme, and with easier to consume data, ie, normalized timestamps in easy to process formats (ISO and epoch), normalized field names for all types of info (based on the actual fields involed as a general rule), and a single code base.
&lt;/p&gt;
&lt;p&gt;
Open questions are [bobf]'s request about including content, which I could see being an additional field, possibly with two options, one for the first N bytes, and one for the full doctext. I think however the structure of PM doesnt lend itself to returning this type of info efficiently so its also possible that it should be left to the individual node xml view, or restricted to documents based nodetypes. I haven't looked into this too much as I am aprehensive about the load issues it might involve.  Limit could be signifigantly restricted if the options were used, to ameliorate the load, but I still wonder. Also I'd like to implement server side polling restrictions but I haven't worked out how it should be done.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;hr /&gt;
&lt;h3&gt;[id://145597|General Request Unified Node Ticker (GRUNT&amp;trade;)]&lt;/h3&gt;
&lt;p&gt;
Returns an xml data set containing information about nodes, normally in order of ascending node_id. The result set can be constrained and controlled in various ways allowing a single point of contact for most node related data. The following parameters are supported:
&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;mode&lt;/dt&gt;
&lt;dd&gt;
This parameter controls what type of query occurs. There are four options currently:
&lt;dd&gt;&lt;blockquote&gt;&lt;dl&gt;
&lt;dt&gt;new&lt;/dt&gt;
&lt;dd&gt;This is the default mode (assuming no additional parameters are supplied). Shows new nodes created in the past N hours, as specified by the &lt;c&gt;hours&lt;/c&gt; parameter, which defaults to 24. N may not exceed 72. If from_id is specified then the hours will not have a default value and must be explicitly supplied.

&lt;/dd&gt;
&lt;dt&gt;detail&lt;/dt&gt;
&lt;dd&gt;
This is the normal query mode. It returns the requested nodes in order of node id ascending. 
&lt;/dd&gt;
&lt;dt&gt;user&lt;/dt&gt;
&lt;dd&gt;
This is just a shortcut for doing mode=detail;authors=USERID.
&lt;/dd&gt;
&lt;dt&gt;thread&lt;/dt&gt;
&lt;dd&gt;
This mode returns threading information about the first 'nodes' id parameter provided. If the node is a root then it returns the root and all children as constrained by other parameters otherwise returns the node and its children without other constraints being applied. This means you can say mode=thread;nodes=FOO;from_id=12345 and the from_id will only be respected if FOO is not a &quot;note-like&quot; nodetype. 
&lt;/dd&gt;&lt;/dl&gt;
&lt;/blockquote&gt;&lt;/dd&gt;

&lt;dt&gt;authors&lt;/dt&gt;
&lt;dd&gt;
This is a comma seperated list of author ids. Can be used to constrain other queries, or alone to fetch a user (or group of users) nodes.
&lt;/dd&gt;

&lt;dt&gt;nodes&lt;/dt&gt;
&lt;dd&gt;
This is a comma seperated list of nodes ids. Can be used to constrain other queries, but is more useful as a node-info query, like &quot;what is the title of 108447&quot;.
&lt;/dd&gt;

&lt;dt&gt;roots&lt;/dt&gt;
&lt;dd&gt;
This is a comma seperated list of root ids. Can be used to constrain other queries. Using this is very similar to the 'thread' mode, but does not return information about the root itself (as it will not have a root id.) 
&lt;/dd&gt;

&lt;dt&gt;parents&lt;/dt&gt;
&lt;dd&gt;
This is a comma seperated list of parent ids. Can be used to constrain other queries. This is how you find all the replies to a given node.
&lt;/dd&gt;

&lt;dt&gt;from_id&lt;/dt&gt;
&lt;dd&gt;
This is a single id. Can be used to constrain other queries such that the returned node ids are larger than or equal to this value. Intended to be used to &quot;tail&quot; a query, for instance the 'new' mode, so that you can say &quot;give me all nodes from X and onwards&quot;. 
&lt;/dd&gt;


&lt;dt&gt;limit/offset&lt;/dt&gt;
&lt;dd&gt;
These are single values which restrict the size of the response set and show how far into it you want to start from, defaults and maximums are provided based on mode and in some cases these values are ignored entirely. In general the default is 500/0, or in other words the first 500 records. You may use this to page through a result set, see from_id for how to &quot;tail&quot; particular queries.
&lt;/dd&gt;

&lt;dt&gt;&lt;b&gt;Types&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;
Types are specified and constrained as through the newest nodes ticker. Thus defaults and other settings are provided through user vars, or via parameter. See the [id://72241|documentation for the NN ticker] for more details.
&lt;/dd&gt;
&lt;/dl&gt; 
&lt;/p&gt;
&lt;p&gt;
Examples of how this ticker can be used are things like tailing new posts by a certain author: mode=new;authors=FOO,BAR,BAZ, doing user/xp lookups for multiple users at once, or whatever. All result sets are based around the same set of generation code, so the only difference in result sets will be additional information will occasionally be available, as and when it is available. IE, a root node wont show a parent_node/root_node field, but a note will.  This should make writing clients a lot simpler. 
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;

&lt;p&gt;[de-merphq], [localtime://2005-11-08 16:27:34]&lt;br /&gt;
At the nagging of [podmaster] I've put together [id://506883|noderep xml ticker] which is currently residing on [id://507310]&lt;sup&gt;&lt;small&gt;(&lt;i&gt;updated&lt;/i&gt;)&lt;/small&gt;&lt;/sup&gt;. This would be the ticker to replace people querying the user nodes ticker all the time. It shows the nodes that have changed rep and the re-delta in the time since the last fetch from the ticker (or the previous 24 hours if never used before). Currently this is set up so that the first 50 fetches are &quot;free&quot; meaning they can occur at any time, and may include the &quot;clear&quot; flag to reset the lastfetch time to 24 hours previously. After the &quot;free&quot; fetches are over the minimum time between fetches would be 10 minutes. The free fetches are partly an artifact of testing/development and also because i realized that such a restrictive design would make it really annoying to write a client. So the &quot;free fetches&quot; are to enable people to get an incremental ticker up and running, but will prevent people from writing dumb clients. (Ie, a client could build a db using the user nodes ticker, then use this to monitor changes over time.)
&lt;/p&gt;&lt;p&gt;
Please don't advertise/publicise this until a bit of debate about the ticker has occured.
&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;[de-merphq], [localtime://2005-11-05 11:20:34]&lt;br /&gt;
Ive dealt with the timestamp/title text. The thing left is pmdev tags. Not real sure what to do about them either.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[de-merphq], [localtime://2005-11-05 07:30:11]&lt;br /&gt;
I've created [add_public_chatter] and made patches to [message] and [showchatter] that would switch to using cached rendered HTML for messages. Ive put this into play on [pmdev] but there are some issues.
&lt;/p&gt;&lt;p&gt;
First off, im not sure what to do about tags like pmdev:// and anything else that should change rendering  based on the viewer, like localized timestamps and stuff like that (in fact the current code doesnt do any title text currently, as i couldnt decide what it should show). Second, so far the cached chatter isn't split. I was thinking that it should be split on display so the cache can be reused. What I have done doesn't exactly follow the description in the todo as the latter was a little unclear to me but I think it implements the spirit of the requirements.
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[ysth], [localtime://2005-11-02 13:10:17]&lt;br /&gt;
The [allocateVotes.pl|Vote Fairy] has a somewhat out of date list of nodetypes to use to calculate $NORM; should it use canedit_nodetypes from [newest nodes setting] instead?
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[Petruchio], [localtime://2005-10-22 06:22:00]&lt;br /&gt;
It really wasn't my intention to start a discussion, so much as make a suggestion.  It seems [demerphq]
has turned his attention to the CB, with the intention of making it nicer for people using their own
CSS.  So I decided to offer a perspective on how this goal might be accomplished
&lt;/p&gt;&lt;p&gt;
Possibly I will start such a discussion... but only because this is such a vital matter, and it has
been made clear that the sky is likely to fall if it is not resolved expeditiously.  ;-)
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], [localtime://2005-10-22 00:10:02]&lt;br /&gt;
If only there were a site somewhere where we could have a threaded discussion on this without cumbersome updates to a shared wiki and having to look off-site for content that likely won't be preserved, making looking back on this discussion confusing...
&lt;/p&gt;&lt;p&gt;
Move the discussion somewhere were a discussion is easy and I'll comment further (though I covered much of it in the CB right after the bit your quoted).
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[Petruchio], [localtime://2005-10-21 23:33:00]&lt;br /&gt;
Having looked at the new CB markup, it strikes me that we could probably do just as much with a good deal less.
I have posted two examples for consideration, the first of which is [http://petruchio.perlmonk.org/tmp/solution.html|here].
I am not particularly attached to either CSS approach, though I think the actual HTML is mostly adequate.
&lt;/p&gt;&lt;p&gt;
Naturally, if we want our users to be able to make good use of on-site CSS we need to provide a rich set of facilities.
On the other hand, the simpler we can keep those facilites, the easier things will be on them and us... and there seems,
at present, to be some redundancy.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[tye], [localtime://2005-10-21 15:05:06]&lt;br /&gt;
See [id://502050]
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], [localtime://2005-10-21 04:58:35]&lt;br /&gt;
The recent changes to the highlighting have had impact in a lot of places, some of them most definately for the worse. For instance on the patch list its now quite difficult to tell applied and current patches from ones that aren't. I think these changes should have involved a new class and left the old one alone.
&lt;/p&gt;&lt;hr /&gt;


&lt;p&gt;[davido], [localtime://2005-10-13 17:42:28] &lt;br/&gt;
Every time there is a change to the Janitors' tools, [pmdev] tools, a new [cabal] catagory, and so on, the associated group nodelet must be updated manually by a [pmdev]er.  Should we consider changing this strategy so that each [cabal|cabalists] nodelet is a version of Personal Nodelet?  That way, whenever a new Editor's tool is created, one of the janitors can add it to their nodelet.  And the same would go for other cabal groups too.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[demerphq], [localtime://2005-10-13 02:14:16]&lt;br /&gt;
Well, the idea is that eventually the current approval process will be replaced with [castaway]s moderation nodelet. Since they use seperate mechanisms to do their things its possible to consider a node using one system and front page it with the other. This is ok for now as we need to test. Eventually (once I can figure out what needs to be patched, and what needs to be applied) the old stuff will go away and the new stuff will be the only way to do it.
&lt;/p&gt;&lt;hr /&gt;


&lt;p&gt;[Tanktalus], [localtime://2005-10-13 00:35:14]&lt;br /&gt;
[demerphq] - you're doing it alone because no one wants to promote us reckless types to [gods|godhood] ;-)  Us reckless types are thankful you're doing it, and the rest of the [gods] are thankful we aren't doing it - lots of thanks ;-)&lt;br /&gt;A question on the moderation nodelet - is it supposed to have options to approve/frontpage/move a node even after it has been frontpaged?  e.g., [id://499739] - it gives options for me to move it to a new section, or to approve, etc., even though [tye] has front-paged it.&lt;/p&gt;
&lt;p&gt;[demerphq], [localtime://2005-10-12 16:48:47]&lt;br /&gt;
Ok, I put some work into this list tonite, and ive tried to mark here what i could work out has been done so far. I have to say its hard to work with this list alone. Anyway, it seems to me that we cant switch over until a fair number of additional patches are made. One to every place that uses approval, maybe i misunderstand however. [castaway] it would be nice to get an update from you where we go from here.
&lt;/p&gt;
&lt;p&gt;
Anyway, ive played around with the [nodelet settings|moderation nodelet] and it seems to work fine. 
&lt;/p&gt;
&lt;p&gt;
&lt;blockquote&gt;

&lt;p&gt;[castaway]' todo list from 2005-04-27&lt;br /&gt;
&lt;p&gt;
&lt;strike&gt;Non-destructive/interfering changes (ie dont affect the site at all):&lt;br /&gt;
[Moderation Nodelet], [isapproved], [newapprove], [listapproved settings], [move2sect], [newcachedlistapproved]&lt;/strike&gt;
&lt;p&gt;
&lt;strike&gt;
Table changes:&lt;br /&gt;
Rename [approves] to &quot;approvalhistory&quot;.&lt;br /&gt;
Create a table &quot;approvalstatus&quot; with the same layout/content as [approval]&lt;br /&gt;
Add unique index to approvalhistory on approves_id, whenapproves, userapproves&lt;br /&gt;
Add unique index to cachedinfo on code_id, cachekey&lt;/strike&gt;&lt;br /&gt;
&lt;em&gt;&lt;b&gt;note:&lt;/b&gt; I didnt rename [approves] i just created a new table. If we dont need [approves] anymore (it appears unused) we can just drop the table. ([demerphq|dmq])&lt;/em&gt;
&lt;p&gt;
Now we can test: Someone should *really* check that [newapprove] still does the correct &quot;linktype&quot; stuff here! If it does, then we can test the moderation nodelet adding things to approvalhistory/status, without disturbing anything else.. (I think! /me ponders about the [approved] table.. )
&lt;p&gt;
&lt;strike&gt;Slightly more interfering:&lt;br /&gt;
[nodelet permissions] - allows people to actually choose the moderation nodelet.&lt;/strike&gt;&lt;br /&gt;
&lt;em&gt;&lt;b&gt;note:&lt;/b&gt; Not fully applied, currently only available to pmdev for testing. ([demerphq|dmq])&lt;/em&gt;
&lt;p&gt;
Integration/Interfering:&lt;br /&gt;
[Node Status] - use isapproved.&lt;br /&gt;
[Approval Nodelet] - use newapproved and isapproved.&lt;br /&gt;
[Editors Nodelet] - remove removelinks (functionality gone to moderation nodelet).&lt;br /&gt;
[moderatelist default outer container] - use newapprove opcode.&lt;br /&gt;
[writeupmover] - actual movement now done in newapprove, remove from here.&lt;br /&gt;
SoPW, Meditations etc. - use newcachedlistapproved.&lt;br /&gt;
&lt;p&gt;
After testing and then applying the other patches, there needs to be a big &quot;convert all approved nodes to new system&quot; run, there is a god-accessible node for this, [convert approval records], which I also have a patch to, but cant create, so some god please suggest how I patch it.. ,) - This might be done better in pure SQL though.
&lt;p&gt;
I hope thats all of it..
&lt;/blockquote&gt;
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], [localtime://2005-10-12 14:44:10]&lt;br /&gt;
I got bored, and as i promised [bart], i looked into getting the parsed xml feed set up: [href://?node=146808&amp;xmlstyle=gmtime,parsed,stream|Test CB Ticker]. It understands the clean/flat/stream xmlstyles (which i have set up a control [allowed xml styles|setting] for) as well as the special arguments 'gmtime' and 'parsed' which can obviously be used in combination. These render the timestamps in GMT and cause the ticker to return parsed content and not PM markup.&lt;/p&gt;
&lt;p&gt;
I was wondering if it really shouldnt just be a single ticker that returns both actually, but whatever. Anyway, the current setup reduces the number keys in the cache table, and I suspect that over time everybody would settle down on one or two styles as made sense so I'm hopeful that this doesnt destroy the point of having a cache. Long term id like to see all of the chatterbox tickers using [get_cached_xml_chatter] to do their rendering. That way the code is centralized and we can still offer a few flavours of xml to our userbase, and maintain backwards compatibility too. The current duplicated code in the new and old cb tickers is quite irritating IMO.
&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[demerphq], [localtime://2005-10-10 12:17:58]&lt;br /&gt;
I think its a fine idea. I did a patch (unapplied as yet) at [id://498864]. And as far as I can tell with the way the data is encoded theres no issue to make it appear for people who have never used it before, regardless of how long they have been a member for.
&lt;/p&gt;&lt;hr /&gt;


&lt;p&gt;[davido], [localtime://2005-10-08 04:54:48] &lt;br /&gt;
Should the Personal Nodelet start out containing a default link to &lt;a href=&quot;?node_id=239623#personal&quot;&gt;Personal Nodelet Documentation&lt;/a&gt; for new users?  The link could be removed with 'Manage Links' just like any other link.  The idea is to hopefully demonstrate what it (the nodelet &lt;small&gt;&lt;sub&gt;updated&lt;/sub&gt;&lt;/small&gt;) does as well as linking to its documentation; killing two birds with one stone.  That should be easy to accomplish.  What might not be so easy would be to have it also contain that link for existing users when they turn it on for the first time via Nodelet Settings.  But at least we ought to be able to help brand new users out a little.  Thoughts and comments?
&lt;/p&gt;
&lt;hr /&gt;
[id://500173]




























































































</doctext>
  <type_nodetype>68046</type_nodetype>
  <node_id>591498</node_id>
  <author_user>474174</author_user>
  <title>pmdev wiki through 2006-12-12</title>
  <createtime>2006-12-24 02:59:06</createtime>
  <nodeupdated>2006-12-23 21:59:06</nodeupdated>
</node>
