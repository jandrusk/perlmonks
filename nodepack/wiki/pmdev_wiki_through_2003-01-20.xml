<node>
  <doctext>&lt;p&gt;Continued from [id://234285]...&lt;/p&gt;
&lt;p&gt;[wil], 2003-01-20 - later on&lt;br /&gt;
OK. Sorry. My quip was a little short and brash I admit. It was just a standard response I would have sent to anyone trying various &quot;does this work?&quot; in the chatterbox. I thought about sending [Aristotle] a private /msg but then I thought everyone could benefit out of knowing that private /msg are handled (as far as I know) the same way as normal chatter so is a good means of testing.
&lt;/p&gt;  
&lt;p&gt;[tye], 2003-01-20&lt;br /&gt;
I wanted to respond to this:
&lt;blockquote&gt;&lt;em&gt;
Next time you want to try something like that, /msg yourself the code instead of breaking the site for everyone. You'll get the same result.
&lt;/em&gt;&lt;/blockquote&gt;
That particular error didn't &quot;break the site for everyone&quot;.  It makes it look like I said &quot;Server Error ...&quot; and everything else works just fine.  If you are in [pmdev] then you also get debugging information which makes the nodelets way wide.
&lt;/p&gt;&lt;p&gt;
Many times I've been surprised to see [pmdev] members who appear surprised or even shocked to see this information.  My gut reaction is starting to be &quot;if you can't handle the information/inconvenience, then maybe you should just /msg me and I'll remove you from [pmdev]&quot;.  I haven't actually said that to anyone yet, BTW.
&lt;/p&gt;&lt;p&gt;
But I wanted to remind the [pmdev]ils that it is intentional that they see this extra information, this isn't how the rest of our members and visitors see errors, and they can visit as AnonyMonk (for example by switching between .com, .org, and .net) to see how it normally looks.
&lt;/p&gt;
&lt;p&gt;[tye], 2003-01-19&lt;br /&gt;
Actually, private messages displayed in the HTML chatterbox &lt;b&gt;do&lt;/b&gt; go through that exact same code.  Unfortunately, the extra text in front of a private message means that the same string doesn't trigger that error, but you could probably trigger the error with a similar string.  In any case, it is fixed (along with another bug in the same code that jumped out at me when I tried to test via a private message). (:
&lt;/p&gt;
&lt;p&gt;[theorbtwo], 2003-01-19&lt;br /&gt;
/msging yourself won't produce this error; only public chatter goes through that section of [parselinksinchatter], and even then only when viewed by the CB nodelet.  That section of code is for inserting whitespace into long words so that the CB doesn't take up too much (horizantal) space.&lt;/p&gt;
&lt;p&gt;As to me being able to see the error message, I can, but I didn't save it in time, because somthing else interupted me.  I afterwords asked if anybody else got the error message down, but all I got was an error ID.&lt;/p&gt;
&lt;p&gt;[Aristotle], 2003-01-19&lt;br /&gt;
I thought of that but am not sure how well it would reproduce the exact same error. I also expected the call stack to be useless as [ar0n] told me, but recorded it just to make sure. That way we have a copy of the error message here - however relevant - so further tests are unnecessary. That was my rationale.
&lt;/p&gt;
&lt;p&gt;[wil], all the way from the couch.&lt;br /&gt;
Next time you want to try something like that, /msg yourself the code instead of breaking the site for everyone. You'll get the same result.&lt;/p&gt;
&lt;p&gt;[Aristotle], 2003-01-19&lt;br /&gt;
Since the chatterbox was idle for the last hour I tried it and got this:&lt;br /&gt;
&lt;small&gt;
&lt;b&gt;substr outside of string at &amp;#91;parselinksinchatter] line 33.
 &lt;/b&gt;&lt;br /&gt;&lt;code&gt;   1: 
   2: #line 1 &amp;quot;&amp;#91;parselinksinchatter]&amp;quot;
   # ... rest of code was here

  33: &amp;lt;FONT color=&amp;quot;#CC0000&amp;quot;&amp;gt;&lt;b&gt;         my $tot= $len + length($res);&lt;/b&gt;&amp;lt;/font&amp;gt;

&lt;b&gt;Call Stack&lt;/b&gt;:
/home/monkads/0.8mods/Everything/HTML.pm:253:Everything::HTML::htmlErrorGods
/home/monkads/0.8mods/Everything/HTML.pm:786:Everything::HTML::htmlFormatErr
/home/monkads/0.8mods/Everything/HTML.pm:811:Everything::HTML::evalCode
&amp;#91;showchatter]:81:Everything::HTML::htmlcode
/home/monkads/0.8mods/Everything/HTML.pm:783:(eval)
/home/monkads/0.8mods/Everything/HTML.pm:811:Everything::HTML::evalCode
(eval 3079):8:Everything::HTML::htmlcode
/home/monkads/0.8mods/Everything/HTML.pm:783:(eval)
/home/monkads/0.8mods/Everything/HTML.pm:837:Everything::HTML::evalCode
/home/monkads/0.8mods/Everything/HTML.pm:863:Everything::HTML::embedCode
/home/monkads/0.8mods/Everything/HTML.pm:1003:Everything::HTML::parseCode
/home/monkads/0.8mods/Everything/HTML.pm:956:Everything::HTML::updateNodelet
&amp;#91;nodelet meta-container]:44:Everything::HTML::insertNodelet
/home/monkads/0.8mods/Everything/HTML.pm:783:(eval)
(eval 3065):5:Everything::HTML::evalCode
/home/monkads/0.8mods/Everything/HTML.pm:783:(eval)
/home/monkads/0.8mods/Everything/HTML.pm:837:Everything::HTML::evalCode
/home/monkads/0.8mods/Everything/HTML.pm:863:Everything::HTML::embedCode
/home/monkads/0.8mods/Everything/HTML.pm:1021:Everything::HTML::parseCode
/home/monkads/0.8mods/Everything/HTML.pm:1055:Everything::HTML::genContainer
/home/monkads/0.8mods/Everything/HTML.pm:1112:Everything::HTML::genContainer
/home/monkads/0.8mods/Everything/HTML.pm:1235:Everything::HTML::displayPage
/home/monkads/0.8mods/Everything/HTML.pm:1471:Everything::HTML::gotoNode
/home/monkads/0.8mods/Everything/HTML.pm:1778:Everything::HTML::handleUserRequest
/usr/www/users/monkperl/index.pl:45:Everything::HTML::mod_perlInit
/usr/local/lib/perl5/site_perl/5.6.0/i386-freebsd/Apache/Registry.pm: 143:Apache::ROOTwww_2eperlmonks_2eorg::index_2epl::handler
/usr/local/lib/perl5/site_perl/5.6.0/i386-freebsd/Apache/Registry.pm: 143:(eval)
&amp;#91;showchatter]:0:Apache::Registry::handler
&amp;#91;showchatter]:0:(eval)
&lt;b&gt;End Call Stack&lt;/b&gt;
&lt;/code&gt;&lt;/small&gt;

Except the &amp;lt;PRE&gt; tag pair was escaped just like the FONT tag there - guess someone didn't pay attention where they insert these tags? I also got &lt;b&gt;Bizarre copy of HASH in aassign at /usr/local/lib/perl5/5.6.0/Carp/Heavy.pm line 79.&lt;/b&gt; with the exact same code and call stack, except no red-font-marked line.
&lt;/p&gt;&lt;p&gt;(Is there a reason I can see those and [theorbtwo] can't or has this been changed since yesterday?)
&lt;/p&gt;
&lt;p&gt;[theorbtwo], 2003-01-18&lt;br /&gt;
The space-time continum has been restored, and I'm not really clear what [parselinksinchatter] is doing down there.  I'll look at it more later.
&lt;/p&gt;
&lt;p&gt;[Aristotle], 2003-01-19&lt;br /&gt;
So is [tye].&lt;/p&gt;
&lt;p&gt;[ar0n], 2003-01-18&lt;br /&gt;
The server error IDs can be found back in the server error logs,
and can only be accessed by those access to the servers.
The message is this:
&lt;code&gt;
Error:
substr outside of string at [parselinksinchatter] line 33.
&lt;/code&gt;
You're a year behind the times, by the way.
&lt;/p&gt;
&lt;p&gt;[theorbtwo], 2003-01-18&lt;br /&gt;
I just messed up the CB by saying &quot;&lt;code&gt;search.cpan.org+=1&lt;&lt;3&lt;/code&gt;&quot; (only without the code tags or quotes.  Note that those are literal less-thens, not escaped &amp;amp;lt;s.  It only messed up the CB nodelet, not the fullpage chat, which I think puts it somewhere in [tye]'s splitting code.  Unfortunately, I didn't save the error message before it timed out of the CB -- a local emergency pulled me away from the CB.  [Coruscate] tells me he got error ID 8442110b24328.  Can anybody get an error message from that, or better yet, tell me how to?  Is it possible for a [pmdev]il to do it, or does it require [gods]' access?  (I'd just repeat it, but I'd rather not do that to the CB again during primetime.)
&lt;/p&gt;
&lt;p&gt;[theorbtwo], 2003-01-18&lt;br /&gt;
[Tye] apparently already considered this, and decided it would be too slow, in [id://227437].  I'm doing a little mockup of it anyway, just for fun.  If it ends up not being terribly-much slower, I'll report back.&lt;/p&gt;
&lt;p&gt;Second idea: instead of using the node cache for the backing store, use %{$NODE-&gt;{_ORIG}}, which won't break if/when the node cache becomes cross-process.  OTOH, it will increase memory.  In any case, I think we want to make $NODEs objects, and call a method on them to flush them back to the DB.&lt;/p&gt;
&lt;p&gt;Apparently [perrin|somebody else] already had that idea, too.  D'oh!&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;[theorbtwo], 2003-01-18&lt;br /&gt;
I have an idea WRT both speedups and avoiding overwriting of data.  Be afraid, be very afraid.  I'm looking for ideas on this, both because it'd be a lot of work to do and then not get applied, and because I'm not sure if the tradeoffs between DB load and httpd load are worth it.  Here goes...&lt;/p&gt;
&lt;p&gt;The idea is this.  Instead of loading the complete contents of a node's data into a hash, then having htmlcode modify it, and write back the whole thing when we're done, keep track of what changed, and only write back the changed data.  This would avoid rewriting large chunks of unchanged data all the time (for example, whenever a user hits a page, his entire homenode and scratchpad is rewritten, just to get his last-on data to change.&lt;/p&gt;
&lt;p&gt;We could either do this by changing everything from direct hash modification to use methods, or we could use a tye^H^H^Htie, which adds the field to a list of changed fields when it's changed, and use a method on it, instead of iterating over it, to flush it back to the db.&lt;/p&gt;
&lt;p&gt;Unfornatly, I'm not sure if the added overhead of the tie is worth the decreased overhead of writing things back the db that we don't need to, plus less (but not no) worring about (the lack of) locking.  We'd only have to worry about cases where we update the same field twice across a short period, rather then the same node.  I think this idea is pretty neutral wrt the node cache -- it wouldn't become any more messed up then it already is, but it wouldn't help anything either.&lt;/p&gt;
&lt;p&gt;What do you guys think?&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;[tye], 2003-01-17&lt;br /&gt;
Now all [cabal] members can read each other's [wiki wiki|wikis].
&lt;blockquote&gt;
&lt;a href=&quot;/?node_id=106927&amp;whichtype=68046&quot;&gt;Node lister result for &quot;wiki&quot;&lt;/a&gt;&lt;br /&gt;
- [Aristotle]
&lt;/blockquote&gt;
&lt;blockquote&gt;
  [Wikis of the world, unite!]&lt;br /&gt;
- [ar0n]
&lt;/blockquote&gt;
&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[jaybonci] 2003-01-17&lt;br /&gt;
Performance increase to be had by changing all of the nodelet parents over from [general nodelet container] to [nodelet container].  Reason being is this. On E2, the nodelet systems are set up very similarly with regards to the way Everything::HTML::insertNodelet() works.  It pulls up the nodelet's parent container, and then runs up the container chain until it hits the top level (or parent_container &lt;em&gt;none&lt;/em&gt;).  Now on E2, we have more than one true theme (not just themesettings), so inside of [general nodelet container] we set the parent_container to be the current theme's nodelet_container attribute (either [jukka nodelet container], [ekw nodelet container], or [nodelet container] (note: this will be changing today to remove that extra, unneeded step).  &lt;/p&gt;
&lt;p&gt;Because perlmonks has no default themes, there really doesn't seem to be any reason not to set all of your nodelet's default containers to be [nodelet container], since your [general nodelet container] is blank.  You could probably do a quick sql update and reboot your webservers, or do them all by hand.  Each one would save a node lookup, and the replacement text per nodelet per pageload.&lt;/p&gt;
&lt;p&gt;The approach I took over at E2 (which worked splendidly) was:
&lt;code&gt;
sub insertNodelet
{
        ($NODELET) = @_;
        getRef $NODELET;
        my $container = $$THEME{generalNodelet_container};
        $container ||= getId(getNode('nodelet container','container'));

        my $html = genContainer($container) if $container;

        # Make sure the nltext is up to date
        updateNodelet($NODELET);
        return unless ($$NODELET{nltext} =~ /\S/);

        # now that we are guaranteed that nltext is up to date, sub it in.
        if ($html) { $html =~ s/CONTAINED_STUFF/$$NODELET{nltext}/s; }
        else { $html = $$NODELET{nltext}; }
        $html;
}

&lt;/code&gt;
This assumes [Red Theme] has a {generalNodelet_container =&gt; ?} value that would be your [nodelet container] node.  Cheers
&lt;br /&gt;
&lt;p&gt;[tye] 2003-01-15&lt;br/&gt;
Hole patched via [id://227191].  I decided to not go even close to the route taken at e2 (which prevented the creation of illegal patches).  If someone wants to play games making illegal patches in hopes of seeing things they shouldn't, then I want the patch to be created so I can see the name of who did it, what they were shooting for etc.
&lt;/p&gt;&lt;p&gt;
Let me know if that patch is not sufficient to fix the security hole.  Thanks, [jaybonci].
&lt;/p&gt;
&lt;p&gt;[jaybonci] 2003-01-15&lt;br/&gt;
Hello everyone. There is a security bug in the patching mechanism that allows people to hijack accounts and disclose sensitive information.  I have a fix in hand for this, but it doesn't lend itself to the perlmonks patch mechanism.  If an available god would drop me an email, and I'll send the bug description/fix to you.  This bug was fixed today on E2. &lt;small&gt;&lt;a href=&quot;mailto:jaybonci@everything2.com&quot;&gt;jaybonci@everything2.com&lt;/a&gt;&lt;/small&gt;
&lt;/p&gt;
&lt;p&gt;[Aristotle] 2003-01-14&lt;br/&gt;
I'm not asking for &lt;tt&gt;onmouseover&lt;/tt&gt; and friends to be approved - just &lt;tt&gt;style&lt;/tt&gt;. How can one embed Javascript inside a style definition? That would be news to me.
&lt;/p&gt;&lt;p&gt;Btw, can we have the wiki rotated? It's getting really long, editing actions take ages to complete.
&lt;/p&gt;
&lt;p&gt;[theorbwto] 2003-01-11&lt;br/&gt;
OTOH, &quot;potentially do other sinister stuff I can't think of&quot; includes running arbitrary javascript when mouseovering the tag.  Consider that I could easily use this to make a node that stole the cookie of everybody who happened to mouseover it.  Yes, I'm being paranoid, yes, there are plenty of other ways to sneak in JS.  Also, it'd be non-trivial to implement.
&lt;/p&gt;
&lt;p&gt;[Aristotle] 2003-01-11&lt;br/&gt;
Is there a reason the &lt;tt&gt;style&lt;/tt&gt; attribute is outlawed? The only loophole I can think of is using &lt;tt&gt;url()&lt;/tt&gt; CSS attribute values to post images or potentially do other sinister stuff I can't think of. Would &lt;tt&gt;style&lt;/tt&gt; be permissible if &lt;tt&gt;url()&lt;/tt&gt; values were filtered, or is there anything else I'm missing? I'd really prefer to use &lt;tt&gt;span&lt;/tt&gt; instead of resorting to &lt;tt&gt;font&lt;/tt&gt;, &lt;tt&gt;u&lt;/tt&gt; and the myriad of other deprecated tags when composing writeups. (Yes, I'm that anal. &lt;tt&gt;:)&lt;/tt&gt; )&lt;/p&gt;
&lt;p&gt;[tye] 2003-01-10&lt;br/&gt;
Removing the &quot;mover&quot; from the editors' nodelet almost solved the problem.  It means we can't move nodes out of [Perl News], but that hasn't been a problem yet (that I've noticed).  Of course, there are tons of problems with nearly everything the approval nodelet does.  You can't vote on a consideration right after you add the consideration.  When you move a node, the node doesn't move until the nodelet loads so the &quot;return to&quot; link is for the wrong section (and the node is displaying using the conventions of the old section -- important in the case of moves to/from [code catacombs]).  This also means that &quot;move&quot;+submit then &quot;approve&quot;+submit approves the node for the wrong section.  And lots of other bad things like that.
&lt;/p&gt;&lt;p&gt;
So each time I use the approval nodelet I do &quot;click&quot;, &quot;submit&quot;, &quot;back&quot;, &quot;reload&quot;, repeat. *sigh*
&lt;/p&gt;&lt;p&gt;
So the changes need to be done via an opcode and there need to be lots of sanity checks there.  Lots of details in my head.  I'll write them down or implement them before too long.
&lt;/p&gt;&lt;p&gt;
Snippets uses different fields so moving from snippets to anything else would be difficult and moving from anything else to snippets would be very hard.
&lt;/p&gt;
&lt;p&gt;[boo_radley] 10JAN2003&lt;br/&gt;
Would it be difficult (due to some Everything-ese reason) to add Snippets to the &quot;move to&quot; dropdown in the editor's nodelet?&lt;br/&gt;
10JAN2003 -- &lt;i&gt; a bit later &lt;/i&gt;
Also, in pmdev-todo, the Editors' Nodelet &quot;The editors nodelet should not allow a node to be moved...&quot; item seems to be (partially ? entirely?) complete. I had to un FP, un approve a node before being allowed to move it. What's the story?

&lt;/p&gt;
&lt;p&gt;[tye] 2003-01-10&lt;br/&gt;
I edited the patch.  I did some more clean-up similar to your change.  But I also fixed it so that the tons of nodes that contain &quot;\n&amp;lt;code&amp;gt;#!/usr/bin/perl&quot; won't suddenly have no blank line before the code.  It treats &quot;&amp;lt;code&amp;gt;Code&quot; and &quot;&amp;lt;code&amp;gt;\nCode&quot; the same and puts &lt;code&gt;&lt;p&gt;...&lt;/p&gt;&lt;/code&gt; around the code block so that most people will see code that fits in like this:
&lt;/p&gt;&lt;p&gt;&lt;pre&gt;#!/usr/bin/perl
exit( 0 );
&lt;/pre&gt;&lt;/p&gt;&lt;p&gt;
I hope this looks good in most browsers.  It looks fine to me.  Let me know if it puts too much white space around the code in your browser.
&lt;/p&gt;
&lt;p&gt;[dws] 2003-01-09&lt;br/&gt;
Submitted a [id://225735|patch] to remove the extra blank line you get when there's a newline after the &amp;lt;code&amp;gt; tag. It's a one-liner, made two lines by including a minor performance fix in an adjacent line.
&lt;/p&gt;
&lt;p&gt;[ar0n], 2003 (weird)-01-02&lt;br /&gt;
&lt;code&gt;&lt;span title=&quot;...&quot;&gt;&lt;/code&gt; is what is used for the private messages to
display the date and time they were sent (server time).  If you're
distracted or confused by tooltips you could narrow the span to just the
&quot;&lt;i&gt;[tye] says&quot;&lt;/i&gt; bit.
&lt;/p&gt;&lt;p&gt;
I just applied a patch to wrap the 'updated' flag in a span tag.  The class name is &lt;tt&gt;wikiupdate&lt;/tt&gt;.
&lt;/p&gt;
&lt;p&gt;[Aristotle], 2003-01-02&lt;br /&gt;
Where'd &lt;code&gt;&lt;span title=&quot;...&quot;&gt;&lt;/code&gt; come from? It would have to be &lt;code&gt;&lt;span class=&quot;...&quot;&gt;&lt;/code&gt; or maybe &lt;code&gt;&lt;span id=&quot;...&quot;&gt;&lt;/code&gt; - or am I missing something?
&lt;/p&gt;
&lt;p&gt;[tye], 2003-01-02&lt;br /&gt;
All changes to [id://108658] must be done by [gods].  I can open them up to [pmdev] but someone needs to write some patches to put in an &quot;add&quot; form (I assume -- I didn't notice one but I didn't really look), &quot;edit&quot; links, &quot;delete&quot; links with appropriate safeguards, etc.
&lt;/p&gt;&lt;p&gt;
Write a patch to make the &quot;*&quot; bold with the appropriate &amp;lt;span&amp;gt; or whatever.
&lt;/p&gt;&lt;p&gt;
I don't much like the &lt;code&gt;&lt;span title=&quot;...&quot;&gt;&lt;/code&gt; for /msgs since it makes any links inside the message show the timestamp, which tends to distract or confuse me. (:
&lt;/p&gt;
&lt;p&gt;[wil], 200&lt;b&gt;3&lt;/b&gt;-01-02.&lt;/br&gt;
Why do we need another to-do list wiki? Whatever happened to the original -- [id://108658] ?
&lt;br&gt;I like the new star that shows up when there are unread items. I wonder if this star can be made bright red or flashing or something with your own stylesheet. Hmmm. &lt;/evil thoughts&gt;.
&lt;/p&gt;
&lt;p&gt;[Aristotle], 2002-12-26&lt;br /&gt;
At [id://222933] [Juerd] says
&lt;blockquote&gt;&lt;small&gt;Although I like the current notification (especially compared to the old one) much, it might be nice to make its format definable in the user setting for those that don't. Perhaps the current message could be expressed as &lt;code&gt;You've got a reply to [%o] from [%a] at [%r]&lt;/code&gt;, and the message [parv] wants as &lt;code&gt;[%r|Reply] posted to [%o]&lt;/code&gt;, where &lt;tt&gt;%o&lt;/tt&gt; stands for own message, &lt;tt&gt;%r&lt;/tt&gt; for reply and &lt;tt&gt;%a&lt;/tt&gt; for author (of the reply), all to be &lt;tt&gt;id://something&lt;/tt&gt; after substitution.
&lt;/small&gt;&lt;/blockquote&gt;
I like it and it sounds like it's a relatively isolated enough task that I'd feel comfortable to tackle it. Any objections or suggestions?
&lt;/p&gt;
&lt;p&gt;[theorbtwo], 2002-12-29, an ungodly time in the morning&lt;br /&gt;
[id://222898] should set wikis to have the correct lastedit, without having issues with the cache getting messed up.  Could somebody check if the timestamp should be in localtime or gmtime?  It doesn't really matter anyway -- all that matters is that it's monotonicly increasing with every edit.&lt;/p&gt;
&lt;p&gt;Anyway, after this is done, linkWiki should start working, which means that we can finaly get the nodelet links to tell us when we've got new stuff to read.  Woo.&lt;/p&gt;
&lt;p&gt;PS -- Can somebody roll this into an archive again?  It's starting to get long again -- &gt;200 lines, &gt;25kB.&lt;/p&gt;
&lt;p&gt;[Aristotle], 2002-12-26&lt;br /&gt;
FWIW, by invalid constructs I mean the &lt;code&gt;&lt;/p&gt;&lt;/p&gt;&lt;/dt&gt;&lt;dd&gt;&lt;p&gt;&lt;p&gt;&lt;/code&gt; you had in the two top items (copypaste artifacts, I assume).
&lt;/p&gt;
&lt;p&gt;[tye], 2002-12-26&lt;br /&gt;
I updated the [pmdev to-do wiki].  [Aristotle], the reason I left the &quot;DONE:&quot; item visible is that it should stay visible until it has been marked that way for about one week, at which point it can be deleted (to help avoid the &quot;hey, I went to look for X and found no trace of it&quot; syndrome).  I was hoping that most update notes would be one-liners where leaving off the &lt;code&gt;&lt;dd&gt;&lt;/code&gt; saves space and typing.  I assume this is what you mean by &quot;invalid construct&quot; (since I couldn't see any other changes).  Either way is fine.  FYI, I &lt;strike&gt;don't&lt;/strike&gt;didn't see the &quot;demonstration&quot; of chatter time stamps, because PM approved HTML did not include title= for &lt;code&gt;&lt;a&gt;&lt;/code&gt; until I fixed it.
&lt;/p&gt;
&lt;p&gt;[Aristotle], 2002-12-23&lt;br /&gt;
Thanks. :) I added all the stuff I had collected on my scratchpad - if any [gods|god] could go through and remove the items that are known to have been done or edit those which have partially been done, that would be grand.
&lt;/p&gt;&lt;p&gt;There's also a patch to add this new wiki to the PmDev Nodelet ;)
&lt;/p&gt;&lt;p&gt;The format was overdone I guess, but I definitely think we need some sort of protocol on who is allowed to remove items and when, otherwise confusion will ensue. If we don't have any indicator of whether it is a real todo item or just a proposition, we would also need rules on who may add things and when. Is just leaving it all to the [gods] a viable proposition?
&lt;/p&gt;
&lt;p&gt;[tye], 2002-12-26&lt;br /&gt;
[pmdev to-do wiki] now exists.  I personally think the proposed format is overdone.  I'd rather just go for something simple like &lt;code&gt;&lt;li&gt;&lt;/code&gt;s or &lt;code&gt;&lt;hr /&gt;&lt;/code&gt;s or a &lt;code&gt;&lt;dl&gt;&lt;/code&gt;.  Keeping the number of columns in a table in sync going forward looks like a problem we can avoid.  As for &quot;fields&quot; to track for each item, I say let those evolve.  Though I'm not sure including links to the patches that implement a feature will be worth the effort. (:
&lt;/p&gt;
&lt;p&gt;[Aristotle], 2002-12-23&lt;br /&gt;
I'd propose a [pmdev todo wiki] and a [pmdev guide wiki].
&lt;/p&gt;&lt;p&gt;
The todo wiki's purpose is obvious. We'd need to establish a protocol on when to add entries and how to proceed for it to work of course. I am thinking of a format as in
&lt;/p&gt;&lt;table cellpadding=&quot;3&quot; cellspacing=&quot;0&quot; border=&quot;1&quot;&gt;
&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;
Long description goes here. Long description goes here. Long description goes here. Long description goes here. Long description goes here. Long description goes here. Long description goes here. Long description goes here.
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot;&gt;Proposed: [pmdev|random pmdev]
&lt;/td&gt;&lt;td nowrap=&quot;nowrap&quot;&gt;Approved: [gods|some god]
&lt;/td&gt;&lt;td nowrap=&quot;nowrap&quot;&gt;Taken on: [pmdev|any pmdev]
&lt;/td&gt;&lt;td nowrap=&quot;nowrap&quot;&gt;Patch(es): [foo - (patch)] &lt;br /&gt; [bar - (patch)]
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td colspan=&quot;4&quot;&gt;
Long description goes here. Long description goes here. Long description goes here. Long description goes here. Long description goes here. Long description goes here. Long description goes here. Long description goes here.
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td nowrap=&quot;nowrap&quot;&gt;Proposed: [pmdev|random pmdev]
&lt;/td&gt;&lt;td nowrap=&quot;nowrap&quot;&gt;Approved: [gods|some god]
&lt;/td&gt;&lt;td nowrap=&quot;nowrap&quot;&gt;Taken on: [pmdev|any pmdev]
&lt;/td&gt;&lt;td nowrap=&quot;nowrap&quot;&gt;Patch(es): [baz - (patch)]
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;p&gt;
where new items should be only added after discussion (unless you're a [gods|god] of course &lt;tt&gt;:)&lt;/tt&gt;), and then the information is filled in one field at a time as the proposition gets accepted by the [gods], the challenge accepted by a [pmdev] and the patch(es) submitted. Once the patches are applied, the item may be deleted.
&lt;/p&gt;&lt;p&gt;
The guide wiki would really cover two subjects, but I feel the first one of them is too small and static to warrant a wiki of its own: basically a list of any tools available to a [pmdev], such as [search internal code] and the [Gigantic Node Lister] whose existence is not overtly documented anywhere. The other subject is close to the wiki's name - a bunch of information on how code should look and what additional things we can or must do that a base E 0.8 doesn't have and therefor doesn't have in its docs.
&lt;/p&gt;
&lt;p&gt;[tye], 2002-12-22&lt;br /&gt;
If you want to see how the patch affected things, then hit the &quot;related patches&quot; link, find the previous patch, view it.  It will show what the new patch was but in reverse.  I even create new nodes empty and put the data in via a patch so that this trick works for the first real patch.  I have no plans on &quot;improving&quot; the patch system beyond that.  Adding wikis is pretty trivial stuff.  If we have a well-defined purpose and name for a wiki or three, then let's all agree on that and any god can create them easily.
&lt;/p&gt;&lt;p&gt;
I don't recall ever removing &lt;super&gt; from the list of approved mark-up and I'm pretty dang sure &lt;super&gt; was never translated to &amp;lt;sup&gt;.
&lt;/p&gt;&lt;p&gt;
There is still some to-do work for the shared inbox.  A few groups need to have a nodelet with links to their wiki and their shared inbox (which shows if there are new messages).  I'd really like [site documentation clan] to have a nodelet (because maybe that could be used to get some members working on implementing the fine work [ailie] put on her scratch pad).
&lt;/p&gt;&lt;p&gt;
Then we need to decide how and how quickly to get the masses using the shared inboxes.  I'd like [editor requests] to go away eventually.  Before we announce &quot;Just '/msg editors|pmdev|gods' whenver you like&quot; (ha!) we need to write up some decent guidelines and field test them (announce them to a limited population, such as via the chatterbox during off-peak, whatever)...
&lt;/p&gt;&lt;p&gt;
Oh, and the wiki locking is not based on timestamps.  When you edit, the original value of each field is tracked.  The update fails if the original doesn't match what is in the DB.  You can see this because a change to the title can succeed in the same submit where the update to the text failed.  You can also just start at [wiki editpage] (which should have one more space in its name and which should be linked-to from the [wiki] nodetype but isn't, hmmm...) and read the code yourself. (:
&lt;/p&gt;
&lt;p&gt;[Aristotle], 2002-12-22&lt;br /&gt;
You do have a point, but my idea was more along the lines of keeping it mostly small - a diff vs the Everything engine's docs, a set of coding guidelines, a list of the tools available to [pmdev]ils, that kind of thing. Maybe it would end up on several different wikis. A live and collaboratively maintained todo list at the very least is very important IMHO.
&lt;/p&gt;
&lt;p&gt;[theorbtwo], 2002-12-22&lt;br /&gt;
I think docs really need a full wiki, not just a single-page thing, which probably implies it being offline rel PM, which rases authentication issues -- it'd need a seperate user list, which means sync issues.  Also, see the [pm-port wiki], I began some docs there for the [document] table.  Also, some items from that TODO are done, most notably the shared inbox ones.&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;[Aristotle], 2002-12-22&lt;br /&gt;
Awright, since apparently no centralized get-started-here place for [pmdev]'s exists, I went through the [pmdev wiki] archives and collected anything that might be useful into a very rough draft of a single document. You can see the results so far on [pad://Aristotle]. It's 95% copypasting from the archives, but I think having it all in one place would be very helpful.
&lt;/p&gt;&lt;p&gt;The todo list in the draft is likely to be rather out of date since I just took old text from the wiki nearly verbatim.
&lt;/p&gt;&lt;p&gt;What I envision is a group maintained wiki where everybody may freely add to or edit any part of the document, rather than it being handled like a message board - a collaborative documentation effort if you will. I guess the best protocol would be that people who make significant and noteworthy updates there point them out [pmdev wiki|in here] so noone misses anything.
&lt;/p&gt;&lt;p&gt;Can we have an extra wiki for that?
&lt;p&gt;[Aristotle], 2002-12-21&lt;br /&gt;
There is something akin to locking indeed - the submitted form carries a timestamp. If the wiki's timestamp differs from it, your update is refused.
&lt;/p&gt;
&lt;p&gt;[theorbtwo], 2002-12-21&lt;br /&gt;
As to [patch display page], it'd be a very good thing... but would require carying around a lot more data in some cases, I think.  As to how the wiki works, IIRC, there is some locking.
&lt;/p&gt;
&lt;p&gt;[mt2k], 2002-12-21&lt;br /&gt;
My first post to the pmdev wiki. Regarding [Patch Display Page], I'm wondering how one would implement a way so that we could still see the effects a patch has on a node once it has been implemented. After the code is changed to reflect the patch's will, wouldn't it be nicer to see the patch's changes to the node, rather than being presented the new, &quot;Current&quot; code? Lemme know what you guys think.&lt;/p&gt;
&lt;p&gt;Also, since I now see how the wiki posts work (just editting the field), what happens if multiple users edit at the same time? Classic race condition. ie: someone's post is erased? Perhaps a node-locking scheme for this... maybe I'll whip something up. :)
&lt;/p&gt;
&lt;p&gt;[demerphq] 2002-12-21&lt;br /&gt;
Am I crazy in thinking that &lt;super&gt; was at one point legal? and maybe automatically converted to &lt;code&gt;&lt;sup&gt;&lt;/code&gt;&lt;br /&gt;
Anyway, Merry Christmas all. :-)
&lt;/p&gt;
&lt;p&gt;[tye], 2002-12-20&lt;br /&gt;
Sorry that I haven't had the time to apply any of the recent patches.  I assume the other [gods] have similar excuses. (: Much thanks to [mt2k], [theorbtwo], [Mr. Muskrat], and [Aristotle] for the patches.  Be assured that these will get tested and applied (unless problems are found in which case you'll get feedback on that).  Thanks for your patience.
&lt;/p&gt;
&lt;p&gt;[Aristotle], 2002-12-18&lt;br /&gt;
I guess I should add a word on [id://220582|the patch I submitted]. What prompted it was mostly a simple fix - it has been bothering me for a while now that the radio buttons you get at [Nodes to consider] are ordered differently from the totals display you get after voting. It has caught me off guard quite a few times, forcing me to go back and check whether I didn't inadvertantly vote for the wrong thing. Most of the time, I hadn't. And since I was there, I cleaned up a little bit around the place the buttons/totals get created - then cleaned up a bit more further above, and little more.. and well, I ended up shaking up the entire thing. &lt;tt&gt;:)&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;[Mr. Muskrat], 2002-12-17&lt;br /&gt;
At the request of [ybiC], I have submitted a [http://www.perlmonks.org/index.pl?node_id=220217|patch] for [Buy Stuff].  I have only linked to the first three items for right now.  All of the original link and image tags are still in place inside of comments.&lt;br /&gt;
The patch was submitted twice... I don't know why.  I blanked out the first since it cannot be deleted by me.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[tye], 2002-12-12&lt;br /&gt;
If anyone wants a PerlMonks nodeball, then they need to compose the list of node IDs to include.  If someone does that, I'll create such a nodeball.
&lt;/p&gt;
&lt;p&gt;[tye], 2002-12-12&lt;br /&gt;
You are correct, [theorbtwo].  ehomat has what I consider a bug.  Replies to the moved node don't have their &quot;in thread&quot; updated as they should.
&lt;/p&gt;&lt;p&gt;
So I'd like to replace ehomat with your version except add to the interface so that you can either specify the &quot;reaped old parent&quot; (all of whose replies will be moved) or just specify &quot;node to move&quot; (which does what ehomat does now except that replies and their replies, etc. also have their root_node updated).
&lt;/p&gt;&lt;p&gt;
As for patching *.pm code, [Mr. Muskrat], at least as a first stab, I guess the process would be: 1) Add a &quot;patch module&quot; page that preloads the module contents into a text field (or perhaps provide file download and patched file upload); 2) The [patch display page] would need to know to load module contents when displaying diffs; 3) The [applypatch] opcode should save the patched code to the test site (&quot;$ENV{HOME}/public_html/testsite/lib/Everything/HTML.pm&quot;?) and update testsite/index.pl to require the new version number; 4) [gods] will have to apply and test the patch on both web servers; 5) perhaps [applypatch] could optionally update production and [patch display page] could have 2 apply links (one for &quot;to testsite&quot;, one for &quot;to production&quot;)?
&lt;/p&gt;
&lt;p&gt;[theorbtwo], 2002-12-12&lt;br /&gt;
[tye], can you double-check that [editor's hall of mirrors and trickery] reparents all descendents of the source node?  It doesn't appear to, from my reading.  The inner workings are siginficanly different between the two.  Also, even if it does, they still don't do the same thing.  Mine is specificly built for dupe nodes where both have replies.  The usage would be that one gets reaped, then my node is run, and all children of the reaped node end up under the other copy, with all proper threading maintained.  Even if [editor's hall of mirrors and trickery] is recrusive, which it does not appear to be, you stil can't get that effect; you'd end up with (excuse the ASCII-art):
&lt;code&gt;
good dupe
 reply 1 to good dupe
 reply 2 to good dupe
 ...
 reaped dupe
  reply 1 to reaped dupe
  reply 2 to reaped dupe
  ...
 reply 1 to good dupe after reparent
 reply 2 to good dupe after reparent
&lt;/code&gt;
&lt;hr /&gt;
&lt;/p&gt;
&lt;p&gt;[Mr. Muskrat], 2002-12-10&lt;br /&gt;
Less than eight hours as a member of [pmdev] and I had already received two requests to write some code that would allow patches to modules.  Would any one care to point me in the proper direction for something like that?  I have read through the [pmdev wiki].  I have started reading the programming reference section of [http://everydevel.com/index.pl?node=The%20Everything%20Bible|The Everything Bible].  I have downloaded the Everything Engine and the pmmodules listed at [Node Lister].  What else should I read or download?  Any pointers would be greatly appreciated.&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[Mr. Muskrat], 2002-12-10&lt;br /&gt;
New kid on the block checking in again :)  [Bug Main], [new bug], [bug query] and [bugbase stats] are not being used so why not disable/remove them?  Many of the latest bugs were submitted by [Anonymous Monk]s and are blank.  (As shown in [Node lister])&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[Mr. Muskrat], 2002-12-10 13:03 CST&lt;br /&gt;
I just looked at [http://www.perlmonks.org/index.pl?node_id=106927&amp;whichtype=870&amp;sexisgood=submit|Node  lister - nodeball] and all of the links result in Permission Denied.&lt;/p&gt;
&lt;p&gt;[Mr. Muskrat], 2002-12-10&lt;br /&gt;
[tye] perhaps you should read [http://everydevel.com/index.pl?node=All%20About%20Nodeball&amp;lastnode_id=486|All about Nodeball] written by [chromatic] (just found it)&lt;br /&gt;
[chromatic] or [vroom] might be better able to answer that.  I read about it here in the [pmdev wiki].&lt;/p&gt;
&lt;p&gt;[tye], 2002-12-10&lt;br /&gt;
It predates my membership.  I've never seen a nodeball.  Perhaps that would be useful for updating a test web site.  Are they easy to make?
&lt;/p&gt;
&lt;p&gt;[Mr. Muskrat], 2002-12-09&lt;br /&gt;
Thanks [tye] for admitting me to [pmdev].  I hope that I will be able to contribute to this wonderful community.&lt;/p&gt;
&lt;p&gt;Question: What ever happened to the idea of periodically releasing a distribution or nodeball of PM related code?&lt;/p&gt;
&lt;p&gt;[tye], 2002-12-09&lt;br /&gt;
[bart]'s consideration was supposed to be a bug report for the [node status] nodelet: [http://users.telenet.be/bartl/images/approved.gif] (it says &quot;has not been approved&quot; when it shouldn't).
&lt;/p&gt;
&lt;p&gt;[tye], 2002-12-09&lt;br /&gt;
What if I write a node with a title of &quot;I want #comments in a regex&quot; ?  This dilemma has prevented me from making any changes to support such short-cuts.  After lots of time of having this in the back of my mind, I think a reasonable way forward is to support such in &lt;code&gt;[xyz://whatever#label|link text]&lt;/code&gt; style of linking and also support &lt;code&gt;[id://6364;user=tye|my writeups]&lt;/code&gt;.
&lt;/p&gt;&lt;p&gt;
But the problem remains that you might want a ; or &amp;amp; or # in that part of the data.  The HTML way to deal with that is to use URL escaping and HTML entity encoding.  But URL esaping is too much of a pain to expect people to use it when typing by hand.  So I was thinking we'd finally have a place where \ might be useful.  So, assuming a &lt;code&gt;[pm://]&lt;/code&gt; which just makes internal links with no parameters for things like &lt;code&gt;[pm://images/tye.jpg]&lt;/code&gt; you could use &lt;code&gt;[pm://node=I want \#comments in a regex]&lt;/code&gt; but &lt;code&gt;[pm://node=ybiC#links|Useful links]&lt;/code&gt;.
&lt;/p&gt;&lt;p&gt;
[footpad] was (long ago) looking into improving [Everything/HTML.pm|handleLinks()] so that [handlelinks settings] could be greatly simplified.  This and the split /\|/ bug are all related.
&lt;/p&gt;
&lt;p&gt;[Mr. Muskrat]: 2002-12-09&lt;br /&gt;
[ybiC] has noted that he cannot use &lt;code&gt;[]&lt;/code&gt; links to point to #aName sections of a page (e.g. [ybiC#name] - &lt;code&gt;[ybiC#names]&lt;/code&gt; results in &lt;b&gt;Not Found&lt;/b&gt; or [id://14909#names] - &lt;code&gt;[id://14909#names]&lt;/code&gt; results in a blank HTML comment).  I will look at the relevant code to see if this will be an easy fix.&lt;br /&gt;&lt;b&gt;Update:&lt;/b&gt; [VSarkiss] has pointed me to [id://93046].&lt;/p&gt;&lt;hr /&gt;
&lt;p&gt;[tye], 2002-12-09&lt;br /&gt;
Most reasonable nodes should be simultaneously front-paged and approved.  Perhaps this has been rare recently, but that is a problem.  I've seen days of questions w/o a single one being front-paged.  This means that the front page just sits there, stale.  Several indications make it clear that a huge majority of traffic comes via the front page. We should not have a stale front page. So we should be encouraging more front-paging, not making it harder.  I've been hoping to find time to write a discussion on this, though I did find time to update the front page to include 12 questions instead of 2.
&lt;/p&gt;&lt;p&gt;
I see two sides to the &quot;local timezone&quot; display.  If one registers a new account, then one gets some default timezone.  I've changed things so that this default is UTC.  If one doesn't change the default, then it might well be because UTC is close enough to one's local timezone.  So why not show people the timezone that other users have chosen to not stop using?  I think we could have the best of both by showing the time but appending something like &quot;(timezone unset)&quot;.  Yeah?  Nay?
&lt;/p&gt;&lt;p&gt;
I haven't looked at the &quot;mass reparent&quot; patch.  The old one already reparents all nodes under the node being reparented, so I'm guesing it iterates over all direct replies to one node and does what-the-old-code-does to each.  It'd be nice of &quot;the old code&quot; could be factored so it is used by both procedures.  I'll try to find time to look at the patch soon.  Thanks for the work. (:
&lt;/p&gt;&lt;p&gt;
Yes, sending of messages is trying to be refactored.  You &lt;em&gt;can&lt;/em&gt; call the [message] opcode, but not in a pretty way.  I've started work on refactoring all of this but it got blocked behind [Everything/HTML.pm|sub htmlcode] not being able to return a list.  I've decided to add &quot;sub nodesub&quot; that acts a lot like htmlcode() but calls the node code in a list context and stuffs error information elsewhere (htmlcode() returns the errors as HTML to be displayed in the browser).  [repeatedchatter] will be updated to also write to the DB, perhaps via another [htmlcode] &quot;routine&quot;.  But there is plenty of precedence for writing to the [message] table directly (for now).
&lt;/p&gt;&lt;p&gt;
All of the /msg-type commands will then go into [htmlcode] nodes with names like [chat/msg] and the [message] opcode will be changed to use those instead of a big elsif list.
&lt;/p&gt;&lt;p&gt;
I guess we should have an empty node titled something like &quot;new node request&quot; where [pmdev]ils can post patches that are to be interpretted as requests to add new nodes.
&lt;/p&gt;&lt;p&gt;
I guess it might be wiser to have a new node type (&quot;nodesub&quot;) that contains just Perl code, not a template (which is what [htmlcode] nodes contain) and have &quot;sub nodesub&quot; default to running those (but also being able to run [htmlcode] nodes.

&lt;/p&gt;&lt;hr /&gt;

&lt;p&gt;[dws], 2002-12-08&lt;br/&gt;
A consideration on [id://218268] raises the valid point that frontpaging a node before it's been approved doesn't make sense. How about having a single checkbox that morphs from &quot;approved&quot; to &quot;frontpaged&quot;? The cases where a node gets both at once are exceedingly rare.
&lt;hr/&gt;

&lt;p&gt;[theorbtwo], 2002-12-08&lt;br /&gt;
Two new patches: [id://218371] should not be applied, but instead a new node should be created for this.  It's a &quot;mass reparent&quot; -- it can be used to reparent all (direct and inderect) children of a given node to a new one.  I /think/ it's correct, but I'm not so sure.  Also, it does somthing rather ugly -- it directly inserts into the [message] table, instead of reusing existing code to send messages.  It does this because I know about the opcode [message], which I don't think I can call into, and [msguser], which doesn't actualy do anything -- it only creates a form, so that the user can do it -- not quite what we want, since we're potentaly going to have lots of these, and the whole point of this is to reduce the work required.&lt;/p&gt;
&lt;p&gt;Also, [id://218313] is a patch to tell people looking at a homenode when the users' TZ isn't set, instead of giving the time in the current users' TZ.&lt;/p&gt;
&lt;hr&gt;&lt;/p&gt;
&lt;p&gt;[tye], 2002-12-07&lt;br /&gt;
Yeah, I noticed a while ago that &lt;code&gt;($nodename, $title) = split /\|/, $nodename;&lt;/code&gt; is used for that.  The *.pm code is extra time-consuming to patch so I haven't added the &lt;code&gt;, 2&lt;/code&gt; to that code.
&lt;/p&gt;&lt;p&gt;
[belg4mit], I saw that [Anonymous Monk] was that way and I think it was due to some old problems where AnonyMonk could change &quot;his&quot; timezone via [user settings].  I set them back to the default timezone.  This means that they now show as being in your timezone (another bug).  Since [belg4mit|you] don't give any examples for me to investigate, I was forced to search for a lot of things.  At this point I'm assuming you were doing this checking while logged out so you were seeing AnonyMonk's timezone on people who had no timezone set.
&lt;/p&gt;
&lt;p&gt;[demerphq], 2002-12-06&lt;br /&gt;
It seems that [jdporter] has identified some minor bugs in &lt;code&gt;[]&lt;/code&gt; parsing. He was experimenting with things like &lt;code&gt;[||]&lt;/code&gt; and &lt;code&gt;[|no|comment]&lt;/code&gt; Maybe &lt;code&gt;[]&lt;/code&gt; that have more than one | in them should be ignored or something?
&lt;/p&gt;
&lt;p&gt;[belg4mit]; 2002-12-06&lt;br/&gt;
I was just wondering, is NZDT the default time zone or something?
An awful lot of monks (many of whom are documented as non-kiwis)
have a TZ of NZDT. UTC might make a more sensible default,
as defaults go.
&lt;/p&gt;

&lt;p&gt;[Aristotle], 2002-11-29&lt;br /&gt;
Thanks.&lt;/p&gt;

&lt;p&gt;[wil], 2002-11-28&lt;br /&gt;
[tye] posted a to-do list a while ago, which has now been archived [http://www.perlmonks.org/?node_id=178924#TYE-TO-DO|here].&lt;/p&gt;

&lt;p&gt;[Aristotle], 2002-11-25&lt;br /&gt;
I use [pad://Aristotle|my scratchpad] as a staging area for links to be read later or added to [Aristotle|my homenode]. However, I prefer to use bracket links on the homenode. PMifying the HTML links the &lt;em&gt;add to scratchpad&lt;/em&gt; op generates is an easy but annoying task. Is there specific reasoning behind this or can I just go ahead and [Perl Monks Discussion|ask around] to change that?&lt;/p&gt;
&lt;p&gt;Also, do we maybe have some sort of todo-list node for [pmdev] or some such? (And maybe a list of things that should change but for which a solid good new concept has yet to be suggested as well.)&lt;/p&gt;
&lt;p&gt;Lastly, I have been meaning to get a grip on Everything and start, if not working on it here on PM then at least figuring it out for quite a while now, but I have a very hard time learning bottom up by putting pieces together to form a whole. Any suggestions on how to approach this thing top down would be appreciated. Yes, I'm chewing my way through the everydevel links in the PmDev Nodelet already.&lt;/p&gt;

&lt;p&gt;[tye], 2002-11-18&lt;br /&gt;
In [id://209071] and my reply below that I note that I've long hoped to add the node type to the header (and node ID and last edit time) and how the layout needs to be adjusted to make this work.  And I was thinking of something like what [Super Search] uses to make the node types &quot;non-[pmdev]-friendly&quot;, but node types other than those listed also need to be handled.  Then we can drop the node type from the status nodelet and drop the node ID from lots of nodelets.
&lt;/p&gt;&lt;p&gt;
As always, help making this happen is appreciated.
&lt;/p&gt;
&lt;p&gt;[theorbtwo], later (2002-11-17)&lt;br /&gt;
I suspect somebody already did; it's archived... probably [Tye].  Anyway, I knew about that, but it's non-obvious, esp because it gives the nodetype's name, not the user-visable name (IE [monkdiscuss], not &quot;Perl Monks Discussion&quot;).  Just seems like it'd be a nice thing to have.
&lt;/p&gt;
&lt;p&gt;[wil], a lazy sunday afternoon&lt;br /&gt;
We could just reply and state that an user can change his Custom Node Title Definition in [user settings] to include what type nodelet they're viewing. I think this is done with the %S variable.
&lt;/p&gt;
&lt;p&gt;[theorbtwo], 2002-11-17&lt;br /&gt;
No, I didn't do anything strange.  I was rather surprised it was code, rather then a [document], too, but &amp;lt;shrug&gt;, it's a rather minor point... &lt;/p&gt;
&lt;p&gt;Unrelatedly, what do people think of putting the section name (nodetype mapped to user-visable name) directly below the node name in the upper-left, from a L&amp;amp;F point of view, as per the /msg to pmdev (archived).&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;[tye], 2002-11-15&lt;br /&gt;
Thanks.  BTW, I'm just curious. I modified [offering plate] yesterday but your patch has a date of today but appears to have been made against the offering plate from before my changes.  Did you do anything unusual when you submitted the patch?  I had modified the offering plate directly just because it didn't look like code and I didn't even realize that I could have patched it. (:  In any case, I merged my changes into your patch and then noticed some other things to fix up, added them in as well, then applied the patch.

&lt;/p&gt;
&lt;p&gt;[theorbtwo], 2002-11-15&lt;br /&gt;
Trivial patch to [offering plate] to link to current info (also commenting out the old info -- it might be better to just delete it): [id://213072]
&lt;/p&gt;
&lt;hr /&gt;
Continued in [id://218593]...
</doctext>
  <type_nodetype>68046</type_nodetype>
  <node_id>228724</node_id>
  <author_user>142755</author_user>
  <title>pmdev wiki through 2003-01-20</title>
  <createtime>2003-01-21 11:11:08</createtime>
  <nodeupdated>2005-08-02 09:37:02</nodeupdated>
</node>
